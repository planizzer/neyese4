diff --git a/android/app/build.gradle.kts b/android/app/build.gradle.kts
index b1a423f..009a9f9 100644
--- a/android/app/build.gradle.kts
+++ b/android/app/build.gradle.kts
@@ -1,5 +1,8 @@
 plugins {
     id("com.android.application")
+    // START: FlutterFire Configuration
+    id("com.google.gms.google-services")
+    // END: FlutterFire Configuration
     id("kotlin-android")
     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
     id("dev.flutter.flutter-gradle-plugin")
@@ -24,7 +27,7 @@ android {
         applicationId = "com.example.neyese4"
         // You can update the following values to match your application needs.
         // For more information, see: https://flutter.dev/to/review-gradle-config.
-        minSdk = flutter.minSdkVersion
+        minSdk = 23
         targetSdk = flutter.targetSdkVersion
         versionCode = flutter.versionCode
         versionName = flutter.versionName
diff --git a/android/app/google-services (1).json b/android/app/google-services (1).json
deleted file mode 100644
index 5ec7f71..0000000
--- a/android/app/google-services (1).json	
+++ /dev/null
@@ -1,47 +0,0 @@
-{
-  "project_info": {
-    "project_number": "1044442052507",
-    "project_id": "planizzer-neyese",
-    "storage_bucket": "planizzer-neyese.firebasestorage.app"
-  },
-  "client": [
-    {
-      "client_info": {
-        "mobilesdk_app_id": "1:1044442052507:android:88a65bad30b021447f933e",
-        "android_client_info": {
-          "package_name": "com.example.neyese4"
-        }
-      },
-      "oauth_client": [
-        {
-          "client_id": "1044442052507-tqomkcseegg12d10fk9j2d5s3d75tpll.apps.googleusercontent.com",
-          "client_type": 1,
-          "android_info": {
-            "package_name": "com.example.neyese4",
-            "certificate_hash": "5292cdf45f79562eade4d7b2be3d784cf8c78c7f"
-          }
-        },
-        {
-          "client_id": "1044442052507-rc9r310a8g41te8p170ooj43rf5tqfkc.apps.googleusercontent.com",
-          "client_type": 3
-        }
-      ],
-      "api_key": [
-        {
-          "current_key": "AIzaSyBiFgdpk1iJwFaGyalCjvTesLiejU44_Pg"
-        }
-      ],
-      "services": {
-        "appinvite_service": {
-          "other_platform_oauth_client": [
-            {
-              "client_id": "1044442052507-rc9r310a8g41te8p170ooj43rf5tqfkc.apps.googleusercontent.com",
-              "client_type": 3
-            }
-          ]
-        }
-      }
-    }
-  ],
-  "configuration_version": "1"
-}
\ No newline at end of file
diff --git a/android/app/google-services.json b/android/app/google-services.json
index 710bf7a..5ec7f71 100644
--- a/android/app/google-services.json
+++ b/android/app/google-services.json
@@ -12,7 +12,20 @@
           "package_name": "com.example.neyese4"
         }
       },
-      "oauth_client": [],
+      "oauth_client": [
+        {
+          "client_id": "1044442052507-tqomkcseegg12d10fk9j2d5s3d75tpll.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.example.neyese4",
+            "certificate_hash": "5292cdf45f79562eade4d7b2be3d784cf8c78c7f"
+          }
+        },
+        {
+          "client_id": "1044442052507-rc9r310a8g41te8p170ooj43rf5tqfkc.apps.googleusercontent.com",
+          "client_type": 3
+        }
+      ],
       "api_key": [
         {
           "current_key": "AIzaSyBiFgdpk1iJwFaGyalCjvTesLiejU44_Pg"
@@ -20,7 +33,12 @@
       ],
       "services": {
         "appinvite_service": {
-          "other_platform_oauth_client": []
+          "other_platform_oauth_client": [
+            {
+              "client_id": "1044442052507-rc9r310a8g41te8p170ooj43rf5tqfkc.apps.googleusercontent.com",
+              "client_type": 3
+            }
+          ]
         }
       }
     }
diff --git a/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
index db77bb4..17aaf43 100644
Binary files a/android/app/src/main/res/mipmap-hdpi/ic_launcher.png and b/android/app/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
index 17987b7..a66faa5 100644
Binary files a/android/app/src/main/res/mipmap-mdpi/ic_launcher.png and b/android/app/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
index 09d4391..0f443c2 100644
Binary files a/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png and b/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
index d5f1c8d..a260828 100644
Binary files a/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png and b/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
index 4d6372e..9b523bc 100644
Binary files a/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png and b/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/android/settings.gradle.kts b/android/settings.gradle.kts
index 7a0b7ee..ea1b937 100644
--- a/android/settings.gradle.kts
+++ b/android/settings.gradle.kts
@@ -19,6 +19,9 @@ pluginManagement {
 plugins {
     id("dev.flutter.flutter-plugin-loader") version "1.0.0"
     id("com.android.application") version "8.3.2" apply false
+    // START: FlutterFire Configuration
+    id("com.google.gms.google-services") version("4.3.15") apply false
+    // END: FlutterFire Configuration
     id("org.jetbrains.kotlin.android") version "1.9.22" apply false
 }
 
diff --git a/assets/google_logo.png b/assets/google_logo.png
index 4355fce..acf084c 100644
Binary files a/assets/google_logo.png and b/assets/google_logo.png differ
diff --git a/ios/Runner.xcodeproj/project.pbxproj b/ios/Runner.xcodeproj/project.pbxproj
index 83e5ccb..920012f 100644
--- a/ios/Runner.xcodeproj/project.pbxproj
+++ b/ios/Runner.xcodeproj/project.pbxproj
@@ -14,6 +14,7 @@
 		97C146FC1CF9000F007C117D /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FA1CF9000F007C117D /* Main.storyboard */; };
 		97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FD1CF9000F007C117D /* Assets.xcassets */; };
 		97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */; };
+		AD59BA953E4E352DD7EB24BF /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 2B02E24268E4F2506A5DD1A9 /* GoogleService-Info.plist */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -42,6 +43,7 @@
 /* Begin PBXFileReference section */
 		1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = GeneratedPluginRegistrant.h; sourceTree = "<group>"; };
 		1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = GeneratedPluginRegistrant.m; sourceTree = "<group>"; };
+		2B02E24268E4F2506A5DD1A9 /* GoogleService-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Runner/GoogleService-Info.plist"; sourceTree = "<group>"; };
 		331C807B294A618700263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
 		331C8081294A63A400263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = AppFrameworkInfo.plist; path = Flutter/AppFrameworkInfo.plist; sourceTree = "<group>"; };
@@ -94,6 +96,7 @@
 				97C146F01CF9000F007C117D /* Runner */,
 				97C146EF1CF9000F007C117D /* Products */,
 				331C8082294A63A400263BE5 /* RunnerTests */,
+				2B02E24268E4F2506A5DD1A9 /* GoogleService-Info.plist */,
 			);
 			sourceTree = "<group>";
 		};
@@ -216,6 +219,7 @@
 				3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */,
 				97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */,
 				97C146FC1CF9000F007C117D /* Main.storyboard in Resources */,
+				AD59BA953E4E352DD7EB24BF /* GoogleService-Info.plist in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
index d36b1fa..1319290 100644
--- a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
+++ b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
@@ -1,122 +1 @@
-{
-  "images" : [
-    {
-      "size" : "20x20",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-20x20@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "20x20",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-20x20@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-29x29@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-29x29@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-29x29@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-40x40@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-40x40@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "60x60",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-60x60@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "60x60",
-      "idiom" : "iphone",
-      "filename" : "Icon-App-60x60@3x.png",
-      "scale" : "3x"
-    },
-    {
-      "size" : "20x20",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-20x20@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "20x20",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-20x20@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-29x29@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "29x29",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-29x29@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-40x40@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "40x40",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-40x40@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "76x76",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-76x76@1x.png",
-      "scale" : "1x"
-    },
-    {
-      "size" : "76x76",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-76x76@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "83.5x83.5",
-      "idiom" : "ipad",
-      "filename" : "Icon-App-83.5x83.5@2x.png",
-      "scale" : "2x"
-    },
-    {
-      "size" : "1024x1024",
-      "idiom" : "ios-marketing",
-      "filename" : "Icon-App-1024x1024@1x.png",
-      "scale" : "1x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
+{"images":[{"size":"60x60","expected-size":"180","filename":"180.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"3x"},{"size":"40x40","expected-size":"80","filename":"80.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"2x"},{"size":"40x40","expected-size":"120","filename":"120.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"3x"},{"size":"60x60","expected-size":"120","filename":"120.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"2x"},{"size":"57x57","expected-size":"57","filename":"57.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"1x"},{"size":"29x29","expected-size":"58","filename":"58.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"2x"},{"size":"29x29","expected-size":"29","filename":"29.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"1x"},{"size":"29x29","expected-size":"87","filename":"87.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"3x"},{"size":"57x57","expected-size":"114","filename":"114.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"2x"},{"size":"20x20","expected-size":"40","filename":"40.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"2x"},{"size":"20x20","expected-size":"60","filename":"60.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"iphone","scale":"3x"},{"size":"1024x1024","filename":"1024.png","expected-size":"1024","idiom":"ios-marketing","folder":"Assets.xcassets/AppIcon.appiconset/","scale":"1x"},{"size":"40x40","expected-size":"80","filename":"80.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"2x"},{"size":"72x72","expected-size":"72","filename":"72.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"1x"},{"size":"76x76","expected-size":"152","filename":"152.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"2x"},{"size":"50x50","expected-size":"100","filename":"100.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"2x"},{"size":"29x29","expected-size":"58","filename":"58.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"2x"},{"size":"76x76","expected-size":"76","filename":"76.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"1x"},{"size":"29x29","expected-size":"29","filename":"29.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"1x"},{"size":"50x50","expected-size":"50","filename":"50.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"1x"},{"size":"72x72","expected-size":"144","filename":"144.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"2x"},{"size":"40x40","expected-size":"40","filename":"40.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"1x"},{"size":"83.5x83.5","expected-size":"167","filename":"167.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"2x"},{"size":"20x20","expected-size":"20","filename":"20.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"1x"},{"size":"20x20","expected-size":"40","filename":"40.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"ipad","scale":"2x"},{"idiom":"watch","filename":"172.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"38mm","scale":"2x","size":"86x86","expected-size":"172","role":"quickLook"},{"idiom":"watch","filename":"80.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"38mm","scale":"2x","size":"40x40","expected-size":"80","role":"appLauncher"},{"idiom":"watch","filename":"88.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"40mm","scale":"2x","size":"44x44","expected-size":"88","role":"appLauncher"},{"idiom":"watch","filename":"102.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"45mm","scale":"2x","size":"51x51","expected-size":"102","role":"appLauncher"},{"idiom":"watch","filename":"108.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"49mm","scale":"2x","size":"54x54","expected-size":"108","role":"appLauncher"},{"idiom":"watch","filename":"92.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"41mm","scale":"2x","size":"46x46","expected-size":"92","role":"appLauncher"},{"idiom":"watch","filename":"100.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"44mm","scale":"2x","size":"50x50","expected-size":"100","role":"appLauncher"},{"idiom":"watch","filename":"196.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"42mm","scale":"2x","size":"98x98","expected-size":"196","role":"quickLook"},{"idiom":"watch","filename":"216.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"44mm","scale":"2x","size":"108x108","expected-size":"216","role":"quickLook"},{"idiom":"watch","filename":"234.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"45mm","scale":"2x","size":"117x117","expected-size":"234","role":"quickLook"},{"idiom":"watch","filename":"258.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"49mm","scale":"2x","size":"129x129","expected-size":"258","role":"quickLook"},{"idiom":"watch","filename":"48.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"38mm","scale":"2x","size":"24x24","expected-size":"48","role":"notificationCenter"},{"idiom":"watch","filename":"55.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"42mm","scale":"2x","size":"27.5x27.5","expected-size":"55","role":"notificationCenter"},{"idiom":"watch","filename":"66.png","folder":"Assets.xcassets/AppIcon.appiconset/","subtype":"45mm","scale":"2x","size":"33x33","expected-size":"66","role":"notificationCenter"},{"size":"29x29","expected-size":"87","filename":"87.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"watch","role":"companionSettings","scale":"3x"},{"size":"29x29","expected-size":"58","filename":"58.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"watch","role":"companionSettings","scale":"2x"},{"size":"1024x1024","expected-size":"1024","filename":"1024.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"watch-marketing","scale":"1x"},{"size":"128x128","expected-size":"128","filename":"128.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"1x"},{"size":"256x256","expected-size":"256","filename":"256.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"1x"},{"size":"128x128","expected-size":"256","filename":"256.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"2x"},{"size":"256x256","expected-size":"512","filename":"512.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"2x"},{"size":"32x32","expected-size":"32","filename":"32.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"1x"},{"size":"512x512","expected-size":"512","filename":"512.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"1x"},{"size":"16x16","expected-size":"16","filename":"16.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"1x"},{"size":"16x16","expected-size":"32","filename":"32.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"2x"},{"size":"32x32","expected-size":"64","filename":"64.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"2x"},{"size":"512x512","expected-size":"1024","filename":"1024.png","folder":"Assets.xcassets/AppIcon.appiconset/","idiom":"mac","scale":"2x"}]}
\ No newline at end of file
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
deleted file mode 100644
index dc9ada4..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
deleted file mode 100644
index 7353c41..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
deleted file mode 100644
index 797d452..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
deleted file mode 100644
index 6ed2d93..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
deleted file mode 100644
index 4cd7b00..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
deleted file mode 100644
index fe73094..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
deleted file mode 100644
index 321773c..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
deleted file mode 100644
index 797d452..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
deleted file mode 100644
index 502f463..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
deleted file mode 100644
index 0ec3034..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
deleted file mode 100644
index 0ec3034..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
deleted file mode 100644
index e9f5fea..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
deleted file mode 100644
index 84ac32a..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
deleted file mode 100644
index 8953cba..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png and /dev/null differ
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
deleted file mode 100644
index 0467bf1..0000000
Binary files a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png and /dev/null differ
diff --git a/lib/core/api/ai_service.dart b/lib/core/api/ai_service.dart
index c859011..bf256fa 100644
--- a/lib/core/api/ai_service.dart
+++ b/lib/core/api/ai_service.dart
@@ -1,36 +1,34 @@
 // lib/core/api/ai_service.dart
 
 import 'dart:convert';
+import 'dart:io';
 import 'package:google_generative_ai/google_generative_ai.dart';
+import 'package:neyese4/core/config/api_keys.dart';
 import 'package:neyese4/data/models/enriched_recipe_content.dart';
 import 'package:neyese4/data/models/recipe_detail.dart';
-import 'package:neyese4/core/config/api_keys.dart'; // Yeni import
-import 'dart:io'; // Dosya işlemleri için
+import 'package:neyese4/data/models/user_preferences.dart';
 
 class AiService {
-  static const String _apiKey = ApiKeys.gemini; // Yeni kullanım şekli
+  static const String _apiKey = ApiKeys.gemini;
   static final _model = GenerativeModel(
     model: 'gemini-1.5-flash',
-    apiKey: _apiKey, // Artık _apiKey'e erişim güvenli.
+    apiKey: _apiKey,
     generationConfig: GenerationConfig(responseMimeType: 'application/json'),
   );
 
-// YENİ METOT: Ürün fotoğrafını ve diğer bilgileri analiz eder
+  // Ürün fotoğrafını analiz eden metot
   Future<Map<String, dynamic>> analyzeProductImage(File imageFile) async {
-    final prompt =
+    const prompt =
         "Analyze the attached image of a food product. Your primary goal is to find a barcode. If a barcode is clearly visible, return a JSON object with only one key: 'barcode'. "
         "If no barcode is visible, then identify the following details: 'productName', 'brand', 'category', 'quantity', 'unit', and 'expirationDate'. "
         "For 'category', choose from this list: ['Sebze & Meyve', 'Et & Tavuk', 'Süt Ürünleri', 'Bakliyat', 'Baharatlar', 'İçecekler', 'Atıştırmalık', 'Diğer']. "
-        "For 'quantity', find the numerical value (e.g., for '500 g', extract 500). "
+        "For 'quantity', find the numerical value of the weight/volume (e.g., for '500 g', extract 500). "
         "For 'unit', find the unit of measurement and MAP IT to one of these exact values: ['adet', 'g', 'kg', 'ml', 'L', 'paket', 'dilim', 'kaşık']. For example, if you see 'gr' or 'grams', use 'g'. "
         "For 'expirationDate', look for 'TETT' or 'SKT' and return the date in 'YYYY-MM-DD' format. "
         "Return all found information in a single, clean JSON object. If you cannot identify a piece of information, omit its key. "
-        "Example: {\"productName\": \"Sade Yulaf Ezmesi\", \"brand\": \"Eti Lifalif\", \"category\": \"Diğer\", \"quantity\": 500, \"unit\": \"g\", \"expirationDate\": \"2025-12-21\"}.";
+        "Example for a full analysis: {\"productName\": \"Sade Yulaf Ezmesi\", \"brand\": \"Eti Lifalif\", \"category\": \"Diğer\", \"quantity\": 500, \"unit\": \"g\", \"expirationDate\": \"2025-12-21\"}.";
 
-    // Resmi byte dizisine çeviriyoruz
     final imageBytes = await imageFile.readAsBytes();
-
-    // AI'a hem metin (prompt) hem de resmi (imageBytes) gönderiyoruz
     final content = [
       Content.multi([
         TextPart(prompt),
@@ -45,16 +43,13 @@ class AiService {
       print(response.text!);
       print('--------------------------');
       final jsonMap = jsonDecode(response.text!) as Map<String, dynamic>;
-      // Gelen cevabı doğru tipe çeviriyoruz
-      return {
-        'productName': jsonMap['productName'] as String? ?? '',
-        'brand': jsonMap['brand'] as String? ?? '',
-      };
+      return jsonMap;
     } else {
       throw Exception('Görüntü analizinden sonuç alınamadı.');
     }
   }
-  // YENİ METOT: Bir liste dolusu başlığı tek seferde çevirir.
+
+  // Tarif başlıklarını toplu halde çeviren metot
   Future<List<String>> translateRecipeTitles(List<String> titles) async {
     final prompt =
         'You are a helpful translator. Take the following JSON array of English recipe titles and return a JSON array of the same size with their Turkish translations. Maintain the original order and only return the JSON array.\n\n'
@@ -65,45 +60,84 @@ class AiService {
       if (response.text != null) {
         final List<dynamic> translatedList = jsonDecode(response.text!);
         return translatedList.map((e) => e.toString()).toList();
-      } else {
-        // Çeviri başarısız olursa orijinal başlıkları geri döndür
-        return titles;
       }
+      return titles;
     } catch (e) {
       print('Toplu başlık çevirme hatası: $e');
-      return titles; // Hata durumunda orijinalleri döndür
+      return titles;
     }
   }
-  // Geri kalan metodun kendisinde bir değişiklik yok.
-  Future<EnrichedRecipeContent> getEnrichedRecipeContent(RecipeDetail recipe) async {
-    final prompt =
-        'You are a helpful and creative Turkish chef assistant. '
-        'Take the following recipe information and return a JSON object with the keys: "turkish_title", "difficulty", "readyInMinutes", "tags", "estimated_nutrition", "required_utensils", "ingredients_tr", "preparation_steps", and "chef_tips".\n'
-        '- "turkish_title": (string) Translate the recipe title to Turkish.\n'
-        '- "difficulty": (string) Estimate the difficulty as "Kolay", "Orta", or "Zor".\n'
-        '- "readyInMinutes": (integer) Use the provided preparation time.\n'
-        '- "tags": (array of strings) Provide 3-4 relevant Turkish tags (e.g., "akşam yemeği", "tavuklu", "fırında").\n'
-        '- "estimated_nutrition": (object) Provide estimated values for "Kalori", "Protein", "Yağ", "Karbonhidrat".\n'
-        '- "required_utensils": (array of strings) List the necessary kitchen utensils in Turkish.\n'
-        '- "ingredients_tr": (array of objects) Translate the ingredients to Turkish. Each object must have "amount" (double), "unit" (string), and "name" (string).\n'
-        '- "preparation_steps": (array of objects) Rewrite instructions in Turkish. Each object must have "step_number" (integer), "description" (string), and optionally "duration_in_seconds" (integer) if the step requires a timer.\n'
-        '- "chef_tips": (array of strings) Provide 2-3 useful and creative tips in Turkish.\n\n'
-        'Here is the recipe information to use:\n'
-        'Title: ${recipe.title}\n'
-        'Ready in Minutes: ${recipe.readyInMinutes}\n'
-        'Ingredients List: ${recipe.extendedIngredients.map((e) => e.original).toList()}\n'
-        'Instructions: ${recipe.instructions}';
 
+  Future<List<String>> translateIngredientsToEnglish(List<String> turkishIngredients) async {
+    final prompt =
+        'You are a helpful translator. Take the following JSON array of Turkish food ingredient names and return a JSON array of the same size with their single-word or common compound English translations. Maintain the original order and only return the JSON array.\n\n'
+        'Turkish Ingredients: ${jsonEncode(turkishIngredients)}';
     try {
-      // Modeli doğrudan kullanıyoruz.
       final response = await _model.generateContent([Content.text(prompt)]);
+      if (response.text != null) {
+        final List<dynamic> translatedList = jsonDecode(response.text!);
+        return translatedList.map((e) => e.toString()).toList();
+      }
+      return turkishIngredients;
+    } catch (e) {
+      print('Malzeme çevirme hatası: $e');
+      return turkishIngredients;
+    }
+  }
+
+  // "Usta Şef" Master Prompt'unu içeren ana metot
+  Future<EnrichedRecipeContent> getEnrichedRecipeContent({
+    required RecipeDetail recipe,
+    required int targetServings,
+    required UserPreferences userPreferences,
+    required List<String> pantryIngredients,
+  }) async {
+    final prompt = '''
+You are a world-class Turkish chef and a helpful nutritional assistant. Your task is to take a raw recipe, PERSONALISE it for a specific user, SCALE it for a new portion size, and enrich it.
+
+**CONTEXT (Who you are helping):**
+The user you are helping has the following profile:
+- Target Servings: $targetServings people (the original recipe is for ${recipe.servings} people).
+- Diet: ${userPreferences.diet ?? 'None'}.
+- Allergies: ${userPreferences.intolerances?.join(', ') ?? 'None'}.
+- Ingredients they have at home (Pantry): ${pantryIngredients.join(', ')}.
+
+**YOUR TASK (What to do):**
+Based on the user's context and the raw recipe data below, you must return a single, valid JSON object.
+
+**OUTPUT FORMAT (How to respond):**
+The JSON object must have these exact keys:
+- "turkish_title": (string) The Turkish title of the recipe.
+- "difficulty": (string) "Çok Kolay", "Kolay", "Orta", or "Zor".
+- "readyInMinutes": (integer) The original preparation time.
+- "tags": (array of strings) 3-4 relevant Turkish tags.
+- "estimated_nutrition": (object) Estimated nutrition values for the SCALED portion size.
+- "required_utensils": (array of strings) Necessary kitchen utensils.
+- "ingredients_tr": (array of objects) **Crucially, scale the ingredient amounts for the 'targetServings'**. The original recipe is for ${recipe.servings} servings. If the original calls for "200g flour" for 2 servings, and the target is 4 servings, you must return "400g flour". Each object must have "amount" (double), "unit" (string), "name" (string).
+- "preparation_steps": (array of objects) Rewrite the instructions in a "chef-like" style. Be descriptive, encouraging, and clear. Use bullet points (\\n- ) for clarity. Each object must contain:
+  - "step_number": (integer)
+  - "description": (string) The detailed, chef-like instruction.
+  - "step_ingredients": (array of strings) A list of ingredients used ONLY in this specific step. **This is a mandatory field.**
+  - "duration_in_seconds": (integer, optional) The estimated duration of the step in seconds, if applicable.
+- "chef_tips": (array of strings) 2-3 genuinely useful "chef secrets".
+- "allergen_warnings": (array of strings) **Check if the recipe contains any of the user's allergies.** If it does, add a warning string for each allergen found. Example: "Uyarı: Bu tarif, 'Süt Ürünleri' alerjinizle uyumsuz olabilir." If none, return an empty array [].
+- "dietary_warnings": (array of strings) **Check if the recipe conflicts with the user's diet.** Example: If user's diet is 'Vegan' and recipe contains 'chicken', add "Uyarı: Bu tarif, 'Vegan' diyetinizle uyumlu değildir.". If none, return an empty array [].
+- "substitution_suggestions": (array of strings) **Check if any recipe ingredient is NOT in the user's pantry.** For each missing ingredient, suggest a common substitute. Example: "Kilerinizde olmayan 'balsamik sirke' yerine elma sirkesi kullanabilirsiniz.". If all ingredients are present, return an empty array [].
 
+
+**RAW RECIPE DATA TO BE TRANSFORMED:**
+Title: ${recipe.title}
+Original Servings: ${recipe.servings}
+Ingredients List: ${recipe.extendedIngredients.map((e) => e.original).toList()}
+Instructions: ${recipe.instructions}
+''';
+
+    try {
+      final response = await _model.generateContent([Content.text(prompt)]);
       if (response.text != null) {
-        // YENİ EKLENDİ: AI'dan gelen ham cevabı konsola yazdır.
-        print('--- GEMINI RAW RESPONSE ---');
+        print('--- MASTER PROMPT RESPONSE ---');
         print(response.text!);
-        print('---------------------------');
-
+        print('------------------------------');
         final jsonMap = jsonDecode(response.text!) as Map<String, dynamic>;
         return EnrichedRecipeContent.fromJson(jsonMap);
       } else {
diff --git a/lib/core/api/dio_client.dart b/lib/core/api/dio_client.dart
index 8b5db45..8973483 100644
--- a/lib/core/api/dio_client.dart
+++ b/lib/core/api/dio_client.dart
@@ -18,8 +18,8 @@ class DioClient {
     _dio = Dio(
       BaseOptions(
         baseUrl: 'https://api.spoonacular.com',
-        connectTimeout: const Duration(seconds: 5),
-        receiveTimeout: const Duration(seconds: 3),
+        connectTimeout: const Duration(seconds: 10),
+        receiveTimeout: const Duration(seconds: 6),
         // Artık güvenli bir şekilde apiKey değişkenini kullanabiliriz.
         queryParameters: {
           'apiKey': apiKey,
diff --git a/lib/core/theme/app_colors.dart b/lib/core/theme/app_colors.dart
index 9d8c69c..27e5502 100644
--- a/lib/core/theme/app_colors.dart
+++ b/lib/core/theme/app_colors.dart
@@ -13,4 +13,6 @@ class AppColors {
   static const Color primaryText = Color(0xFF2D3748);   // Koyu Kurşun
   static const Color background = Color(0xFFF7FAFC);   // Çok Açık Gri
   static const Color neutralGrey = Color(0xFFA0AEC0);   // Nötr Gri
+  static const Color primaryBackground = Color(0xFFEDF2F7); // Açık Gri/Mavi tonu
+
 }
diff --git a/lib/core/widgets/chef_loading_indicator.dart b/lib/core/widgets/chef_loading_indicator.dart
index e69de29..d936bfd 100644
--- a/lib/core/widgets/chef_loading_indicator.dart
+++ b/lib/core/widgets/chef_loading_indicator.dart
@@ -0,0 +1,74 @@
+// lib/core/widgets/chef_loading_indicator.dart
+
+import 'dart:async';
+import 'package:flutter/material.dart';
+import 'package:neyese4/core/theme/app_text_styles.dart';
+
+class ChefLoadingIndicator extends StatefulWidget {
+  const ChefLoadingIndicator({super.key});
+
+  @override
+  State<ChefLoadingIndicator> createState() => _ChefLoadingIndicatorState();
+}
+
+class _ChefLoadingIndicatorState extends State<ChefLoadingIndicator> {
+  // Kullanıcıya göstereceğimiz keyifli mesajların listesi
+  static const List<String> _loadingMessages = [
+    'Önlük giyiliyor...',
+    'Bıçaklar bileniyor...',
+    'Malzemeler hazırlanıyor...',
+    'Fırın önceden ısıtılıyor...',
+    'Lezzet sırları fısıldanıyor...',
+    'Mutfakta harikalar yaratılıyor...',
+  ];
+
+  int _currentIndex = 0;
+  Timer? _timer;
+
+  @override
+  void initState() {
+    super.initState();
+    // Her 3 saniyede bir mesajı değiştirecek bir zamanlayıcı başlatıyoruz.
+    _timer = Timer.periodic(const Duration(seconds: 3), (timer) {
+      if (mounted) {
+        setState(() {
+          // Bir sonraki mesaja geç (listenin sonuna gelince başa dön)
+          _currentIndex = (_currentIndex + 1) % _loadingMessages.length;
+        });
+      }
+    });
+  }
+
+  @override
+  void dispose() {
+    // Widget ekrandan kaldırıldığında zamanlayıcıyı iptal et.
+    _timer?.cancel();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      mainAxisAlignment: MainAxisAlignment.center,
+      children: [
+        const CircularProgressIndicator(), // Klasik yükleme animasyonu
+        const SizedBox(height: 24),
+        // Yazılar arasında yumuşak bir geçiş (fade) sağlayan widget
+        AnimatedSwitcher(
+          duration: const Duration(milliseconds: 500),
+          transitionBuilder: (Widget child, Animation<double> animation) {
+            return FadeTransition(opacity: animation, child: child);
+          },
+          child: Text(
+            // Key parametresi, AnimatedSwitcher'a hangi widget'ın değiştiğini anlatır.
+            // Bu sayede animasyonu doğru bir şekilde tetikler.
+            _loadingMessages[_currentIndex],
+            key: ValueKey<int>(_currentIndex),
+            style: AppTextStyles.body,
+            textAlign: TextAlign.center,
+          ),
+        ),
+      ],
+    );
+  }
+}
\ No newline at end of file
diff --git a/lib/data/models/enriched_recipe_content.dart b/lib/data/models/enriched_recipe_content.dart
index 8935d38..c354305 100644
--- a/lib/data/models/enriched_recipe_content.dart
+++ b/lib/data/models/enriched_recipe_content.dart
@@ -4,20 +4,29 @@ import 'package:neyese4/data/models/ingredient_info.dart';
 import 'package:neyese4/data/models/preparation_step.dart';
 
 class EnrichedRecipeContent {
-  final String imageUrl; // YENİ EKLENDİ
+  // Temel Tarif Bilgileri
   final String title;
+  final String imageUrl; // Bu alan provider tarafından doldurulur
+  final int readyInMinutes;
   final String difficulty;
   final List<String> tags;
+
+  // Detaylı İçerik
   final Map<String, String> estimatedNutrition;
   final List<String> requiredUtensils;
   final List<IngredientInfo> ingredients;
   final List<PreparationStep> preparationSteps;
   final List<String> chefTips;
-  final int readyInMinutes;
+
+  // Kişiselleştirilmiş Yapay Zeka Çıktıları
+  final List<String> allergenWarnings;
+  final List<String> dietaryWarnings;
+  final List<String> substitutionSuggestions;
 
   EnrichedRecipeContent({
-    required this.imageUrl, // YENİ EKLENDİ
     required this.title,
+    this.imageUrl = '',
+    required this.readyInMinutes,
     required this.difficulty,
     required this.tags,
     required this.estimatedNutrition,
@@ -25,16 +34,17 @@ class EnrichedRecipeContent {
     required this.ingredients,
     required this.preparationSteps,
     required this.chefTips,
-    required this.readyInMinutes,
+    this.allergenWarnings = const [],
+    this.dietaryWarnings = const [],
+    this.substitutionSuggestions = const [],
   });
 
-  // Not: fromJson metodunu DEĞİŞTİRMİYORUZ çünkü imageUrl AI'dan gelmeyecek.
+  // Gelen JSON'ı bu nesneye çevirmek için bir fabrika metodu.
   factory EnrichedRecipeContent.fromJson(Map<String, dynamic> json) {
     return EnrichedRecipeContent(
-      imageUrl: '', // Burası provider içinde doldurulacağı için boş kalabilir.
       title: json['turkish_title'] as String? ?? 'Başlık Yok',
-      difficulty: json['difficulty'] as String? ?? 'Belirtilmemiş',
       readyInMinutes: json['readyInMinutes'] as int? ?? 0,
+      difficulty: json['difficulty'] as String? ?? 'Belirtilmemiş',
       tags: (json['tags'] as List<dynamic>?)?.map((e) => e.toString()).toList() ?? [],
       estimatedNutrition: (json['estimated_nutrition'] as Map<String, dynamic>?)
           ?.map((key, value) => MapEntry(key, value.toString())) ?? {},
@@ -47,6 +57,28 @@ class EnrichedRecipeContent {
           ?.map((item) => PreparationStep.fromJson(item as Map<String, dynamic>))
           .toList() ?? [],
       chefTips: (json['chef_tips'] as List<dynamic>?)?.map((e) => e.toString()).toList() ?? [],
+
+      // Yeni kişiselleştirme alanlarını JSON'dan okuma
+      allergenWarnings: (json['allergen_warnings'] as List<dynamic>?)?.map((e) => e.toString()).toList() ?? [],
+      dietaryWarnings: (json['dietary_warnings'] as List<dynamic>?)?.map((e) => e.toString()).toList() ?? [],
+      substitutionSuggestions: (json['substitution_suggestions'] as List<dynamic>?)?.map((e) => e.toString()).toList() ?? [],
+    );
+  }
+  EnrichedRecipeContent copyWith({String? imageUrl}) {
+    return EnrichedRecipeContent(
+      title: title,
+      imageUrl: imageUrl ?? this.imageUrl,
+      readyInMinutes: readyInMinutes,
+      difficulty: difficulty,
+      tags: tags,
+      estimatedNutrition: estimatedNutrition,
+      requiredUtensils: requiredUtensils,
+      ingredients: ingredients,
+      preparationSteps: preparationSteps,
+      chefTips: chefTips,
+      allergenWarnings: allergenWarnings,
+      dietaryWarnings: dietaryWarnings,
+      substitutionSuggestions: substitutionSuggestions,
     );
   }
 }
\ No newline at end of file
diff --git a/lib/data/models/ingredient_info.dart b/lib/data/models/ingredient_info.dart
index af88e3f..2d323f3 100644
--- a/lib/data/models/ingredient_info.dart
+++ b/lib/data/models/ingredient_info.dart
@@ -13,9 +13,20 @@ class IngredientInfo {
 
   // YENİ EKLENDİ: fromJson metodu
   factory IngredientInfo.fromJson(Map<String, dynamic> json) {
+    double parsedAmount = 0.0;
+    final dynamic amountValue = json['amount']; // Değeri önce 'dynamic' olarak alıyoruz.
+
+    if (amountValue is num) {
+      // Eğer gelen değer zaten bir sayı ise, doğrudan kullan.
+      parsedAmount = amountValue.toDouble();
+    } else if (amountValue is String) {
+      // Eğer gelen değer bir metin ise, sayıya çevirmeyi dene.
+      // Başarısız olursa (örn: "biraz" gibi bir metin gelirse), varsayılan olarak 0.0 kullan.
+      parsedAmount = double.tryParse(amountValue) ?? 0.0;
+    }
+
     return IngredientInfo(
-      // num olarak gelen veriyi double'a çeviriyoruz.
-      amount: (json['amount'] as num?)?.toDouble() ?? 0.0,
+      amount: parsedAmount,
       unit: json['unit'] as String? ?? '',
       name: json['name'] as String? ?? 'Bilinmeyen Malzeme',
     );
diff --git a/lib/data/models/preparation_step.dart b/lib/data/models/preparation_step.dart
index bb15381..a0d1dae 100644
--- a/lib/data/models/preparation_step.dart
+++ b/lib/data/models/preparation_step.dart
@@ -1,22 +1,48 @@
+// lib/data/models/preparation_step.dart
+
 class PreparationStep {
-  final int stepNumber;
+  final int stepNumber;                 // <-- TEKRAR EKLENDİ
   final String description;
+  final List<String> stepIngredients;
   final String? videoPrompt;
-  final int? durationInSeconds; // YENİ: Saniye cinsinden süre
+  final String? imageUrl;
+  final int? durationInSeconds;
 
   PreparationStep({
-    required this.stepNumber,
+    required this.stepNumber,          // <-- TEKRAR EKLENDİ
     required this.description,
+    this.stepIngredients = const [],
     this.videoPrompt,
-    this.durationInSeconds, // YENİ
+    this.imageUrl,
+    this.durationInSeconds,
   });
 
   factory PreparationStep.fromJson(Map<String, dynamic> json) {
     return PreparationStep(
-      stepNumber: json['step_number'] as int? ?? 0,
-      description: json['description'] as String? ?? 'Adım açıklaması yok.',
+      // Gelen 'step_number' alanını güvenli bir şekilde alıyoruz.
+      // Eğer gelmezse varsayılan olarak 0 atar.
+      stepNumber: json['step_number'] as int? ?? 0, // <-- TEKRAR EKLENDİ
+
+      description: json['description'] as String? ?? 'Açıklama bulunamadı.',
+
+      stepIngredients: (json['step_ingredients'] as List<dynamic>?)
+          ?.map((e) => e.toString())
+          .toList() ?? [],
+
       videoPrompt: json['video_prompt'] as String?,
-      durationInSeconds: json['duration_in_seconds'] as int?, // YENİ
+      imageUrl: json['imageUrl'] as String?,
+      durationInSeconds: json['duration_in_seconds'] as int?,
     );
   }
+
+  Map<String, dynamic> toJson() {
+    return {
+      'step_number': stepNumber, // <-- TEKRAR EKLENDİ
+      'description': description,
+      'step_ingredients': stepIngredients,
+      'video_prompt': videoPrompt,
+      'imageUrl': imageUrl,
+      'duration_in_seconds': durationInSeconds,
+    };
+  }
 }
\ No newline at end of file
diff --git a/lib/data/models/recipe_detail.dart b/lib/data/models/recipe_detail.dart
index 7054933..cc5226f 100644
--- a/lib/data/models/recipe_detail.dart
+++ b/lib/data/models/recipe_detail.dart
@@ -10,10 +10,11 @@ class RecipeDetail with _$RecipeDetail {
     required int id,
     required String title,
     required String image,
-    required int readyInMinutes, // Hazırlanma süresi
-    required List<Ingredient> extendedIngredients, // Malzeme listesi
-    required String instructions, // Hazırlanış talimatları (HTML olarak gelebilir)
-    String? summary, // Tarif özeti (HTML olarak gelebilir)
+    required int readyInMinutes,
+    required int servings, // <-- YENİ EKLENEN SATIR
+    required List<Ingredient> extendedIngredients,
+    required String instructions,
+    String? summary,
   }) = _RecipeDetail;
 
   factory RecipeDetail.fromJson(Map<String, dynamic> json) =>
diff --git a/lib/data/models/recipe_detail.freezed.dart b/lib/data/models/recipe_detail.freezed.dart
index 090b255..6f57bfe 100644
--- a/lib/data/models/recipe_detail.freezed.dart
+++ b/lib/data/models/recipe_detail.freezed.dart
@@ -23,12 +23,12 @@ mixin _$RecipeDetail {
   int get id => throw _privateConstructorUsedError;
   String get title => throw _privateConstructorUsedError;
   String get image => throw _privateConstructorUsedError;
-  int get readyInMinutes =>
-      throw _privateConstructorUsedError; // Hazırlanma süresi
+  int get readyInMinutes => throw _privateConstructorUsedError;
+  int get servings =>
+      throw _privateConstructorUsedError; // <-- YENİ EKLENEN SATIR
   List<Ingredient> get extendedIngredients =>
-      throw _privateConstructorUsedError; // Malzeme listesi
-  String get instructions =>
-      throw _privateConstructorUsedError; // Hazırlanış talimatları (HTML olarak gelebilir)
+      throw _privateConstructorUsedError;
+  String get instructions => throw _privateConstructorUsedError;
   String? get summary => throw _privateConstructorUsedError;
 
   /// Serializes this RecipeDetail to a JSON map.
@@ -52,6 +52,7 @@ abstract class $RecipeDetailCopyWith<$Res> {
       String title,
       String image,
       int readyInMinutes,
+      int servings,
       List<Ingredient> extendedIngredients,
       String instructions,
       String? summary});
@@ -76,6 +77,7 @@ class _$RecipeDetailCopyWithImpl<$Res, $Val extends RecipeDetail>
     Object? title = null,
     Object? image = null,
     Object? readyInMinutes = null,
+    Object? servings = null,
     Object? extendedIngredients = null,
     Object? instructions = null,
     Object? summary = freezed,
@@ -97,6 +99,10 @@ class _$RecipeDetailCopyWithImpl<$Res, $Val extends RecipeDetail>
           ? _value.readyInMinutes
           : readyInMinutes // ignore: cast_nullable_to_non_nullable
               as int,
+      servings: null == servings
+          ? _value.servings
+          : servings // ignore: cast_nullable_to_non_nullable
+              as int,
       extendedIngredients: null == extendedIngredients
           ? _value.extendedIngredients
           : extendedIngredients // ignore: cast_nullable_to_non_nullable
@@ -126,6 +132,7 @@ abstract class _$$RecipeDetailImplCopyWith<$Res>
       String title,
       String image,
       int readyInMinutes,
+      int servings,
       List<Ingredient> extendedIngredients,
       String instructions,
       String? summary});
@@ -148,6 +155,7 @@ class __$$RecipeDetailImplCopyWithImpl<$Res>
     Object? title = null,
     Object? image = null,
     Object? readyInMinutes = null,
+    Object? servings = null,
     Object? extendedIngredients = null,
     Object? instructions = null,
     Object? summary = freezed,
@@ -169,6 +177,10 @@ class __$$RecipeDetailImplCopyWithImpl<$Res>
           ? _value.readyInMinutes
           : readyInMinutes // ignore: cast_nullable_to_non_nullable
               as int,
+      servings: null == servings
+          ? _value.servings
+          : servings // ignore: cast_nullable_to_non_nullable
+              as int,
       extendedIngredients: null == extendedIngredients
           ? _value._extendedIngredients
           : extendedIngredients // ignore: cast_nullable_to_non_nullable
@@ -193,6 +205,7 @@ class _$RecipeDetailImpl implements _RecipeDetail {
       required this.title,
       required this.image,
       required this.readyInMinutes,
+      required this.servings,
       required final List<Ingredient> extendedIngredients,
       required this.instructions,
       this.summary})
@@ -209,9 +222,11 @@ class _$RecipeDetailImpl implements _RecipeDetail {
   final String image;
   @override
   final int readyInMinutes;
-// Hazırlanma süresi
+  @override
+  final int servings;
+// <-- YENİ EKLENEN SATIR
   final List<Ingredient> _extendedIngredients;
-// Hazırlanma süresi
+// <-- YENİ EKLENEN SATIR
   @override
   List<Ingredient> get extendedIngredients {
     if (_extendedIngredients is EqualUnmodifiableListView)
@@ -220,16 +235,14 @@ class _$RecipeDetailImpl implements _RecipeDetail {
     return EqualUnmodifiableListView(_extendedIngredients);
   }
 
-// Malzeme listesi
   @override
   final String instructions;
-// Hazırlanış talimatları (HTML olarak gelebilir)
   @override
   final String? summary;
 
   @override
   String toString() {
-    return 'RecipeDetail(id: $id, title: $title, image: $image, readyInMinutes: $readyInMinutes, extendedIngredients: $extendedIngredients, instructions: $instructions, summary: $summary)';
+    return 'RecipeDetail(id: $id, title: $title, image: $image, readyInMinutes: $readyInMinutes, servings: $servings, extendedIngredients: $extendedIngredients, instructions: $instructions, summary: $summary)';
   }
 
   @override
@@ -242,6 +255,8 @@ class _$RecipeDetailImpl implements _RecipeDetail {
             (identical(other.image, image) || other.image == image) &&
             (identical(other.readyInMinutes, readyInMinutes) ||
                 other.readyInMinutes == readyInMinutes) &&
+            (identical(other.servings, servings) ||
+                other.servings == servings) &&
             const DeepCollectionEquality()
                 .equals(other._extendedIngredients, _extendedIngredients) &&
             (identical(other.instructions, instructions) ||
@@ -257,6 +272,7 @@ class _$RecipeDetailImpl implements _RecipeDetail {
       title,
       image,
       readyInMinutes,
+      servings,
       const DeepCollectionEquality().hash(_extendedIngredients),
       instructions,
       summary);
@@ -283,6 +299,7 @@ abstract class _RecipeDetail implements RecipeDetail {
       required final String title,
       required final String image,
       required final int readyInMinutes,
+      required final int servings,
       required final List<Ingredient> extendedIngredients,
       required final String instructions,
       final String? summary}) = _$RecipeDetailImpl;
@@ -297,11 +314,13 @@ abstract class _RecipeDetail implements RecipeDetail {
   @override
   String get image;
   @override
-  int get readyInMinutes; // Hazırlanma süresi
+  int get readyInMinutes;
+  @override
+  int get servings; // <-- YENİ EKLENEN SATIR
   @override
-  List<Ingredient> get extendedIngredients; // Malzeme listesi
+  List<Ingredient> get extendedIngredients;
   @override
-  String get instructions; // Hazırlanış talimatları (HTML olarak gelebilir)
+  String get instructions;
   @override
   String? get summary;
 
diff --git a/lib/data/models/recipe_detail.g.dart b/lib/data/models/recipe_detail.g.dart
index ee0b60a..4493a40 100644
--- a/lib/data/models/recipe_detail.g.dart
+++ b/lib/data/models/recipe_detail.g.dart
@@ -12,6 +12,7 @@ _$RecipeDetailImpl _$$RecipeDetailImplFromJson(Map<String, dynamic> json) =>
       title: json['title'] as String,
       image: json['image'] as String,
       readyInMinutes: (json['readyInMinutes'] as num).toInt(),
+      servings: (json['servings'] as num).toInt(),
       extendedIngredients: (json['extendedIngredients'] as List<dynamic>)
           .map((e) => Ingredient.fromJson(e as Map<String, dynamic>))
           .toList(),
@@ -25,6 +26,7 @@ Map<String, dynamic> _$$RecipeDetailImplToJson(_$RecipeDetailImpl instance) =>
       'title': instance.title,
       'image': instance.image,
       'readyInMinutes': instance.readyInMinutes,
+      'servings': instance.servings,
       'extendedIngredients': instance.extendedIngredients,
       'instructions': instance.instructions,
       'summary': instance.summary,
diff --git a/lib/data/models/saved_recipe.dart b/lib/data/models/saved_recipe.dart
index 02bbc75..c9d0523 100644
--- a/lib/data/models/saved_recipe.dart
+++ b/lib/data/models/saved_recipe.dart
@@ -23,4 +23,20 @@ class SavedRecipe extends HiveObject {
     required this.title,
     required this.image,
   });
+// FIRESTORE İÇİN EKLENEN METOTLAR
+  factory SavedRecipe.fromJson(Map<String, dynamic> json) {
+    return SavedRecipe(
+      id: json['id'] as int,
+      title: json['title'] as String,
+      image: json['image'] as String,
+    );
+  }
+
+  Map<String, dynamic> toJson() {
+    return {
+      'id': id,
+      'title': title,
+      'image': image,
+    };
+  }
 }
diff --git a/lib/data/providers.dart b/lib/data/providers.dart
index 7150364..8d6259a 100644
--- a/lib/data/providers.dart
+++ b/lib/data/providers.dart
@@ -1,53 +1,150 @@
 // lib/data/providers.dart
 
-import 'package:dio/dio.dart';
+
+import 'package:firebase_auth/firebase_auth.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:hive_flutter/hive_flutter.dart';
 import 'package:neyese4/core/api/ai_service.dart';
-import 'package:neyese4/core/api/dio_client.dart'; // dio_client importu
+import 'package:neyese4/core/api/dio_client.dart';
+import 'package:neyese4/data/models/enriched_recipe_content.dart';
+import 'package:neyese4/data/models/pantry_item.dart';
+import 'package:neyese4/data/models/recipe_suggestion.dart';
 import 'package:neyese4/data/models/saved_recipe.dart';
+import 'package:neyese4/data/repositories/pantry_repository.dart';
 import 'package:neyese4/data/repositories/product_repository.dart';
 import 'package:neyese4/data/repositories/recipe_repository.dart';
-import 'package:neyese4/data/repositories/saved_recipe_repository.dart';
-import 'package:neyese4/data/models/pantry_item.dart';
-import 'package:neyese4/data/repositories/pantry_repository.dart';
+import 'package:neyese4/features/auth/application/auth_service.dart';
+import 'package:neyese4/data/repositories/firestore_repository.dart';
+import 'package:neyese4/data/models/user_preferences.dart';
+import 'package:neyese4/data/repositories/user_preferences_repository.dart';
+import '../features/recipe_finder/application/search_query.dart';
+
+// --- AUTHENTICATION ---
+// AuthService sınıfımızın bir örneğini uygulama genelinde kullanılabilir hale getirir.
+final authServiceProvider = Provider<AuthService>((ref) => AuthService());
+
+// Kullanıcının giriş/çıkış durumundaki değişiklikleri anlık olarak dinler.
+final authStateChangesProvider = StreamProvider<User?>((ref) {
+  return ref.watch(authServiceProvider).authStateChanges;
+});
 
 
-// --- API PROVIDER'LARI ---
+// --- API SERVİSLERİ ---
+final dioClientProvider = Provider<DioClient>((ref) => DioClient());
+
+final recipeRepositoryProvider = Provider<RecipeRepository>((ref) {
+  return SpoonacularRecipeRepository(
+    dio: ref.watch(dioClientProvider).dio,
+    aiService: ref.watch(aiServiceProvider), // Bu satır çok önemli!
+  );
+});
+
+final aiServiceProvider = Provider<AiService>((ref) => AiService());
 
 final productRepositoryProvider = Provider((ref) => ProductRepository());
 
 
-// GÜNCELLENDİ: Bu provider artık doğrudan Dio nesnesi yerine, DioClient sınıfının kendisini sağlar.
-// Bu sayede DioClient'ın constructor'ı doğru şekilde çağrılır.
-final dioClientProvider = Provider<DioClient>((ref) {
-  return DioClient();
+// --- TARİF GETİRME ---
+final randomRecipesProvider = FutureProvider.autoDispose<List<RecipeSuggestion>>((ref) async {
+  final recipeRepository = ref.watch(recipeRepositoryProvider);
+  final aiService = ref.watch(aiServiceProvider);
+  final originalRecipes = await recipeRepository.getRandomRecipes();
+  if (originalRecipes.isEmpty) return [];
+  final englishTitles = originalRecipes.map((e) => e.title).toList();
+  final turkishTitles = await aiService.translateRecipeTitles(englishTitles);
+  if (originalRecipes.length == turkishTitles.length) {
+    return [for (int i = 0; i < originalRecipes.length; i++) originalRecipes[i].copyWith(title: turkishTitles[i])];
+  }
+  return originalRecipes;
 });
 
-// GÜNCELLENDİ: Bu provider artık dioClientProvider'dan DioClient'ı alır ve içindeki .dio getter'ını kullanır.
-final recipeRepositoryProvider = Provider<RecipeRepository>((ref) {
-  final dioClient = ref.watch(dioClientProvider);
-  return SpoonacularRecipeRepository(dio: dioClient.dio);
+final searchResultsProvider = FutureProvider.autoDispose.family<List<RecipeSuggestion>, SearchQuery>((ref, query) async {
+  final recipeRepository = ref.watch(recipeRepositoryProvider);
+  final aiService = ref.watch(aiServiceProvider);
+  final originalRecipes = await recipeRepository.findRecipes(query);
+  if (originalRecipes.isEmpty) return [];
+  final englishTitles = originalRecipes.map((e) => e.title).toList();
+  final turkishTitles = await aiService.translateRecipeTitles(englishTitles);
+  if (originalRecipes.length == turkishTitles.length) {
+    return [for (int i = 0; i < originalRecipes.length; i++) originalRecipes[i].copyWith(title: turkishTitles[i])];
+  }
+  return originalRecipes;
 });
 
-final aiServiceProvider = Provider<AiService>((ref) {
-  return AiService();
+final _recipeDetailProvider = FutureProvider.autoDispose.family((ref, int recipeId) {
+  final recipeRepository = ref.watch(recipeRepositoryProvider);
+  return recipeRepository.getRecipeDetailById(recipeId);
 });
 
-// --- YEREL VERİTABANI (HIVE) PROVIDER'LARI (Değişiklik yok) ---
-// YENİ: Akıllı Kiler (Pantry) kutusunu sağlayan provider.
+final fullRecipeProvider = FutureProvider.autoDispose.family<EnrichedRecipeContent, int>((ref, recipeId) async {
+  // 1. Gerekli tüm bilgileri diğer provider'lardan topluyoruz.
+  final baseRecipe = await ref.watch(_recipeDetailProvider(recipeId).future);
+  final userPreferences = ref.watch(userPreferencesProvider);
+  final pantryItems = ref.watch(pantryBoxProvider).values.map((e) => e.productName).toList();
+
+  // TODO: Porsiyon bilgisini ileride IngredientsCard'dan dinamik olarak alacağız.
+  // Şimdilik, orijinal porsiyonu hedef porsiyon olarak kabul ediyoruz.
+  final targetServings = baseRecipe.servings;
+
+  // 2. AiService'i çağırırken artık tüm bu kişisel bilgileri gönderiyoruz.
+  final aiService = ref.watch(aiServiceProvider);
+  final enrichedContent = await aiService.getEnrichedRecipeContent(
+    recipe: baseRecipe,
+    targetServings: targetServings,
+    userPreferences: userPreferences,
+    pantryIngredients: pantryItems,
+  );
+
+  // 3. AI'dan gelen içeriği, API'den gelen orijinal resim URL'i ile birleştiriyoruz.
+  return enrichedContent.copyWith(imageUrl: baseRecipe.image);
+});
+
+final dinnerIdeasProvider = FutureProvider.autoDispose<List<RecipeSuggestion>>((ref) {
+  const query = SearchQuery(type: 'main course');
+  return ref.watch(searchResultsProvider(query).future);
+});
+
+
+// --- VERİTABANI (FIRESTORE & HIVE) ---
+
+// KİLER (HIVE)
 final pantryBoxProvider = Provider((ref) => Hive.box<PantryItem>(kPantryBoxName));
 
+// KAYDEDİLEN TARİFLER (FIRESTORE)
+final firestoreRepositoryProvider = Provider<FirestoreRepository>((ref) {
+  return FirestoreRepository();
+});
+
+// Bir tarifin kayıtlı olup olmadığını KONTROL EDEN provider
+final isRecipeSavedProvider = FutureProvider.autoDispose.family<bool, int>((ref, recipeId) {
+  final user = ref.watch(authStateChangesProvider).value;
+  if (user == null) return Future.value(false);
+  return ref.watch(firestoreRepositoryProvider).isRecipeSaved(recipeId);
+});
+
+// Kaydedilen tariflerin LİSTESİNİ anlık getiren provider
+final savedRecipesStreamProvider = StreamProvider.autoDispose<List<SavedRecipe>>((ref) {
+  final user = ref.watch(authStateChangesProvider).value;
+  if (user == null) return Stream.value([]);
+  return ref.watch(firestoreRepositoryProvider).getSavedRecipesStream();
+});
+
+
+// --- KULLANICI PROFİLİ VE TERCİHLERİ ---
+
+// KULLANICI TERCİHLERİ (HIVE)
+final userPreferencesRepositoryProvider = Provider<UserPreferencesRepository>((ref) {
+  return UserPreferencesRepository();
+});
 
-final savedRecipeRepositoryProvider = Provider<SavedRecipeRepository>((ref) {
-  return SavedRecipeRepository();
+final userPreferencesStreamProvider = StreamProvider.autoDispose<BoxEvent>((ref) {
+  return ref.watch(userPreferencesRepositoryProvider).watchPreferences();
 });
 
-final savedRecipesListProvider = Provider<List<SavedRecipe>>((ref) {
-  ref.watch(savedRecipesStreamProvider);
-  return ref.read(savedRecipeRepositoryProvider).getAllSavedRecipes();
+final userPreferencesProvider = StateProvider.autoDispose<UserPreferences>((ref) {
+  ref.watch(userPreferencesStreamProvider);
+  return ref.read(userPreferencesRepositoryProvider).getPreferences();
 });
 
-final savedRecipesStreamProvider = StreamProvider.autoDispose<BoxEvent>((ref) {
-  return ref.watch(savedRecipeRepositoryProvider).watchRecipes();
-});
\ No newline at end of file
+// OYUNLAŞTIRMA (XP PUANI)
+final userXpProvider = StateProvider<int>((ref) => 0);
\ No newline at end of file
diff --git a/lib/data/repositories/firestore_repository.dart b/lib/data/repositories/firestore_repository.dart
index e69de29..7231f48 100644
--- a/lib/data/repositories/firestore_repository.dart
+++ b/lib/data/repositories/firestore_repository.dart
@@ -0,0 +1,52 @@
+// lib/data/repositories/firestore_repository.dart
+
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:neyese4/data/models/saved_recipe.dart';
+
+class FirestoreRepository {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+  final FirebaseAuth _auth = FirebaseAuth.instance;
+
+  // Anlık giriş yapmış kullanıcının ID'sini alır.
+  String? get _userId => _auth.currentUser?.uid;
+
+  // Firestore'da kullanıcının tarifler koleksiyonuna bir referans.
+  CollectionReference<SavedRecipe> _getRecipesCollection() {
+    final userId = _userId;
+    if (userId == null) {
+      throw Exception('Kullanıcı giriş yapmamış.');
+    }
+    return _firestore
+        .collection('users')
+        .doc(userId)
+        .collection('saved_recipes')
+        .withConverter<SavedRecipe>(
+      fromFirestore: (snapshot, _) => SavedRecipe.fromJson(snapshot.data()!),
+      toFirestore: (recipe, _) => recipe.toJson(),
+    );
+  }
+
+  // Firestore'a yeni bir tarif kaydeder.
+  Future<void> saveRecipe(SavedRecipe recipe) async {
+    await _getRecipesCollection().doc(recipe.id.toString()).set(recipe);
+  }
+
+  // Firestore'dan bir tarifi siler.
+  Future<void> deleteRecipe(int recipeId) async {
+    await _getRecipesCollection().doc(recipeId.toString()).delete();
+  }
+
+  // Bir tarifin kayıtlı olup olmadığını kontrol eder.
+  Future<bool> isRecipeSaved(int recipeId) async {
+    final doc = await _getRecipesCollection().doc(recipeId.toString()).get();
+    return doc.exists;
+  }
+
+  // Kaydedilmiş tüm tarifleri anlık olarak dinleyen bir Stream döndürür.
+  Stream<List<SavedRecipe>> getSavedRecipesStream() {
+    return _getRecipesCollection()
+        .snapshots()
+        .map((snapshot) => snapshot.docs.map((doc) => doc.data()).toList());
+  }
+}
\ No newline at end of file
diff --git a/lib/data/repositories/product_repository.dart b/lib/data/repositories/product_repository.dart
index 3178b20..06cb3cc 100644
--- a/lib/data/repositories/product_repository.dart
+++ b/lib/data/repositories/product_repository.dart
@@ -1,5 +1,4 @@
 import 'package:dio/dio.dart';
-import 'package:neyese4/data/models/pantry_item.dart';
 
 class ProductRepository {
   // Open Food Facts API'si için yeni bir Dio istemcisi
@@ -11,6 +10,10 @@ class ProductRepository {
       if (response.statusCode == 200 && response.data['status'] == 1) {
         // Ürün bulunduysa, verileri bir harita olarak döndür
         final product = response.data['product'];
+        // --- TEST İÇİN BU SATIRLARI EKLEYELİM ---
+        print('--- OPEN FOOD FACTS RAW DATA ---');
+        print(product);
+        // ------------------------------------
         return {
           'productName': product['product_name'] ?? '',
           'brand': product['brands'] ?? '',
diff --git a/lib/data/repositories/recipe_repository.dart b/lib/data/repositories/recipe_repository.dart
index f90cd0b..450038c 100644
--- a/lib/data/repositories/recipe_repository.dart
+++ b/lib/data/repositories/recipe_repository.dart
@@ -1,95 +1,75 @@
+// lib/data/repositories/recipe_repository.dart
+
 import 'package:dio/dio.dart';
+import 'package:neyese4/core/api/ai_service.dart';
 import 'package:neyese4/data/models/recipe_detail.dart';
 import 'package:neyese4/data/models/recipe_suggestion.dart';
-import 'package:neyese4/data/models/user_preferences.dart';
-
-import '../../features/recipe_finder/application/search_query.dart';
+import 'package:neyese4/features/recipe_finder/application/search_query.dart';
 
 abstract class RecipeRepository {
+  Future<List<RecipeSuggestion>> findRecipes(SearchQuery query);
   Future<List<RecipeSuggestion>> getRandomRecipes();
   Future<RecipeDetail> getRecipeDetailById(int id);
-  Future<List<RecipeSuggestion>> findRecipes(SearchQuery query);
 }
 
 class SpoonacularRecipeRepository implements RecipeRepository {
   final Dio dio;
-  SpoonacularRecipeRepository({required this.dio});
+  final AiService aiService; // Yapay zeka servisini kullanmak için eklendi
 
-  static const Map<String, String> _translationMap = {
-    'tavuk': 'chicken', 'pirinç': 'rice', 'pirinc': 'rice', 'domates': 'tomato', 'soğan': 'onion', 'sogan': 'onion',
-    'patates': 'potato', 'kıyma': 'minced meat', 'kiyma': 'minced meat', 'yumurta': 'egg', 'süt': 'milk', 'sut': 'milk',
-    'peynir': 'cheese', 'un': 'flour', 'biber': 'pepper', 'patlıcan': 'eggplant', 'patlican': 'eggplant',
-    'sarımsak': 'garlic', 'sarimsak': 'garlic', 'havuç': 'carrot', 'havuc': 'carrot', 'et': 'meat', 'makarna': 'pasta',
-    'zeytinyağı': 'olive oil', 'zeytinyagi': 'olive oil', 'limon': 'lemon',
-  };
-
-  String _translateIngredients(List<String> ingredients) {
-    return ingredients.map((turkishIngredient) {
-      final lowercased = turkishIngredient.toLowerCase();
-      return _translationMap[lowercased] ?? lowercased;
-    }).join(',');
-  }
+  SpoonacularRecipeRepository({
+    required this.dio,
+    required this.aiService, // Constructor'a eklendi
+  });
 
   @override
   Future<List<RecipeSuggestion>> getRandomRecipes() async {
-    // ... Bu fonksiyonda değişiklik yok ...
     try {
       final response = await dio.get('/recipes/random', queryParameters: {'number': 10});
-      if (response.statusCode == 200) {
-        final List<dynamic> results = response.data['recipes'];
-        return results.map((json) => RecipeSuggestion.fromJson(json)).toList();
-      } else { throw 'API isteği başarısız oldu: ${response.statusCode}'; }
-    } catch (e) { throw 'Beklenmedik bir hata oluştu: $e'; }
+      final results = response.data['recipes'] as List;
+      return results.map((json) => RecipeSuggestion.fromJson(json)).toList();
+    } catch (e) {
+      print('getRandomRecipes error: $e');
+      return [];
+    }
   }
 
   @override
   Future<RecipeDetail> getRecipeDetailById(int id) async {
-    // ... Bu fonksiyonda değişiklik yok ...
-    try {
-      final response = await dio.get('/recipes/$id/information');
-      if (response.statusCode == 200) {
-        return RecipeDetail.fromJson(response.data);
-      } else { throw 'API isteği başarısız oldu: ${response.statusCode}'; }
-    } catch (e) { throw 'Beklenmedik bir hata oluştu: $e'; }
+    final response = await dio.get('/recipes/$id/information?includeNutrition=false');
+    return RecipeDetail.fromJson(response.data);
   }
 
-  // GÜNCELLENDİ: Metodun adı ve aldığı parametreler değişti
   @override
   Future<List<RecipeSuggestion>> findRecipes(SearchQuery query) async {
-    final Map<String, dynamic> queryParameters = {
-      'number': 20,
-    };
+    try {
+      final Map<String, dynamic> queryParameters = {'number': 20};
 
-    // Anahtar kelime ile arama
-    if (query.query != null && query.query!.isNotEmpty) {
-      queryParameters['query'] = query.query;
-    }
+      // Anahtar kelime ile arama (Önce AI ile çevirip daha doğru sonuç alabiliriz)
+      if (query.query != null && query.query!.isNotEmpty) {
+        final translatedQuery = await aiService.translateIngredientsToEnglish([query.query!]);
+        queryParameters['query'] = translatedQuery.first;
+      }
 
-    // Malzemelerle arama
-    if (query.ingredients != null && query.ingredients!.isNotEmpty) {
-      queryParameters['includeIngredients'] = _translateIngredients(query.ingredients!);
-    }
+      // Malzemelerle arama (AI ile çeviri)
+      if (query.ingredients != null && query.ingredients!.isNotEmpty) {
+        final translatedIngredients = await aiService.translateIngredientsToEnglish(query.ingredients!);
+        queryParameters['includeIngredients'] = translatedIngredients.join(',');
+        // Arama sıralamasını malzeme uyumuna göre yap.
+        queryParameters['ranking'] = 2;
+      }
 
-    // Diyet, alerji ve diğer filtreler
-    if (query.diet != null) { queryParameters['diet'] = query.diet; }
-    if (query.intolerances != null && query.intolerances!.isNotEmpty) { queryParameters['intolerances'] = query.intolerances!.join(','); }
-    if (query.type != null) { queryParameters['type'] = query.type; }
-    if (query.cuisine != null) { queryParameters['cuisine'] = query.cuisine; }
-    // YENİ EKLENDİ: maxReadyTime parametresini API isteğine ekliyoruz.
-    if (query.maxReadyTime != null) {
-      queryParameters['maxReadyTime'] = query.maxReadyTime;
-    }
+      // Diğer filtreler
+      if (query.diet != null) queryParameters['diet'] = query.diet;
+      if (query.intolerances != null && query.intolerances!.isNotEmpty) {
+        queryParameters['intolerances'] = query.intolerances!.join(',');
+      }
 
-    try {
       final response = await dio.get('/recipes/complexSearch', queryParameters: queryParameters);
-      if (response.statusCode == 200) {
-        final List<dynamic> results = response.data['results'];
-        return results.map((json) => RecipeSuggestion.fromJson(json)).toList();
-      } else {
-        throw 'API isteği başarısız oldu: ${response.statusCode}';
-      }
+      final results = response.data['results'] as List;
+      return results.map((json) => RecipeSuggestion.fromJson(json)).toList();
     } catch (e) {
-      throw 'Beklenmedik bir hata oluştu: $e';
+      print('findRecipes error: $e');
+      return [];
     }
   }
 }
\ No newline at end of file
diff --git a/lib/features/auth/application/auth_service.dart b/lib/features/auth/application/auth_service.dart
index e69de29..e83d7c3 100644
--- a/lib/features/auth/application/auth_service.dart
+++ b/lib/features/auth/application/auth_service.dart
@@ -0,0 +1,83 @@
+// lib/features/auth/application/auth_service.dart
+
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:google_sign_in/google_sign_in.dart'; // YENİ IMPORT
+
+
+class AuthService {
+  // FirebaseAuth'in bir örneğini oluşturuyoruz.
+  final FirebaseAuth _firebaseAuth = FirebaseAuth.instance;
+  final GoogleSignIn _googleSignIn = GoogleSignIn(); // YENİ NESNE
+
+  Stream<User?> get authStateChanges => _firebaseAuth.authStateChanges();
+
+
+  Future<String?> signInWithGoogle() async {
+    try {
+      // 1. Google Giriş penceresini tetikle
+      final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();
+      if (googleUser == null) {
+        // Kullanıcı pencereyi kapattı
+        return 'Google ile giriş iptal edildi.';
+      }
+
+      // 2. Kullanıcının kimlik bilgilerini (token) al
+      final GoogleSignInAuthentication googleAuth = await googleUser.authentication;
+
+      // 3. Bu bilgileri Firebase için bir kimlik bilgisine dönüştür
+      final AuthCredential credential = GoogleAuthProvider.credential(
+        accessToken: googleAuth.accessToken,
+        idToken: googleAuth.idToken,
+      );
+
+      // 4. Firebase'e bu kimlik bilgisiyle giriş yap
+      await _firebaseAuth.signInWithCredential(credential);
+      return null; // Başarılı
+    } on FirebaseAuthException catch (e) {
+      return e.message; // Hata varsa mesajı döndür
+    } catch (e) {
+      return 'Beklenmedik bir hata oluştu: $e';
+    }
+  }
+
+  // E-posta ve şifre ile giriş yapma metodu
+  Future<String?> signInWithEmailAndPassword({
+    required String email,
+    required String password,
+  }) async {
+    try {
+      await _firebaseAuth.signInWithEmailAndPassword(
+        email: email,
+        password: password,
+      );
+      // Başarılı olursa null döndür
+      return null;
+    } on FirebaseAuthException catch (e) {
+      // Hata olursa, kullanıcıya gösterilecek hata mesajını döndür
+      return e.message;
+    }
+  }
+
+  // E-posta ve şifre ile yeni kullanıcı kaydı oluşturma metodu
+  Future<String?> signUpWithEmailAndPassword({
+    required String email,
+    required String password,
+  }) async {
+    try {
+      await _firebaseAuth.createUserWithEmailAndPassword(
+        email: email,
+        password: password,
+      );
+      // Başarılı olursa null döndür
+      return null;
+    } on FirebaseAuthException catch (e) {
+      // Hata olursa, hata mesajını döndür
+      return e.message;
+    }
+  }
+
+  // Kullanıcı çıkış yapma metodu
+  Future<void> signOut() async {
+    await _firebaseAuth.signOut();
+  }
+}
\ No newline at end of file
diff --git a/lib/features/auth/presentation/auth_wrapper.dart b/lib/features/auth/presentation/auth_wrapper.dart
index e69de29..83aca3a 100644
--- a/lib/features/auth/presentation/auth_wrapper.dart
+++ b/lib/features/auth/presentation/auth_wrapper.dart
@@ -0,0 +1,34 @@
+// lib/features/auth/presentation/auth_wrapper.dart
+
+import 'package:flutter/material.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:neyese4/data/providers.dart';
+import 'package:neyese4/features/auth/presentation/screens/login_screen.dart';
+import 'package:neyese4/main_screen.dart';
+
+class AuthWrapper extends ConsumerWidget {
+  const AuthWrapper({super.key});
+
+  @override
+  Widget build(BuildContext context, WidgetRef ref) {
+    // Giriş durumundaki değişiklikleri dinliyoruz.
+    final authState = ref.watch(authStateChangesProvider);
+
+    return authState.when(
+      data: (user) {
+        // Veri geldiğinde (kullanıcı durumu belli olduğunda)
+        if (user != null) {
+          // Eğer kullanıcı nesnesi varsa (giriş yapmışsa), ana ekranı göster.
+          return const MainScreen();
+        } else {
+          // Eğer kullanıcı nesnesi null ise (giriş yapmamışsa), giriş ekranını göster.
+          return const LoginScreen();
+        }
+      },
+      // Veri yüklenirken (kullanıcı durumu kontrol edilirken) bekleme ekranı göster.
+      loading: () => const Scaffold(body: Center(child: CircularProgressIndicator())),
+      // Hata olursa bir hata ekranı göster.
+      error: (err, stack) => Scaffold(body: Center(child: Text('Bir hata oluştu: $err'))),
+    );
+  }
+}
\ No newline at end of file
diff --git a/lib/features/auth/presentation/screens/login_screen.dart b/lib/features/auth/presentation/screens/login_screen.dart
index e69de29..d8f614b 100644
--- a/lib/features/auth/presentation/screens/login_screen.dart
+++ b/lib/features/auth/presentation/screens/login_screen.dart
@@ -0,0 +1,134 @@
+// lib/features/auth/presentation/screens/login_screen.dart
+
+import 'package:flutter/material.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart'; // Ekle
+import 'package:neyese4/core/theme/app_colors.dart';
+import 'package:neyese4/core/theme/app_text_styles.dart';
+import 'package:neyese4/data/providers.dart'; // Ekle
+import 'package:neyese4/features/auth/presentation/screens/register_screen.dart'; // Ekle
+
+class LoginScreen extends ConsumerStatefulWidget { // Değiştir
+  const LoginScreen({super.key});
+
+  @override
+  ConsumerState<LoginScreen> createState() => _LoginScreenState(); // Değiştir
+}
+
+
+class _LoginScreenState extends ConsumerState<LoginScreen> { // Değiştir
+  final _formKey = GlobalKey<FormState>();
+  final _emailController = TextEditingController();
+  final _passwordController = TextEditingController();
+
+  Future<void> _signIn() async {
+    if (_formKey.currentState!.validate()) {
+      final authService = ref.read(authServiceProvider);
+      final result = await authService.signInWithEmailAndPassword(
+        email: _emailController.text.trim(),
+        password: _passwordController.text.trim(),
+      );
+
+      if (result != null && mounted) {
+        // Hata varsa SnackBar göster
+        ScaffoldMessenger.of(context).showSnackBar(
+          SnackBar(content: Text(result)),
+        );
+      }
+      // Başarılı giriş durumunda AuthWrapper bizi otomatik olarak MainScreen'e yönlendirecek.
+    }
+  }
+
+  @override
+  void dispose() {
+    _emailController.dispose();
+    _passwordController.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      body: Center(
+        child: SingleChildScrollView(
+          padding: const EdgeInsets.all(24.0),
+          child: Form(
+            key: _formKey,
+            child: Column(
+              mainAxisAlignment: MainAxisAlignment.center,
+              crossAxisAlignment: CrossAxisAlignment.stretch,
+              children: [
+                const Text(
+                  'Neyese\'ye Hoş Geldin!',
+                  style: AppTextStyles.h1,
+                  textAlign: TextAlign.center,
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  'Giriş yaparak tariflerini kaydet ve mutfağını yönet.',
+                  style: AppTextStyles.body.copyWith(color: AppColors.neutralGrey),
+                  textAlign: TextAlign.center,
+                ),
+                const SizedBox(height: 40),
+                TextFormField(
+                  controller: _emailController,
+                  decoration: const InputDecoration(labelText: 'E-posta'),
+                  keyboardType: TextInputType.emailAddress,
+                  validator: (value) {
+                    if (value == null || !value.contains('@')) {
+                      return 'Lütfen geçerli bir e-posta adresi girin.';
+                    }
+                    return null;
+                  },
+                ),
+                const SizedBox(height: 16),
+                TextFormField(
+                  controller: _passwordController,
+                  decoration: const InputDecoration(labelText: 'Şifre'),
+                  obscureText: true,
+                  validator: (value) {
+                    if (value == null || value.length < 6) {
+                      return 'Şifreniz en az 6 karakter olmalıdır.';
+                    }
+                    return null;
+                  },
+                ),
+                const SizedBox(height: 32),
+                ElevatedButton(
+                  onPressed: _signIn,
+                  style: ElevatedButton.styleFrom(
+                    padding: const EdgeInsets.symmetric(vertical: 16),
+                    backgroundColor: AppColors.primaryAction,
+                  ),
+                  child: const Text('Giriş Yap', style: AppTextStyles.button),
+                ),// --- YENİ EKLENEN GOOGLE GİRİŞ BUTONU ---
+                const SizedBox(height: 16),
+                ElevatedButton.icon(
+                  icon: Image.asset('assets/google_logo.png', height: 24.0), // Google logosu için bir asset eklemen gerekebilir
+                  label: const Text('Google ile Giriş Yap'),
+                  onPressed: () {
+                    ref.read(authServiceProvider).signInWithGoogle();
+                  },
+                  style: ElevatedButton.styleFrom(
+                    foregroundColor: AppColors.primaryText,
+                    backgroundColor: Colors.white,
+                    padding: const EdgeInsets.symmetric(vertical: 12),
+                    side: const BorderSide(color: AppColors.neutralGrey),
+                  ),
+                ),
+                // ------------------------------------
+                const SizedBox(height: 16),
+                TextButton(
+                  onPressed: () {Navigator.of(context).push(
+                    MaterialPageRoute(builder: (context) => const RegisterScreen()),
+                  );
+                    },
+                  child: const Text('Hesabın yok mu? Kayıt Ol'),
+                )
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
diff --git a/lib/features/auth/presentation/screens/register_screen.dart b/lib/features/auth/presentation/screens/register_screen.dart
index e69de29..663cdc9 100644
--- a/lib/features/auth/presentation/screens/register_screen.dart
+++ b/lib/features/auth/presentation/screens/register_screen.dart
@@ -0,0 +1,125 @@
+// lib/features/auth/presentation/screens/register_screen.dart
+
+import 'package:flutter/material.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart'; // Ekle
+import 'package:neyese4/core/theme/app_colors.dart';
+import 'package:neyese4/core/theme/app_text_styles.dart';
+import 'package:neyese4/data/providers.dart'; // Ekle
+
+class RegisterScreen extends ConsumerStatefulWidget {
+  const RegisterScreen({super.key});
+
+  @override
+  ConsumerState<RegisterScreen> createState() => _RegisterScreenState();
+}
+// LÜTFEN BU SINIFIN TAMAMINI KOPYALAYIP DEĞİŞTİRİN
+class _RegisterScreenState extends ConsumerState<RegisterScreen> {
+  final _formKey = GlobalKey<FormState>();
+  final _emailController = TextEditingController();
+  final _passwordController = TextEditingController();
+  bool _isLoading = false; // <-- BU SATIRI EKLE
+
+
+  Future<void> _signUp() async {
+    if (_formKey.currentState!.validate()) {
+      setState(() => _isLoading = true); // <-- Yüklenmeyi başlat
+
+      final authService = ref.read(authServiceProvider);
+      final result = await authService.signUpWithEmailAndPassword(
+        email: _emailController.text.trim(),
+        password: _passwordController.text.trim(),
+      );
+
+      // İşlem bittiğinde, mounted kontrolü ile birlikte yüklenmeyi durdur.
+      if (mounted) {
+        setState(() => _isLoading = false);
+        if (result != null) {
+          ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(result)));
+        }
+      }
+    }
+  }
+
+  @override
+  void dispose() {
+    _emailController.dispose();
+    _passwordController.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        iconTheme: const IconThemeData(color: AppColors.primaryText),
+      ),
+      body: Center(
+        child: SingleChildScrollView(
+          padding: const EdgeInsets.all(24.0),
+          child: Form(
+            key: _formKey,
+            child: Column(
+              mainAxisAlignment: MainAxisAlignment.center,
+              crossAxisAlignment: CrossAxisAlignment.stretch,
+              children: [
+                const Text(
+                  'Aramıza Katıl',
+                  style: AppTextStyles.h1,
+                  textAlign: TextAlign.center,
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  'Yeni bir hesap oluşturarak mutfak macerana başla.',
+                  style: AppTextStyles.body.copyWith(color: AppColors.neutralGrey),
+                  textAlign: TextAlign.center,
+                ),
+                const SizedBox(height: 40),
+                TextFormField(
+                  controller: _emailController,
+                  decoration: const InputDecoration(labelText: 'E-posta'),
+                  keyboardType: TextInputType.emailAddress,
+                  validator: (value) {
+                    if (value == null || !value.contains('@')) {
+                      return 'Lütfen geçerli bir e-posta adresi girin.';
+                    }
+                    return null;
+                  },
+                ),
+                const SizedBox(height: 16),
+                TextFormField(
+                  controller: _passwordController,
+                  decoration: const InputDecoration(labelText: 'Şifre'),
+                  obscureText: true,
+                  validator: (value) {
+                    if (value == null || value.length < 6) {
+                      return 'Şifreniz en az 6 karakter olmalıdır.';
+                    }
+                    return null;
+                  },
+                ),
+                const SizedBox(height: 32),
+                ElevatedButton(
+                  onPressed: _isLoading ? null : _signUp, // Yükleniyorsa butonu pasif yap
+                  style: ElevatedButton.styleFrom(
+                    padding: const EdgeInsets.symmetric(vertical: 16),
+                    backgroundColor: AppColors.primaryAction,
+                  ),
+                  // Yüklenme durumuna göre ya dönen çubuğu ya da yazıyı göster
+                  child: _isLoading
+                      ? const SizedBox(
+                    height: 24,
+                    width: 24,
+                    child: CircularProgressIndicator(color: Colors.white, strokeWidth: 3),
+                  )
+                      : const Text('Kayıt Ol', style: AppTextStyles.button),
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
diff --git a/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart b/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
index 7b417de..b8810f7 100644
--- a/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
+++ b/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
@@ -1,48 +1,68 @@
 // lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
 
+import 'package:audioplayers/audioplayers.dart';
+import 'package:cached_network_image/cached_network_image.dart';
 import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart'; // YENİ: Riverpod importu
+import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:neyese4/core/theme/app_colors.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/preparation_step.dart';
-import 'package:neyese4/features/profile/application/xp_provider.dart'; // YENİ: XP Provider importu
+import 'package:neyese4/data/providers.dart';
 import 'package:timer_count_down/timer_controller.dart';
 import 'package:timer_count_down/timer_count_down.dart';
 
-// GÜNCELLENDİ: StatefulWidget -> ConsumerStatefulWidget
 class CookingModeScreen extends ConsumerStatefulWidget {
   final String recipeTitle;
   final List<PreparationStep> steps;
+  final String mainImageUrl;
 
   const CookingModeScreen({
     super.key,
     required this.recipeTitle,
     required this.steps,
+    required this.mainImageUrl,
   });
 
   @override
-  // GÜNCELLENDİ: State -> ConsumerState
   ConsumerState<CookingModeScreen> createState() => _CookingModeScreenState();
 }
 
-// GÜNCELLENDİ: State -> ConsumerState
 class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
   int _currentStepIndex = 0;
   final CountdownController _countdownController = CountdownController(autoStart: false);
+  final AudioPlayer _audioPlayer = AudioPlayer();
+
+  // Zamanlayıcının süresini tutacak olan state değişkeni
+  late int _currentDurationInSeconds;
+
+  @override
+  void initState() {
+    super.initState();
+    // Sayfa ilk açıldığında, ilk adımın süresini state'e ata
+    _currentDurationInSeconds = widget.steps.first.durationInSeconds ?? 0;
+  }
+
+  @override
+  void dispose() {
+    _audioPlayer.dispose();
+    super.dispose();
+  }
 
   void _goToNextStep() {
     if (_currentStepIndex < widget.steps.length - 1) {
-      // YENİ: Her adım geçildiğinde 10 XP kazan
       ref.read(userXpProvider.notifier).state += 10;
-      ScaffoldMessenger.of(context).showSnackBar(
-        const SnackBar(content: Text('+10 XP Kazanıldı! 🎉'), duration: Duration(seconds: 1)),
-      );
-
+      if (mounted) {
+        ScaffoldMessenger.of(context).showSnackBar(
+          const SnackBar(content: Text('+10 XP Kazanıldı! 🎉'), duration: Duration(seconds: 1)),
+        );
+      }
       setState(() {
         _currentStepIndex++;
-        _countdownController.restart();
-        _countdownController.pause();
+        // Bir sonraki adıma geçince süreyi state üzerinden güncelle
+        _currentDurationInSeconds = widget.steps[_currentStepIndex].durationInSeconds ?? 0;
       });
+      _countdownController.restart();
+      _countdownController.pause();
     }
   }
 
@@ -50,9 +70,51 @@ class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
     if (_currentStepIndex > 0) {
       setState(() {
         _currentStepIndex--;
-        _countdownController.restart();
-        _countdownController.pause();
+        // Önceki adıma geçince süreyi state üzerinden güncelle
+        _currentDurationInSeconds = widget.steps[_currentStepIndex].durationInSeconds ?? 0;
+      });
+      _countdownController.restart();
+      _countdownController.pause();
+    }
+  }
+
+  Future<void> _showSetTimerDialog() async {
+    final minutesController = TextEditingController();
+    final secondsController = TextEditingController();
+
+    final resultInSeconds = await showDialog<int>(
+      context: context,
+      builder: (context) => AlertDialog(
+        title: const Text('Zamanlayıcıyı Ayarla'),
+        content: Row(
+          mainAxisSize: MainAxisSize.min,
+          children: [
+            Expanded(child: TextField(controller: minutesController, keyboardType: TextInputType.number, decoration: const InputDecoration(labelText: 'Dakika'))),
+            const Padding(padding: EdgeInsets.symmetric(horizontal: 8.0), child: Text(':')),
+            Expanded(child: TextField(controller: secondsController, keyboardType: TextInputType.number, decoration: const InputDecoration(labelText: 'Saniye'))),
+          ],
+        ),
+        actions: [
+          TextButton(onPressed: () => Navigator.of(context).pop(), child: const Text('İptal')),
+          ElevatedButton(
+            onPressed: () {
+              final minutes = int.tryParse(minutesController.text) ?? 0;
+              final seconds = int.tryParse(secondsController.text) ?? 0;
+              Navigator.of(context).pop(minutes * 60 + seconds);
+            },
+            child: const Text('Başlat'),
+          ),
+        ],
+      ),
+    );
+
+    if (resultInSeconds != null && resultInSeconds > 0) {
+      setState(() {
+        // Kullanıcının girdiği süreyi state'e ata
+        _currentDurationInSeconds = resultInSeconds;
       });
+      // Zamanlayıcıyı yeni süreyle yeniden başlat
+      _countdownController.restart();
     }
   }
 
@@ -62,40 +124,81 @@ class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
 
     return Scaffold(
       appBar: AppBar(
-        title: Text('${_currentStepIndex + 1}. Adım / ${widget.steps.length}'),
+        title: Column(
+          children: [
+            Text(widget.recipeTitle, style: AppTextStyles.body.copyWith(fontSize: 16), maxLines: 1, overflow: TextOverflow.ellipsis),
+            Text(
+              'Adım ${_currentStepIndex + 1}/${widget.steps.length}',
+              style: AppTextStyles.caption.copyWith(color: AppColors.neutralGrey, fontSize: 12),
+            ),
+          ],
+        ),
         centerTitle: true,
         leading: IconButton(
           icon: const Icon(Icons.close),
           onPressed: () => Navigator.of(context).pop(),
         ),
       ),
-      // ... body kısmı aynı ...
       body: Padding(
         padding: const EdgeInsets.all(16.0),
         child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
           children: [
             AspectRatio(
               aspectRatio: 16 / 9,
-              child: Container(
-                decoration: BoxDecoration(
-                  color: Colors.grey.shade200,
-                  borderRadius: BorderRadius.circular(12),
-                ),
-                child: const Center(
-                  child: Icon(Icons.videocam_outlined, color: AppColors.neutralGrey, size: 48),
+              child: ClipRRect(
+                borderRadius: BorderRadius.circular(12),
+                child: CachedNetworkImage(
+                  imageUrl: currentStep.imageUrl ?? widget.mainImageUrl,
+                  fit: BoxFit.cover,
+                  placeholder: (context, url) => Container(color: AppColors.primaryBackground),
+                  errorWidget: (context, url, error) => Container(
+                    color: AppColors.primaryBackground,
+                    child: const Center(
+                        child: Icon(Icons.restaurant_menu_outlined,
+                            color: AppColors.neutralGrey, size: 48)),
+                  ),
                 ),
               ),
             ),
-            const SizedBox(height: 24),
-            if (currentStep.durationInSeconds != null)
-              _buildTimerWidget(currentStep.durationInSeconds!),
+            const SizedBox(height: 16),
+
+            GestureDetector(
+              onTap: _showSetTimerDialog,
+              child: _buildTimerWidget(),
+            ),
+
+            if (currentStep.stepIngredients.isNotEmpty)
+              Padding(
+                padding: const EdgeInsets.symmetric(vertical: 16.0),
+                child: Column(
+                  crossAxisAlignment: CrossAxisAlignment.start,
+                  children: [
+                    Text("Bu Adımın Malzemeleri:", style: AppTextStyles.body.copyWith(fontWeight: FontWeight.bold)),
+                    const SizedBox(height: 8.0),
+                    Wrap(
+                      spacing: 8.0,
+                      runSpacing: 4.0,
+                      children: currentStep.stepIngredients
+                          .map((ingredient) => Chip(
+                        label: Text(ingredient),
+                        backgroundColor: AppColors.primaryBackground,
+                        labelStyle: const TextStyle(color: AppColors.primaryText),
+                        side: BorderSide(color: Colors.grey.shade300),
+                        padding: const EdgeInsets.symmetric(horizontal: 8.0),
+                      ))
+                          .toList(),
+                    ),
+                  ],
+                ),
+              ),
             Expanded(
               child: SingleChildScrollView(
                 child: Padding(
-                  padding: const EdgeInsets.only(top: 16.0),
+                  padding: const EdgeInsets.only(top: 8.0),
                   child: Text(
                     currentStep.description,
-                    style: AppTextStyles.body.copyWith(fontSize: 20, height: 1.6),
+                    style: AppTextStyles.body.copyWith(fontSize: 20, height: 1.5),
                   ),
                 ),
               ),
@@ -104,7 +207,7 @@ class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
         ),
       ),
       bottomNavigationBar: Padding(
-        padding: const EdgeInsets.all(8.0),
+        padding: const EdgeInsets.fromLTRB(16, 8, 16, 24),
         child: Row(
           mainAxisAlignment: MainAxisAlignment.spaceBetween,
           children: [
@@ -120,12 +223,13 @@ class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
             ElevatedButton.icon(
               onPressed: () {
                 if (_currentStepIndex == widget.steps.length - 1) {
-                  // YENİ: Tarifi bitirince 50 XP bonus kazan
                   ref.read(userXpProvider.notifier).state += 50;
-                  ScaffoldMessenger.of(context).showSnackBar(
-                    const SnackBar(content: Text('Tarif Tamamlandı! +50 XP Bonus! 🏆'), duration: Duration(seconds: 2)),
-                  );
-                  Navigator.of(context).pop();
+                  if(mounted){
+                    ScaffoldMessenger.of(context).showSnackBar(
+                      const SnackBar(content: Text('Tarif Tamamlandı! +50 XP Bonus! 🏆'), duration: Duration(seconds: 2)),
+                    );
+                    Navigator.of(context).pop();
+                  }
                 } else {
                   _goToNextStep();
                 }
@@ -141,8 +245,7 @@ class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
     );
   }
 
-  // _buildTimerWidget metodu aynı
-  Widget _buildTimerWidget(int seconds) {
+  Widget _buildTimerWidget() {
     return Card(
       elevation: 2,
       shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
@@ -153,16 +256,19 @@ class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
           children: [
             Countdown(
               controller: _countdownController,
-              seconds: seconds,
+              seconds: _currentDurationInSeconds,
               build: (_, double time) => Text(
                 '${(time / 60).floor().toString().padLeft(2, '0')}:${(time % 60).floor().toString().padLeft(2, '0')}',
                 style: AppTextStyles.h1.copyWith(fontFamily: 'monospace'),
               ),
               interval: const Duration(milliseconds: 100),
               onFinished: () {
-                ScaffoldMessenger.of(context).showSnackBar(
-                  const SnackBar(content: Text('Süre doldu!')),
-                );
+                _audioPlayer.play(AssetSource('sounds/alarm.mp3'));
+                if(mounted){
+                  ScaffoldMessenger.of(context).showSnackBar(
+                    const SnackBar(content: Text('Süre doldu!')),
+                  );
+                }
               },
             ),
             Row(
diff --git a/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart b/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
index 78aacb3..8232ac5 100644
--- a/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
+++ b/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
@@ -7,7 +7,6 @@ import 'package:neyese4/core/theme/app_colors.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/saved_recipe.dart';
 import 'package:neyese4/data/providers.dart';
-import 'package:neyese4/features/recipe_finder/application/recipe_providers.dart';
 import 'package:neyese4/features/recipe_finder/presentation/screens/cooking_mode_screen.dart';
 import 'package:neyese4/features/recipe_finder/presentation/widgets/chef_tips_card.dart';
 import 'package:neyese4/features/recipe_finder/presentation/widgets/ingredients_card.dart';
@@ -15,6 +14,8 @@ import 'package:neyese4/features/recipe_finder/presentation/widgets/nutrition_ca
 import 'package:neyese4/features/recipe_finder/presentation/widgets/preparation_steps_card.dart';
 import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_title_and_meta_card.dart';
 import 'package:neyese4/features/recipe_finder/presentation/widgets/utensils_card.dart';
+import 'package:neyese4/core/widgets/chef_loading_indicator.dart';
+
 
 class RecipeDetailScreen extends ConsumerWidget {
   final int recipeId;
@@ -25,9 +26,7 @@ class RecipeDetailScreen extends ConsumerWidget {
     final recipeAsyncValue = ref.watch(fullRecipeProvider(recipeId));
 
     return recipeAsyncValue.when(
-      loading: () => const Scaffold(
-        body: Center(child: CircularProgressIndicator()),
-      ),
+      loading: () => Scaffold(body: Center(child: ChefLoadingIndicator())),
       error: (err, stack) => Scaffold(
         appBar: AppBar(title: const Text('Hata')),
         body: Center(
@@ -61,21 +60,53 @@ class RecipeDetailScreen extends ConsumerWidget {
                         ? 'https://api.allorigins.win/raw?url=${Uri.encodeComponent(content.imageUrl)}'
                         : content.imageUrl,
                     fit: BoxFit.cover,
-                    errorBuilder: (c, e, s) => const Icon(Icons.error),
+                    // YENİ EKLENEN BÖLÜM:
+                    errorBuilder: (context, error, stackTrace) {
+                      // Hata durumunda gösterilecek yedek widget
+                      return Container(
+                        color: Colors.grey.shade200,
+                        child: const Icon(
+                          Icons.image_not_supported_outlined,
+                          color: Colors.grey,
+                          size: 64,
+                        ),
+                      );
+                    },
                   ),
                 ),
                 actions: [
-                  IconButton(
-                    icon: Icon(isSaved ? Icons.bookmark : Icons.bookmark_border_outlined,
-                        color: isSaved ? AppColors.primaryAction : null),
-                    onPressed: () {
-                      final repository = ref.read(savedRecipeRepositoryProvider);
-                      if (isSaved) {
-                        repository.deleteRecipe(recipeId);
-                      } else {
-                        repository.saveRecipe(
-                            SavedRecipe(id: recipeId, title: content.title, image: content.imageUrl));
-                      }
+                  // isRecipeSavedProvider'ın sonucunu anlık dinlemek için bir Consumer kullanıyoruz.
+                  Consumer(
+                    builder: (context, ref, child) {
+                      // Artık bir Future olduğu için sonucunu "isSavedAsync" olarak alıyoruz.
+                      final isSavedAsync = ref.watch(isRecipeSavedProvider(recipeId));
+
+                      // Future'ın durumuna göre (yükleniyor, hata, veri) farklı widget'lar gösteriyoruz.
+                      return isSavedAsync.when(
+                        // Veri yüklenirken küçük bir dönme animasyonu göster
+                        loading: () => const Padding(
+                          padding: EdgeInsets.all(16.0),
+                          child: SizedBox(width: 24, height: 24, child: CircularProgressIndicator(strokeWidth: 2, color: Colors.white)),
+                        ),
+                        // Hata durumunda bir hata ikonu göster
+                        error: (err, stack) => const IconButton(icon: Icon(Icons.error_outline, color: Colors.red), onPressed: null),
+                        // Veri geldiğinde duruma göre doğru ikonu göster
+                        data: (isSaved) => IconButton(
+                          icon: Icon(isSaved ? Icons.bookmark : Icons.bookmark_border_outlined, color: isSaved ? AppColors.primaryAction : null),
+                          onPressed: () async { // <-- async ekle
+                            final repository = ref.read(firestoreRepositoryProvider);
+                            if (isSaved) {
+                              await repository.deleteRecipe(recipeId); // await ekle
+                            } else {
+                              await repository.saveRecipe( // await ekle
+                                SavedRecipe(id: recipeId, title: content.title, image: content.imageUrl),
+                              );
+                            }
+                            // İŞTE SİHİRLİ SATIR: Provider'ı tetikleyerek arayüzü güncellemeye zorla.
+                            ref.invalidate(isRecipeSavedProvider(recipeId));
+                          },
+                        ),
+                      );
                     },
                   ),
                 ],
@@ -108,14 +139,21 @@ class RecipeDetailScreen extends ConsumerWidget {
             child: ElevatedButton.icon(
               icon: const Icon(Icons.play_arrow_rounded, color: Colors.white),
               onPressed: () {
-                Navigator.of(context).push(
-                  MaterialPageRoute(
-                    builder: (context) => CookingModeScreen(
-                      recipeTitle: content.title,
-                      steps: content.preparationSteps,
+                if (content.preparationSteps.isNotEmpty) { // Bu kontrolü eklemek iyi bir pratik
+                  Navigator.of(context).push(
+                    MaterialPageRoute(
+                      builder: (context) => CookingModeScreen(
+                        recipeTitle: content.title,
+                        steps: content.preparationSteps,
+                        mainImageUrl: content.imageUrl, // <-- EKLENECEK TEK SATIR BU
+                      ),
                     ),
-                  ),
-                );
+                  );
+                } else {
+                  ScaffoldMessenger.of(context).showSnackBar(
+                    const SnackBar(content: Text('Bu tarif için hazırlık adımları bulunamadı.')),
+                  );
+                }
               },
               style: ElevatedButton.styleFrom(
                 backgroundColor: AppColors.accent,
diff --git a/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart b/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart
index ebbf3c3..465b139 100644
--- a/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart
+++ b/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart
@@ -2,9 +2,10 @@ import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
-import 'package:neyese4/features/recipe_finder/application/recipe_providers.dart';
 import 'package:neyese4/features/recipe_finder/application/search_query.dart';
 import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_detail_screen.dart';
+import 'package:neyese4/data/providers.dart';
+
 
 class RecipeResultsScreen extends ConsumerWidget {
   final SearchQuery searchQuery;
@@ -13,9 +14,10 @@ class RecipeResultsScreen extends ConsumerWidget {
 
   @override
   Widget build(BuildContext context, WidgetRef ref) {
+    final String titleText = searchQuery.query ?? searchQuery.ingredients?.join(', ') ?? 'Sonuçlar';
     final resultsAsyncValue = ref.watch(searchResultsProvider(searchQuery));
     return Scaffold(
-      appBar: AppBar(title: Text('${searchQuery.ingredients?.join(', ')} için Tarifler')),
+      appBar: AppBar(title: Text('$titleText için Tarifler')),
       body: resultsAsyncValue.when(
         loading: () => const Center(child: CircularProgressIndicator()),
         error: (err, stack) => Center(child: Text('Hata oluştu: $err')),
diff --git a/lib/features/recipe_finder/presentation/widgets/recipe_card.dart b/lib/features/recipe_finder/presentation/widgets/recipe_card.dart
index 91f2e24..d93329a 100644
--- a/lib/features/recipe_finder/presentation/widgets/recipe_card.dart
+++ b/lib/features/recipe_finder/presentation/widgets/recipe_card.dart
@@ -2,7 +2,6 @@
 
 import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
-import 'package:neyese4/core/theme/app_colors.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/recipe_suggestion.dart';
 import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_detail_screen.dart';
diff --git a/lib/main.dart b/lib/main.dart
index 2fa27d1..e28f017 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -1,24 +1,36 @@
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:hive_flutter/hive_flutter.dart';
-import 'package:neyese4/core/theme/app_colors.dart';
-import 'package:neyese4/core/theme/app_text_styles.dart';
+
 import 'package:neyese4/data/models/pantry_item.dart';
 import 'package:neyese4/data/models/saved_recipe.dart';
 import 'package:neyese4/data/models/user_preferences.dart'; // Yeni modelimizi import ediyoruz
 import 'package:neyese4/data/repositories/saved_recipe_repository.dart';
 import 'package:neyese4/data/repositories/user_preferences_repository.dart'; // Repository'yi import ediyoruz
-import 'package:neyese4/screens/kitchen_screen.dart';
-import 'package:neyese4/main_screen.dart';
-import 'package:neyese4/data/models/pantry_item.dart'; // kitchen_ingredient import'u yerine bunu kullanın
 import 'package:neyese4/data/repositories/pantry_repository.dart'; // kitchen_box sabitini buraya taşıyacağız
+import 'package:firebase_core/firebase_core.dart';
+import 'firebase_options.dart'; // FlutterFire CLI'ın oluşturduğu dosya
+import 'package:neyese4/features/auth/presentation/auth_wrapper.dart'; // Yeni import
+
+import 'package:firebase_app_check/firebase_app_check.dart'; // Bu satırı ekle
+
 
 
 
 Future<void> main() async {
-  // Flutter uygulamasının başlamadan önce yerel kodlarla iletişim kurabilmesini sağlıyoruz.
   WidgetsFlutterBinding.ensureInitialized();
 
+  await Firebase.initializeApp(
+    options: DefaultFirebaseOptions.currentPlatform,
+  );
+
+  // Geliştirme ortamında olduğumuzu belirtmek için "debug" sağlayıcısını kullanıyoruz.
+  await FirebaseAppCheck.instance.activate(
+    webProvider: ReCaptchaV3Provider('6Le3pWUrAAAAA0gROpIJynF_Z-Zu61wJIZEYLbQ'),
+    androidProvider: AndroidProvider.debug,
+    appleProvider: AppleProvider.debug, // iOS için de ekleyelim
+  );
+
 
 
   // Hive'ı Flutter için başlatıyoruz.
@@ -47,27 +59,8 @@ class NeyeseApp extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return MaterialApp(
-      title: 'Neyese',
-      theme: ThemeData(
-        fontFamily: 'Inter',
-        scaffoldBackgroundColor: AppColors.background,
-        colorScheme: ColorScheme.fromSeed(
-          seedColor: AppColors.primaryAction,
-          primary: AppColors.primaryAction,
-          secondary: AppColors.accent,
-          background: AppColors.background,
-        ),
-        textTheme: const TextTheme(
-          displayLarge: AppTextStyles.h1,
-          displayMedium: AppTextStyles.h2,
-          bodyLarge: AppTextStyles.body,
-          bodyMedium: AppTextStyles.body,
-          labelLarge: AppTextStyles.button,
-          bodySmall: AppTextStyles.caption,
-        ),
-        useMaterial3: true,
-      ),
-      home: const MainScreen(),
+      // ... (theme ayarları aynı)
+      home: const AuthWrapper(), // DEĞİŞİKLİK: Uygulama artık AuthWrapper ile başlayacak.
       debugShowCheckedModeBanner: false,
     );
   }
diff --git a/lib/screens/diet_selection_screen.dart b/lib/screens/diet_selection_screen.dart
index 53147eb..dcdc5ad 100644
--- a/lib/screens/diet_selection_screen.dart
+++ b/lib/screens/diet_selection_screen.dart
@@ -1,63 +1,70 @@
+// lib/screens/diet_selection_screen.dart
+
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
-import 'package:neyese4/data/models/user_preferences.dart'; // UserPreferences modelini import ediyoruz.
+import 'package:neyese4/data/models/user_preferences.dart';
 import 'package:neyese4/data/providers.dart';
-import 'package:neyese4/features/profile/application/profile_providers.dart';
 
 class DietSelectionScreen extends ConsumerWidget {
   const DietSelectionScreen({super.key});
 
-  final List<String> _diets = const [
-    'None', // Hiçbiri
-    'Gluten Free',
-    'Ketogenic',
-    'Vegetarian',
-    'Lacto-Vegetarian',
-    'Ovo-Vegetarian',
-    'Vegan',
-    'Pescetarian',
-    'Paleo',
-    'Primal',
-  ];
+  // YENİ YAPI: Anahtar (İngilizce API değeri) ve Değer (Türkçe UI metni)
+  // 'null' anahtarı, "Hiçbiri" seçeneğini temsil eder.
+  static const Map<String?, String> _dietsMap = {
+    null: 'Hiçbiri (Varsayılan)',
+    'Gluten Free': 'Glutensiz',
+    'Ketogenic': 'Ketojenik',
+    'Vegetarian': 'Vejetaryen',
+    'Lacto-Vegetarian': 'Lakto-Vejetaryen',
+    'Ovo-Vegetarian': 'Ovo-Vejetaryen',
+    'Vegan': 'Vegan',
+    'Pescetarian': 'Pescetarian',
+    'Paleo': 'Paleo',
+    'Primal': 'Primal',
+  };
 
   @override
   Widget build(BuildContext context, WidgetRef ref) {
     final currentPrefs = ref.watch(userPreferencesProvider);
 
+    // Haritanın anahtar ve değerlerini kolay erişim için listelere çeviriyoruz.
+    final dietKeys = _dietsMap.keys.toList();
+    final dietValues = _dietsMap.values.toList();
+
     return Scaffold(
       appBar: AppBar(
         title: const Text('Diyet Tercihini Seç'),
       ),
       body: ListView.builder(
-        itemCount: _diets.length,
+        itemCount: dietValues.length,
         itemBuilder: (context, index) {
-          final diet = _diets[index];
-          final isSelected = (diet == 'None' && currentPrefs.diet == null) || currentPrefs.diet == diet;
+          final turkishName = dietValues[index];
+          final englishKey = dietKeys[index];
 
-          return RadioListTile<String>(
-            title: Text(diet, style: AppTextStyles.body),
-            value: diet,
-            groupValue: currentPrefs.diet ?? 'None',
+          return RadioListTile<String?>(
+            title: Text(turkishName, style: AppTextStyles.body),
+            // 'groupValue', o an seçili olan değeri belirtir.
+            groupValue: currentPrefs.diet,
+            // Bu radyo butonunun temsil ettiği değer.
+            value: englishKey,
+            // Bir seçim yapıldığında çalışacak fonksiyon.
             onChanged: (String? value) {
-              if (value != null) {
-                final newDiet = value == 'None' ? null : value;
-                final repository = ref.read(userPreferencesRepositoryProvider);
-
-                // DÜZELTME: 'copyWith' yerine yeni bir UserPreferences nesnesi oluşturuyoruz.
-                // Bu, mevcut 'intolerances' (alerjiler) listesini korurken
-                // sadece 'diet' alanını günceller.
-                final updatedPrefs = UserPreferences(
-                  diet: newDiet,
-                  intolerances: currentPrefs.intolerances,
-                );
-
-                repository.savePreferences(updatedPrefs);
-              }
+              final repository = ref.read(userPreferencesRepositoryProvider);
+
+              // Mevcut tercihlerin bir kopyasını oluşturup sadece diyet alanını güncelliyoruz.
+              final updatedPrefs = UserPreferences(
+                diet: value, // Seçilen yeni İngilizce anahtarı ata
+                intolerances: currentPrefs.intolerances,
+                equipment: currentPrefs.equipment,
+              );
+
+              // Güncellenmiş tercihleri veritabanına kaydediyoruz.
+              repository.savePreferences(updatedPrefs);
             },
           );
         },
       ),
     );
   }
-}
+}
\ No newline at end of file
diff --git a/lib/screens/equipment_selection_screen.dart b/lib/screens/equipment_selection_screen.dart
index 1a65b84..dd1a885 100644
--- a/lib/screens/equipment_selection_screen.dart
+++ b/lib/screens/equipment_selection_screen.dart
@@ -1,62 +1,65 @@
+// lib/screens/equipment_selection_screen.dart
+
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/user_preferences.dart';
 import 'package:neyese4/data/providers.dart';
-import 'package:neyese4/features/profile/application/profile_providers.dart';
 
 class EquipmentSelectionScreen extends ConsumerWidget {
   const EquipmentSelectionScreen({super.key});
 
-  // Yaygın mutfak aletleri listesi.
-  final List<String> _equipment = const [
-    'Oven',
-    'Microwave',
-    'Blender',
-    'Mixer',
-    'Food Processor',
-    'Air Fryer',
-    'Slow Cooker',
-    'Grill',
-  ];
+  // YENİ YAPI: Map<String, String>
+  static const Map<String, String> _equipmentMap = {
+    'Oven': 'Fırın',
+    'Microwave': 'Mikrodalga Fırın',
+    'Blender': 'Blender',
+    'Mixer': 'Mikser',
+    'Food Processor': 'Mutfak Robotu',
+    'Air Fryer': 'Air Fryer (Sıcak Hava Fritözü)',
+    'Slow Cooker': 'Yavaş Pişirici',
+    'Grill': 'Izgara',
+    'Pressure Cooker': 'Düdüklü Tencere',
+  };
 
   @override
   Widget build(BuildContext context, WidgetRef ref) {
     final currentPrefs = ref.watch(userPreferencesProvider);
     final selectedEquipment = currentPrefs.equipment ?? [];
 
+    final equipmentKeys = _equipmentMap.keys.toList();
+    final equipmentValues = _equipmentMap.values.toList();
+
     return Scaffold(
       appBar: AppBar(
         title: const Text('Mutfak Aletleri'),
       ),
       body: ListView.builder(
-        itemCount: _equipment.length,
+        itemCount: equipmentValues.length,
         itemBuilder: (context, index) {
-          final equipmentItem = _equipment[index];
-          final isSelected = selectedEquipment.contains(equipmentItem);
+          final turkishName = equipmentValues[index];
+          final englishKey = equipmentKeys[index];
+          final isSelected = selectedEquipment.contains(englishKey);
 
           return CheckboxListTile(
-            title: Text(equipmentItem, style: AppTextStyles.body),
+            title: Text(turkishName, style: AppTextStyles.body),
             value: isSelected,
             onChanged: (bool? value) {
               if (value != null) {
                 final updatedList = List<String>.from(selectedEquipment);
 
                 if (value) {
-                  updatedList.add(equipmentItem);
+                  updatedList.add(englishKey);
                 } else {
-                  updatedList.remove(equipmentItem);
+                  updatedList.remove(englishKey);
                 }
 
                 final repository = ref.read(userPreferencesRepositoryProvider);
-
-                // Mevcut tercihlerin kopyasını oluşturup sadece aletler listesini güncelliyoruz.
                 final updatedPrefs = UserPreferences(
                   diet: currentPrefs.diet,
                   intolerances: currentPrefs.intolerances,
                   equipment: updatedList,
                 );
-
                 repository.savePreferences(updatedPrefs);
               }
             },
@@ -65,4 +68,4 @@ class EquipmentSelectionScreen extends ConsumerWidget {
       ),
     );
   }
-}
+}
\ No newline at end of file
diff --git a/lib/screens/home_screen.dart b/lib/screens/home_screen.dart
index 5e4c478..325d99a 100644
--- a/lib/screens/home_screen.dart
+++ b/lib/screens/home_screen.dart
@@ -1,17 +1,14 @@
-import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:neyese4/core/theme/app_colors.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/recipe_suggestion.dart';
-import 'package:neyese4/data/models/saved_recipe.dart';
 import 'package:neyese4/data/providers.dart';
-import 'package:neyese4/features/profile/application/profile_providers.dart';
-import 'package:neyese4/features/recipe_finder/application/recipe_providers.dart';
 import 'package:neyese4/features/recipe_finder/application/search_query.dart';
-import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_detail_screen.dart';
 import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_results_screen.dart';
 import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_card.dart';
+import 'package:neyese4/core/widgets/chef_loading_indicator.dart';
+
 
 class HomeScreen extends ConsumerStatefulWidget {
   const HomeScreen({super.key});
@@ -28,8 +25,41 @@ class _HomeScreenState extends ConsumerState<HomeScreen> {
     super.dispose();
   }
 
+// lib/screens/home_screen.dart
+
   void _findRecipes() {
-    // ... Bu metotta değişiklik yok ...
+    final rawQuery = _searchController.text.trim();
+    if (rawQuery.isEmpty) {
+      ScaffoldMessenger.of(context).showSnackBar(
+        const SnackBar(content: Text('Lütfen bir arama terimi veya malzeme girin.')),
+      );
+      return;
+    }
+
+    final userPrefs = ref.read(userPreferencesProvider);
+    SearchQuery searchQuery;
+
+    // Virgül veya boşlukla ayrılmış kelimeleri malzeme olarak kabul et.
+    final ingredients = rawQuery
+        .replaceAll(',', ' ') // Virgülleri boşluğa çevir
+        .split(' ')          // Boşluklara göre ayır
+        .map((e) => e.trim())  // Başındaki/sonundaki boşlukları temizle
+        .where((e) => e.isNotEmpty) // Boş elemanları kaldır
+        .toList();
+
+    // Eğer birden fazla kelime varsa veya tek kelime ama malzeme gibi görünüyorsa
+    // malzeme araması yap. Şimdilik basitçe, her zaman malzeme araması yapabiliriz.
+    searchQuery = SearchQuery(
+      ingredients: ingredients,
+      diet: userPrefs.diet,
+      intolerances: userPrefs.intolerances,
+    );
+
+    Navigator.of(context).push(
+      MaterialPageRoute(
+        builder: (context) => RecipeResultsScreen(searchQuery: searchQuery),
+      ),
+    );
   }
 
   void _findRecipesFromMyKitchen() {
@@ -55,7 +85,7 @@ class _HomeScreenState extends ConsumerState<HomeScreen> {
     // GÜNCELLENDİ: pantryBoxProvider kullanılıyor
     final pantryBox = ref.watch(pantryBoxProvider);
     final myPantryItems = pantryBox.values.toList();
-    final savedRecipes = ref.watch(savedRecipesListProvider);
+
 
     return Scaffold(
       body: SingleChildScrollView(
@@ -72,8 +102,29 @@ class _HomeScreenState extends ConsumerState<HomeScreen> {
               ),
               const SizedBox(height: 40),
               _buildCategoriesSection(),
-              const SizedBox(height: 40),
-              _buildLatestSavesSection(savedRecipes),
+              const SizedBox(height: 40),Consumer(
+                builder: (context, ref, child) {
+                  // Artık Firestore'dan gelen anlık Stream'i dinliyoruz.
+                  final savedRecipesAsync = ref.watch(savedRecipesStreamProvider);
+
+                  // Stream'in durumuna göre arayüzü çiziyoruz.
+                  return savedRecipesAsync.when(
+                    loading: () => const SizedBox.shrink(), // Yüklenirken hiçbir şey gösterme
+                    error: (e, s) => const SizedBox.shrink(), // Hata olursa hiçbir şey gösterme
+                    data: (recipes) {
+                      // Eğer hiç kaydedilmiş tarif yoksa, bölümü hiç çizme
+                      if (recipes.isEmpty) {
+                        return const SizedBox.shrink();
+                      }
+                      // Tarifler varsa, karuseli _buildRecipeCarousel ile çiz
+                      return _buildRecipeCarousel(
+                        title: 'Son Kaydettiklerin',
+                        recipes: recipes.reversed.map((e) => RecipeSuggestion(id: e.id, title: e.title, image: e.image)).toList(),
+                      );
+                    },
+                  );
+                },
+              ),
               _buildRecipeCarousel(title: 'Akşam Yemeği Fikirleri', asyncValue: dinnerIdeasAsyncValue),
               _buildRecipeCarousel(title: 'Günün Önerileri', asyncValue: randomRecipesAsyncValue),
             ],
@@ -220,13 +271,6 @@ class _HomeScreenState extends ConsumerState<HomeScreen> {
     );
   }
 
-  Widget _buildLatestSavesSection(List<SavedRecipe> savedRecipes) {
-    if (savedRecipes.isEmpty) return const SizedBox.shrink();
-    return _buildRecipeCarousel(
-      title: 'Son Kaydettiklerin',
-      recipes: savedRecipes.reversed.map((e) => RecipeSuggestion(id: e.id, title: e.title, image: e.image)).toList(),
-    );
-  }
 
   Widget _buildRecipeCarousel({
     required String title,
@@ -246,7 +290,7 @@ class _HomeScreenState extends ConsumerState<HomeScreen> {
           child: asyncValue != null
               ? asyncValue.when(
             data: (recipes) => _buildCarouselListView(recipes),
-            loading: () => const Center(child: CircularProgressIndicator()),
+            loading: () => Center(child: ChefLoadingIndicator()),
             error: (err, stack) => Center(child: Text('Öneriler yüklenemedi: $err')),
           )
               : _buildCarouselListView(recipes ?? []),
diff --git a/lib/screens/intolerance_selection_screen.dart b/lib/screens/intolerance_selection_screen.dart
index 9540285..ba4bd1d 100644
--- a/lib/screens/intolerance_selection_screen.dart
+++ b/lib/screens/intolerance_selection_screen.dart
@@ -1,73 +1,73 @@
+// lib/screens/intolerance_selection_screen.dart
+
 import 'package:flutter/material.dart';
 import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/user_preferences.dart';
 import 'package:neyese4/data/providers.dart';
-import 'package:neyese4/features/profile/application/profile_providers.dart';
 
 class IntoleranceSelectionScreen extends ConsumerWidget {
   const IntoleranceSelectionScreen({super.key});
 
-  // Spoonacular API'nin desteklediği bazı yaygın hassasiyetler.
-  final List<String> _intolerances = const [
-    'Dairy',
-    'Egg',
-    'Gluten',
-    'Grain',
-    'Peanut',
-    'Seafood',
-    'Sesame',
-    'Shellfish',
-    'Soy',
-    'Sulfite',
-    'Tree Nut',
-    'Wheat',
-  ];
+  // YENİ YAPI: Anahtar (İngilizce API değeri) ve Değer (Türkçe UI metni)
+  static const Map<String, String> _intolerancesMap = {
+    'Dairy': 'Süt Ürünleri',
+    'Egg': 'Yumurta',
+    'Gluten': 'Gluten',
+    'Grain': 'Tahıl',
+    'Peanut': 'Yer Fıstığı',
+    'Seafood': 'Deniz Mahsulleri',
+    'Sesame': 'Susam',
+    'Shellfish': 'Kabuklu Deniz Ürünleri',
+    'Soy': 'Soya',
+    'Sulfite': 'Sülfit',
+    'Tree Nut': 'Ağaç Fıstığı',
+    'Wheat': 'Buğday',
+  };
 
   @override
   Widget build(BuildContext context, WidgetRef ref) {
-    // Kullanıcının mevcut tercihlerini dinliyoruz.
     final currentPrefs = ref.watch(userPreferencesProvider);
-    // Kayıtlı hassasiyetler listesini alıyoruz. Eğer boşsa, boş bir liste oluşturuyoruz.
+    // Kayıtlı olanlar hala İngilizce anahtarlar
     final selectedIntolerances = currentPrefs.intolerances ?? [];
 
+    // Ekranda göstermek için Türkçe değerleri ve İngilizce anahtarları listeye çeviriyoruz
+    final intoleranceKeys = _intolerancesMap.keys.toList();
+    final intoleranceValues = _intolerancesMap.values.toList();
+
     return Scaffold(
       appBar: AppBar(
         title: const Text('Alerji ve Hassasiyetler'),
       ),
       body: ListView.builder(
-        itemCount: _intolerances.length,
+        itemCount: intoleranceValues.length,
         itemBuilder: (context, index) {
-          final intolerance = _intolerances[index];
-          // O anki hassasiyetin, kullanıcının seçtiği listede olup olmadığını kontrol ediyoruz.
-          final isSelected = selectedIntolerances.contains(intolerance);
+          final turkishName = intoleranceValues[index];
+          final englishKey = intoleranceKeys[index];
+          // Seçili olup olmadığını İngilizce anahtara göre kontrol ediyoruz
+          final isSelected = selectedIntolerances.contains(englishKey);
 
           return CheckboxListTile(
-            title: Text(intolerance, style: AppTextStyles.body),
+            title: Text(turkishName, style: AppTextStyles.body),
             value: isSelected,
             onChanged: (bool? value) {
               if (value != null) {
-                // Mevcut seçili listeyi düzenlenebilir bir kopyaya çeviriyoruz.
                 final updatedList = List<String>.from(selectedIntolerances);
 
                 if (value) {
-                  // Eğer kutu işaretlendiyse, hassasiyeti listeye ekliyoruz.
-                  updatedList.add(intolerance);
+                  // Seçildiğinde listeye İngilizce anahtarı ekle
+                  updatedList.add(englishKey);
                 } else {
-                  // Eğer işaret kaldırıldıysa, hassasiyeti listeden çıkarıyoruz.
-                  updatedList.remove(intolerance);
+                  // Seçim kaldırıldığında listeden İngilizce anahtarı çıkar
+                  updatedList.remove(englishKey);
                 }
 
-                // Veritabanı repository'sine erişiyoruz.
                 final repository = ref.read(userPreferencesRepositoryProvider);
-
-                // Mevcut tercihlerin bir kopyasını oluşturup sadece hassasiyetler listesini güncelliyoruz.
                 final updatedPrefs = UserPreferences(
                   diet: currentPrefs.diet,
                   intolerances: updatedList,
+                  equipment: currentPrefs.equipment,
                 );
-
-                // Güncellenmiş tercihleri veritabanına kaydediyoruz.
                 repository.savePreferences(updatedPrefs);
               }
             },
@@ -76,4 +76,4 @@ class IntoleranceSelectionScreen extends ConsumerWidget {
       ),
     );
   }
-}
+}
\ No newline at end of file
diff --git a/lib/screens/kitchen_screen.dart b/lib/screens/kitchen_screen.dart
index 494fab2..81c515d 100644
--- a/lib/screens/kitchen_screen.dart
+++ b/lib/screens/kitchen_screen.dart
@@ -1,3 +1,4 @@
+// lib/screens/kitchen_screen.dart
 
 import 'dart:io';
 import 'package:flutter/material.dart';
@@ -5,26 +6,14 @@ import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:hive_flutter/hive_flutter.dart';
 import 'package:image_picker/image_picker.dart';
 import 'package:intl/intl.dart';
-import 'package:neyese4/core/api/ai_service.dart';
 import 'package:neyese4/core/theme/app_colors.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/pantry_item.dart';
 import 'package:neyese4/data/providers.dart';
-import 'package:neyese4/data/repositories/product_repository.dart';
 
 class KitchenScreen extends ConsumerWidget {
   const KitchenScreen({super.key});
 
-  void _showInfoToast(BuildContext context, String message) {
-    ScaffoldMessenger.of(context).showSnackBar(
-      SnackBar(
-        content: Text(message),
-        duration: const Duration(seconds: 4),
-        behavior: SnackBarBehavior.floating,
-      ),
-    );
-  }
-
   Future<void> _getImageAndAnalyze(ImageSource source, BuildContext context, WidgetRef ref) async {
     final ImagePicker picker = ImagePicker();
     final XFile? image = await picker.pickImage(source: source, imageQuality: 70);
@@ -35,160 +24,80 @@ class KitchenScreen extends ConsumerWidget {
     try {
       final aiService = ref.read(aiServiceProvider);
       final productRepo = ref.read(productRepositoryProvider);
-      Map<String, dynamic>? finalData;
 
+      // 1. Her zaman önce Gemini ile görüntüyü analiz et. Bu bizim temel ve en güvenilir verimiz.
       final aiResult = await aiService.analyzeProductImage(File(image.path));
+
+      // 2. Analiz sonucunda bir barkod var mı kontrol et.
       final String? barcode = aiResult['barcode']?.toString();
+      Map<String, dynamic> finalData = aiResult; // Başlangıç verimiz her zaman AI sonucu.
 
+      // 3. Eğer barkod varsa, ek bilgi için Open Food Facts'e git.
       if (barcode != null && barcode.isNotEmpty) {
-        finalData = await productRepo.fetchProductByBarcode(barcode);
-        finalData ??= aiResult;
-      } else {
-        finalData = aiResult;
-      }
-
-      Navigator.pop(context);
-
-      // GÜNCELLENDİ: Formu açmadan önce eksik bilgi kontrolü ve bilgilendirme
-      // Kullanıcıya her zaman bir geri bildirim veriyoruz.
-      if (finalData == null || finalData.isEmpty) {
-        _showInfoToast(context, 'Ürün bilgileri okunamadı. Lütfen bilgileri elle girin.');
-      } else if (finalData['expirationDate'] == null) {
-        _showInfoToast(context, 'Ürünün son kullanma tarihi okunamadı. Lütfen manuel olarak girin.');
-      } else {
-        _showInfoToast(context, 'Ürün bilgileri forma dolduruldu. Lütfen kontrol edin.');
+        final barcodeResult = await productRepo.fetchProductByBarcode(barcode);
+
+        // 4. Eğer oradan da bir sonuç geldiyse, iki sonucu birleştir.
+        // Önce barkod verisini al, sonra AI verisiyle üzerine yaz.
+        // Bu, AI'ın daha iyi ayrıştırdığı quantity, unit, category gibi alanları korur.
+        if (barcodeResult != null) {
+          finalData = {
+            ...barcodeResult, // Temel veriyi al (örn: resmi ürün adı)
+            ...aiResult,      // AI'dan gelen yapısal veriyi üzerine yazarak önceliklendir
+          };
+        }
       }
 
+      Navigator.pop(context); // Yükleniyor dialog'unu kapat
       _showAddItemFormSheet(context, ref, initialData: finalData);
 
-    } catch (e) {
+    }  catch (e) {
       Navigator.pop(context);
-      _showInfoToast(context, 'Fotoğraf analiz edilemedi: $e');
+      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Analiz işlemi başarısız: $e')));
     }
   }
 
   void _showImageSourceOptions(BuildContext context, WidgetRef ref) {
-    showModalBottomSheet(
-      context: context,
-      builder: (ctx) {
-        return Wrap(
-          children: <Widget>[
-            ListTile(
-              leading: const Icon(Icons.photo_camera),
-              title: const Text('Kamerayı Kullan'),
-              onTap: () {
-                Navigator.pop(ctx);
-                _getImageAndAnalyze(ImageSource.camera, context, ref);
-              },
-            ),
-            ListTile(
-              leading: const Icon(Icons.photo_library),
-              title: const Text('Galeriden Seç'),
-              onTap: () {
-                Navigator.pop(ctx);
-                _getImageAndAnalyze(ImageSource.gallery, context, ref);
-              },
-            ),
-          ],
-        );
-      },
-    );
+    showModalBottomSheet(context: context, builder: (ctx) => Wrap(children: <Widget>[
+      ListTile(leading: const Icon(Icons.photo_camera), title: const Text('Kamerayı Kullan'), onTap: () { Navigator.pop(ctx); _getImageAndAnalyze(ImageSource.camera, context, ref); }),
+      ListTile(leading: const Icon(Icons.photo_library), title: const Text('Galeriden Seç'), onTap: () { Navigator.pop(ctx); _getImageAndAnalyze(ImageSource.gallery, context, ref); }),
+    ]));
   }
 
   void _showAddOptions(BuildContext context, WidgetRef ref) {
-    showModalBottomSheet(
-      context: context,
-      shape: const RoundedRectangleBorder(borderRadius: BorderRadius.vertical(top: Radius.circular(20))),
-      builder: (ctx) {
-        return Wrap(
-          children: <Widget>[
-            ListTile(
-              leading: const Icon(Icons.camera_alt_outlined),
-              title: const Text('Fotoğraf ile Otomatik Ekle'),
-              onTap: () {
-                Navigator.pop(ctx);
-                _showImageSourceOptions(context, ref);
-              },
-            ),
-            ListTile(
-              leading: const Icon(Icons.edit_note),
-              title: const Text('Elle Ekle'),
-              onTap: () {
-                Navigator.pop(ctx);
-                _showAddItemFormSheet(context, ref);
-              },
-            ),
-          ],
-        );
-      },
-    );
+    showModalBottomSheet(context: context, shape: const RoundedRectangleBorder(borderRadius: BorderRadius.vertical(top: Radius.circular(20))), builder: (ctx) => Wrap(children: <Widget>[
+      ListTile(leading: const Icon(Icons.camera_alt_outlined), title: const Text('Fotoğraf ile Otomatik Ekle'), onTap: () { Navigator.pop(ctx); _showImageSourceOptions(context, ref); }),
+      ListTile(leading: const Icon(Icons.edit_note), title: const Text('Elle Ekle'), onTap: () { Navigator.pop(ctx); _showAddItemFormSheet(context, ref); }),
+    ]));
   }
 
   void _showAddItemFormSheet(BuildContext context, WidgetRef ref, {Map<String, dynamic>? initialData, dynamic itemKey, PantryItem? editingItem}) {
-    showModalBottomSheet(
-      context: context,
-      isScrollControlled: true,
-      shape: const RoundedRectangleBorder(borderRadius: BorderRadius.vertical(top: Radius.circular(20))),
-      builder: (context) => Padding(
-        padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),
-        child: _AddItemForm(
-          initialData: initialData,
-          editingItem: editingItem,
-          onSave: (item) {
-            final box = ref.read(pantryBoxProvider);
-            if (itemKey != null) {
-              box.put(itemKey, item);
-            } else {
-              box.put('${item.productName}-${item.addedDate.toIso8601String()}', item);
-            }
-            Navigator.pop(context);
-          },
-        ),
-      ),
-    );
+    showModalBottomSheet(context: context, isScrollControlled: true, shape: const RoundedRectangleBorder(borderRadius: BorderRadius.vertical(top: Radius.circular(20))), builder: (context) => Padding(
+      padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),
+      child: _AddItemForm(initialData: initialData, editingItem: editingItem, onSave: (item) {
+        final box = ref.read(pantryBoxProvider);
+        if (itemKey != null) { box.put(itemKey, item); }
+        else { box.put('${item.productName}-${item.addedDate.toIso8601String()}', item); }
+        Navigator.pop(context);
+      }),
+    ));
   }
 
   @override
   Widget build(BuildContext context, WidgetRef ref) {
     final pantryBox = ref.watch(pantryBoxProvider);
-
     return Scaffold(
-      appBar: AppBar(
-        title: const Text('Mutfağım (Akıllı Kiler)'),
-        centerTitle: false,
-      ),
+      appBar: AppBar(title: const Text('Mutfağım (Akıllı Kiler)')),
       body: ValueListenableBuilder(
         valueListenable: pantryBox.listenable(),
         builder: (context, Box<PantryItem> box, _) {
           final items = box.values.toList();
-          if (items.isEmpty) {
-            return Center(
-              child: Padding(
-                padding: const EdgeInsets.all(24.0),
-                child: Column(
-                  mainAxisAlignment: MainAxisAlignment.center,
-                  children: [
-                    Icon(Icons.kitchen_outlined, size: 100, color: Colors.grey[300]),
-                    const SizedBox(height: 24),
-                    const Text('Kilerin Henüz Boş', style: AppTextStyles.h2, textAlign: TextAlign.center),
-                    const SizedBox(height: 8),
-                    Text(
-                      'Sağ alttaki (+) butonuna basarak kilerine yeni ürünler eklemeye başla!',
-                      style: AppTextStyles.body.copyWith(color: Colors.grey[600]),
-                      textAlign: TextAlign.center,
-                    ),
-                  ],
-                ),
-              ),
-            );
-          }
+          if (items.isEmpty) { return Center(child: Padding(padding: const EdgeInsets.all(24.0), child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [ Icon(Icons.kitchen_outlined, size: 100, color: Colors.grey[300]), const SizedBox(height: 24), const Text('Kilerin Henüz Boş', style: AppTextStyles.h2, textAlign: TextAlign.center), const SizedBox(height: 8), Text('Sağ alttaki (+) butonuna basarak kilerine yeni ürünler eklemeye başla!', style: AppTextStyles.body.copyWith(color: Colors.grey[600]), textAlign: TextAlign.center, ), ], ), ), ); }
           final groupedItems = <String, List<PantryItem>>{};
           for (var i = 0; i < items.length; i++) {
             final item = items[i];
             (groupedItems[item.category] ??= []).add(item);
           }
           final sortedCategories = groupedItems.keys.toList()..sort();
-
           return ListView.builder(
             padding: const EdgeInsets.only(bottom: 80),
             itemCount: sortedCategories.length,
@@ -203,29 +112,9 @@ class KitchenScreen extends ConsumerWidget {
                   return ListTile(
                     title: Text(item.productName, style: AppTextStyles.body),
                     subtitle: Text('${item.quantity.toStringAsFixed(0)} ${item.unit} ${item.brand != null ? '(${item.brand})' : ''}'),
-                    trailing: item.expirationDate != null
-                        ? Text('SKT: ${DateFormat('dd.MM.yy').format(item.expirationDate!)}', style: AppTextStyles.caption)
-                        : null,
+                    trailing: item.expirationDate != null ? Text('SKT: ${DateFormat('dd.MM.yy').format(item.expirationDate!)}', style: AppTextStyles.caption) : null,
                     onTap: () => _showAddItemFormSheet(context, ref, itemKey: itemKey, editingItem: item),
-                    onLongPress: () {
-                      showDialog(
-                        context: context,
-                        builder: (ctx) => AlertDialog(
-                          title: const Text('Ürünü Sil'),
-                          content: Text('"${item.productName}" ürününü kilerinden silmek istediğine emin misin?'),
-                          actions: [
-                            TextButton(onPressed: () => Navigator.pop(ctx), child: const Text('İptal')),
-                            TextButton(
-                              onPressed: () {
-                                box.delete(itemKey);
-                                Navigator.pop(ctx);
-                              },
-                              child: const Text('Sil', style: TextStyle(color: Colors.red)),
-                            ),
-                          ],
-                        ),
-                      );
-                    },
+                    onLongPress: () { showDialog(context: context, builder: (ctx) => AlertDialog(title: const Text('Ürünü Sil'), content: Text('"${item.productName}" ürününü kilerinden silmek istediğine emin misin?'), actions: [TextButton(onPressed: () => Navigator.pop(ctx), child: const Text('İptal')), TextButton(onPressed: () { box.delete(itemKey); Navigator.pop(ctx); }, child: const Text('Sil', style: TextStyle(color: Colors.red))), ], ), ); },
                   );
                 }).toList(),
               );
@@ -233,12 +122,7 @@ class KitchenScreen extends ConsumerWidget {
           );
         },
       ),
-      floatingActionButton: FloatingActionButton(
-        onPressed: () => _showAddOptions(context, ref),
-        backgroundColor: AppColors.primaryAction,
-        foregroundColor: Colors.white,
-        child: const Icon(Icons.add),
-      ),
+      floatingActionButton: FloatingActionButton(onPressed: () => _showAddOptions(context, ref), backgroundColor: AppColors.primaryAction, foregroundColor: Colors.white, child: const Icon(Icons.add)),
     );
   }
 }
@@ -249,7 +133,6 @@ class _AddItemForm extends StatefulWidget {
   final PantryItem? editingItem;
 
   const _AddItemForm({required this.onSave, this.initialData, this.editingItem});
-
   @override
   State<_AddItemForm> createState() => _AddItemFormState();
 }
@@ -265,7 +148,6 @@ class _AddItemFormState extends State<_AddItemForm> {
   String? _barcode;
   String? _infoMessage;
 
-
   final List<String> _units = ['adet', 'g', 'kg', 'ml', 'L', 'paket', 'dilim', 'kaşık'];
   final List<String> _categories = ['Sebze & Meyve', 'Et & Tavuk', 'Süt Ürünleri', 'Bakliyat', 'Baharatlar', 'İçecekler', 'Atıştırmalık', 'Diğer'];
 
@@ -273,7 +155,6 @@ class _AddItemFormState extends State<_AddItemForm> {
   void initState() {
     super.initState();
     if (widget.editingItem != null) {
-      // Düzenleme modu
       final item = widget.editingItem!;
       _nameController.text = item.productName;
       _brandController.text = item.brand ?? '';
@@ -283,30 +164,31 @@ class _AddItemFormState extends State<_AddItemForm> {
       _selectedDate = item.expirationDate;
       _barcode = item.barcode;
     } else if (widget.initialData != null) {
-      // GÜNCELLENDİ: AI/API'dan gelen veriyi daha akıllı ve savunmacı işleyen bölüm
       final data = widget.initialData!;
       _nameController.text = data['productName']?.toString() ?? '';
       _brandController.text = data['brand']?.toString() ?? '';
       _barcode = data['barcode']?.toString();
 
+      // MİKTAR (QUANTITY) ALANI İÇİN DÜZELTME
       final quantity = data['quantity'];
       if (quantity != null && quantity.toString().isNotEmpty) {
-        _quantityController.text = (quantity as num).toStringAsFixed(0);
+        // Gelen veri 'num' (yani sayı) ise ondalıksız string'e çevir, değilse olduğu gibi al.
+        _quantityController.text = (quantity is num) ? quantity.toStringAsFixed(0) : quantity.toString();
       }
 
+      // BİRİM (UNIT) ALANI İÇİN DÜZELTME
       final initialUnit = data['unit']?.toString().toLowerCase();
-      if (initialUnit != null && _units.contains(initialUnit)) {
-        _selectedUnit = initialUnit;
+      if (initialUnit != null) {
+        // Gelen birim ('g', 'ml' vb.) bizim listemizde var mı diye kontrol et,
+        // büyük/küçük harf duyarsız bir şekilde. Bulamazsan varsayılan olarak 'adet' ata.
+        _selectedUnit = _units.firstWhere((u) => u.toLowerCase() == initialUnit, orElse: () => 'adet');
       }
 
+      // KATEGORİ (CATEGORY) ALANI İÇİN DÜZELTME
       final initialCategory = data['category']?.toString();
       if (initialCategory != null) {
-        if (_categories.contains(initialCategory)) {
-          _selectedCategory = initialCategory;
-        } else {
-          // Gelen kategori listede yoksa, akıllı eşleştirme yapmayı dene
-          _selectedCategory = _mapApiCategoryToAppCategory(initialCategory);
-        }
+        // Gelen kategoriyi bizim uygulama kategorilerine akıllıca eşle.
+        _selectedCategory = _mapApiCategoryToAppCategory(initialCategory);
       }
 
       final expDateString = data['expirationDate']?.toString();
@@ -314,7 +196,6 @@ class _AddItemFormState extends State<_AddItemForm> {
         _selectedDate = DateTime.tryParse(expDateString);
       }
 
-      // Bilgilendirme mesajını oluştur
       if (_quantityController.text.isEmpty || _selectedDate == null) {
         _infoMessage = 'Bazı bilgiler okunamadı. Lütfen kontrol edip eksikleri tamamlayın.';
       } else {
@@ -324,27 +205,19 @@ class _AddItemFormState extends State<_AddItemForm> {
   }
 
   String _mapApiCategoryToAppCategory(String apiCategory) {
-    final lowerCaseCategory = apiCategory.toLowerCase();
-    if (lowerCaseCategory.contains('dairies') || lowerCaseCategory.contains('cheese')) {
-      return 'Süt Ürünleri';
-    }
-    if (lowerCaseCategory.contains('meat') || lowerCaseCategory.contains('poultry')) {
-      return 'Et & Tavuk';
-    }
-    if (lowerCaseCategory.contains('fruit') || lowerCaseCategory.contains('vegetable')) {
-      return 'Sebze & Meyve';
-    }
-    if (lowerCaseCategory.contains('beverages') || lowerCaseCategory.contains('drinks')) {
-      return 'İçecekler';
-    }
-    if (lowerCaseCategory.contains('snacks')) {
-      return 'Atıştırmalık';
-    }
-    // Eşleşme bulunamazsa Diğer olarak kalsın
+    final lowerCaseCategory = apiCategory.toLowerCase().replaceAll('-', ' ');
+    if (lowerCaseCategory.contains('dairies') || lowerCaseCategory.contains('cheese')) return 'Süt Ürünleri';
+    if (lowerCaseCategory.contains('meat') || lowerCaseCategory.contains('poultry')) return 'Et & Tavuk';
+    if (lowerCaseCategory.contains('fruit') || lowerCaseCategory.contains('vegetable')) return 'Sebze & Meyve';
+    if (lowerCaseCategory.contains('beverages') || lowerCaseCategory.contains('drinks')) return 'İçecekler';
+    if (lowerCaseCategory.contains('snacks')) return 'Atıştırmalık';
+
+    final directMatch = _categories.firstWhere((c) => c.toLowerCase() == lowerCaseCategory, orElse: () => '');
+    if (directMatch.isNotEmpty) return directMatch;
+
     return 'Diğer';
   }
 
-
   @override
   void dispose() {
     _nameController.dispose();
@@ -355,115 +228,75 @@ class _AddItemFormState extends State<_AddItemForm> {
 
   @override
   Widget build(BuildContext context) {
-    return SingleChildScrollView(
-      child: Padding(
-        padding: const EdgeInsets.all(24.0),
-        child: Form(
-          key: _formKey,
-          child: Column(
-            mainAxisSize: MainAxisSize.min,
-            crossAxisAlignment: CrossAxisAlignment.stretch,
-            children: [
-              Text(widget.editingItem != null ? 'Ürünü Düzenle' : 'Yeni Ürün Ekle', style: AppTextStyles.h2, textAlign: TextAlign.center),
-              const SizedBox(height: 16),
-              // YENİ: Form içi bilgilendirme mesajı
-              if (_infoMessage != null)
-                Container(
-                  padding: const EdgeInsets.all(12),
-                  margin: const EdgeInsets.only(bottom: 16),
-                  decoration: BoxDecoration(
-                    color: AppColors.primaryAction.withOpacity(0.1),
-                    borderRadius: BorderRadius.circular(8),
-                  ),
-                  child: Row(
-                    children: [
-                      const Icon(Icons.info_outline, color: AppColors.primaryAction),
-                      const SizedBox(width: 12),
-                      Expanded(child: Text(_infoMessage!, style: AppTextStyles.body.copyWith(color: AppColors.primaryAction))),
-                    ],
-                  ),
-                ),
-              TextFormField(
-                controller: _nameController,
-                decoration: const InputDecoration(labelText: 'Ürün Adı*'),
-                validator: (value) => value!.isEmpty ? 'Lütfen bir ad girin' : null,
-              ),
-              TextFormField(
-                controller: _brandController,
-                decoration: const InputDecoration(labelText: 'Marka (İsteğe Bağlı)'),
-              ),
-              Row(
-                crossAxisAlignment: CrossAxisAlignment.end,
-                children: [
-                  Expanded(
-                    flex: 3,
-                    child: TextFormField(
-                      controller: _quantityController,
-                      decoration: const InputDecoration(labelText: 'Miktar*'),
-                      keyboardType: TextInputType.number,
-                      validator: (value) => value!.isEmpty ? 'Lütfen miktar girin' : null,
-                    ),
-                  ),
-                  const SizedBox(width: 20),
-                  Expanded(
-                    flex: 2,
-                    child: DropdownButtonFormField<String>(
-                      value: _selectedUnit,
-                      items: _units.map((unit) => DropdownMenuItem(value: unit, child: Text(unit))).toList(),
-                      onChanged: (value) => setState(() => _selectedUnit = value!),
-                    ),
-                  ),
-                ],
-              ),
-              DropdownButtonFormField<String>(
-                value: _selectedCategory,
-                decoration: const InputDecoration(labelText: 'Kategori*'),
-                items: _categories.map((cat) => DropdownMenuItem(value: cat, child: Text(cat))).toList(),
-                onChanged: (value) => setState(() => _selectedCategory = value!),
-              ),
-              TextFormField(
-                decoration: InputDecoration(
-                  labelText: 'Son Kullanma Tarihi (İsteğe Bağlı)',
-                  hintText: _selectedDate == null ? 'Tarih Seç' : DateFormat('dd MMMM yyyy').format(_selectedDate!),
-                ),
-                readOnly: true,
-                onTap: () async {
-                  final date = await showDatePicker(
-                    context: context,
-                    initialDate: _selectedDate ?? DateTime.now(),
-                    firstDate: DateTime.now().subtract(const Duration(days: 30)),
-                    lastDate: DateTime.now().add(const Duration(days: 365 * 5)),
-                  );
-                  if (date != null) setState(() => _selectedDate = date);
-                },
-              ),
-              const SizedBox(height: 24),
-              ElevatedButton(
-                style: ElevatedButton.styleFrom(
-                    padding: const EdgeInsets.symmetric(vertical: 16),
-                    backgroundColor: AppColors.primaryAction
-                ),
-                onPressed: () {
-                  if (_formKey.currentState!.validate()) {
-                    final newItem = PantryItem(
-                      productName: _nameController.text,
-                      brand: _brandController.text.isNotEmpty ? _brandController.text : null,
-                      quantity: double.tryParse(_quantityController.text) ?? 0,
-                      unit: _selectedUnit,
-                      category: _selectedCategory,
-                      addedDate: widget.editingItem?.addedDate ?? DateTime.now(),
-                      expirationDate: _selectedDate,
-                      barcode: widget.editingItem?.barcode ?? _barcode,
-                    );
-                    widget.onSave(newItem);
-                  }
-                },
-                child: Text(widget.editingItem != null ? 'GÜNCELLE' : 'KİLERE EKLE', style: AppTextStyles.button),
-              )
-            ],
-          ),
+    return SingleChildScrollView(child: Padding(padding: const EdgeInsets.all(24.0), child: Form(key: _formKey, child: Column(
+      mainAxisSize: MainAxisSize.min,
+      crossAxisAlignment: CrossAxisAlignment.stretch,
+      children: [
+        Text(widget.editingItem != null ? 'Ürünü Düzenle' : 'Yeni Ürün Ekle', style: AppTextStyles.h2, textAlign: TextAlign.center),
+        const SizedBox(height: 16),
+
+        if (_infoMessage != null)
+          _buildInfoMessage(_infoMessage!),
+
+        TextFormField(controller: _nameController, decoration: const InputDecoration(labelText: 'Ürün Adı*'), validator: (value) => value!.isEmpty ? 'Lütfen bir ad girin' : null),
+        TextFormField(controller: _brandController, decoration: const InputDecoration(labelText: 'Marka (İsteğe Bağlı)')),
+        Row(crossAxisAlignment: CrossAxisAlignment.end, children: [
+          Expanded(flex: 3, child: TextFormField(controller: _quantityController, decoration: const InputDecoration(labelText: 'Miktar*'), keyboardType: TextInputType.number, validator: (value) => value!.isEmpty ? 'Lütfen miktar girin' : null)),
+          const SizedBox(width: 20),
+          Expanded(flex: 2, child: DropdownButtonFormField<String>(value: _selectedUnit, items: _units.map((unit) => DropdownMenuItem(value: unit, child: Text(unit))).toList(), onChanged: (value) => setState(() => _selectedUnit = value!))),
+        ]),
+        DropdownButtonFormField<String>(
+          value: _selectedCategory,
+          decoration: const InputDecoration(labelText: 'Kategori*'),
+          items: _categories.map((cat) => DropdownMenuItem(value: cat, child: Text(cat))).toList(),
+          onChanged: (value) {
+            if(value != null) {
+              setState(() => _selectedCategory = value);
+            }
+          },
         ),
-      ),
+        TextFormField(
+          decoration: InputDecoration(labelText: 'Son Kullanma Tarihi (İsteğe Bağlı)', hintText: _selectedDate == null ? 'Tarih Seç' : DateFormat('dd MMMM yyyy').format(_selectedDate!)),
+          readOnly: true,
+          onTap: () async {
+            final date = await showDatePicker(context: context, initialDate: _selectedDate ?? DateTime.now(), firstDate: DateTime.now().subtract(const Duration(days: 30)), lastDate: DateTime.now().add(const Duration(days: 365 * 5)));
+            if (date != null) setState(() => _selectedDate = date);
+          },
+        ),
+        const SizedBox(height: 24),
+        ElevatedButton(
+          style: ElevatedButton.styleFrom(padding: const EdgeInsets.symmetric(vertical: 16), backgroundColor: AppColors.primaryAction),
+          onPressed: () {
+            if (_formKey.currentState!.validate()) {
+              final newItem = PantryItem(
+                productName: _nameController.text,
+                brand: _brandController.text.isNotEmpty ? _brandController.text : null,
+                quantity: double.tryParse(_quantityController.text) ?? 0,
+                unit: _selectedUnit,
+                category: _selectedCategory,
+                addedDate: widget.editingItem?.addedDate ?? DateTime.now(),
+                expirationDate: _selectedDate,
+                barcode: widget.editingItem?.barcode ?? _barcode,
+              );
+              widget.onSave(newItem);
+            }
+          },
+          child: Text(widget.editingItem != null ? 'GÜNCELLE' : 'KİLERE EKLE', style: AppTextStyles.button),
+        )
+      ],
+    ),),),);
+  }
+
+  Widget _buildInfoMessage(String message) {
+    return Container(
+      padding: const EdgeInsets.all(12),
+      margin: const EdgeInsets.only(bottom: 16),
+      decoration: BoxDecoration(color: AppColors.primaryAction.withOpacity(0.1), borderRadius: BorderRadius.circular(8)),
+      child: Row(children: [
+        const Icon(Icons.info_outline, color: AppColors.primaryAction),
+        const SizedBox(width: 12),
+        Expanded(child: Text(message, style: AppTextStyles.body.copyWith(color: AppColors.primaryAction))),
+      ],),
     );
   }
 }
\ No newline at end of file
diff --git a/lib/screens/profile_screen.dart b/lib/screens/profile_screen.dart
index c37f4c1..914fd67 100644
--- a/lib/screens/profile_screen.dart
+++ b/lib/screens/profile_screen.dart
@@ -1,101 +1,219 @@
 // lib/screens/profile_screen.dart
 
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:firebase_auth/firebase_auth.dart';
 import 'package:flutter/material.dart';
-import 'package:flutter_riverpod/flutter_riverpod.dart'; // YENİ: import
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:neyese4/core/theme/app_colors.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
-import 'package:neyese4/features/profile/application/xp_provider.dart'; // YENİ: import
+import 'package:neyese4/data/providers.dart';
 import 'package:neyese4/screens/diet_selection_screen.dart';
 import 'package:neyese4/screens/equipment_selection_screen.dart';
 import 'package:neyese4/screens/intolerance_selection_screen.dart';
 
-import '../core/theme/app_colors.dart';
-
-// GÜNCELLENDİ: StatelessWidget -> ConsumerWidget
-class ProfileScreen extends ConsumerWidget {
+class ProfileScreen extends ConsumerStatefulWidget {
   const ProfileScreen({super.key});
 
   @override
-  // GÜNCELLENDİ: build metoduna WidgetRef eklendi
-  Widget build(BuildContext context, WidgetRef ref) {
-    // YENİ: XP provider'ını dinliyoruz.
+  ConsumerState<ProfileScreen> createState() => _ProfileScreenState();
+}
+
+class _ProfileScreenState extends ConsumerState<ProfileScreen> {
+  // Profili düzenlemek için diyalog penceresini gösteren metot
+  Future<void> _showEditProfileDialog() async {
+    final user = ref.read(authStateChangesProvider).value;
+    if (user == null) return;
+
+    final nameController = TextEditingController(text: user.displayName);
+
+    final newName = await showDialog<String>(
+      context: context,
+      builder: (context) {
+        return AlertDialog(
+          title: const Text('İsmini Düzenle'),
+          content: TextField(
+            controller: nameController,
+            autofocus: true,
+            decoration: const InputDecoration(labelText: 'Görünen Ad'),
+          ),
+          actions: [
+            TextButton(
+              onPressed: () => Navigator.of(context).pop(),
+              child: const Text('İptal'),
+            ),
+            ElevatedButton(
+              onPressed: () {
+                Navigator.of(context).pop(nameController.text.trim());
+              },
+              child: const Text('Kaydet'),
+            ),
+          ],
+        );
+      },
+    );
+
+    if (newName != null && newName.isNotEmpty && newName != user.displayName) {
+      try {
+        await user.updateDisplayName(newName);
+        final userDocRef = FirebaseFirestore.instance.collection('users').doc(user.uid);
+        await userDocRef.set({'displayName': newName, 'email': user.email}, SetOptions(merge: true));
+
+        if (mounted) {
+          ScaffoldMessenger.of(context).showSnackBar(
+            const SnackBar(content: Text('Profilin başarıyla güncellendi!')),
+          );
+        }
+        ref.invalidate(authStateChangesProvider);
+
+      } catch (e) {
+        if (mounted) {
+          ScaffoldMessenger.of(context).showSnackBar(
+            SnackBar(content: Text('Bir hata oluştu: $e')),
+          );
+        }
+      }
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final user = ref.watch(authStateChangesProvider).value;
     final userXp = ref.watch(userXpProvider);
 
     return Scaffold(
       appBar: AppBar(
-        title: const Text('Profilim ve Ayarlar'),
+        title: const Text('Profilim'),
         centerTitle: false,
       ),
-      body: ListView(
+      body: SingleChildScrollView(
         padding: const EdgeInsets.all(16.0),
-        children: [
-          // YENİ: XP Puanını gösteren kart
-          Card(
-            elevation: 2,
-            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
-            child: ListTile(
-              leading: const Icon(Icons.star_rounded, color: Colors.amber, size: 32),
-              title: Text('Deneyim Puanı (XP)', style: AppTextStyles.body.copyWith(fontWeight: FontWeight.bold)),
-              trailing: Text('$userXp XP', style: AppTextStyles.h2.copyWith(color: AppColors.primaryAction)),
+        child: Column(
+          children: [
+            if (user != null)
+              Card(
+                elevation: 4,
+                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
+                clipBehavior: Clip.antiAlias,
+                child: Padding(
+                  padding: const EdgeInsets.only(left: 16.0, top: 12, bottom: 12, right: 4),
+                  child: Row(
+                    children: [
+                      CircleAvatar(
+                        radius: 30,
+                        backgroundColor: AppColors.primaryBackground,
+                        backgroundImage: user.photoURL != null ? NetworkImage(user.photoURL!) : null,
+                        child: user.photoURL == null
+                            ? const Icon(Icons.person_outline, size: 30, color: AppColors.primaryAction)
+                            : null,
+                      ),
+                      const SizedBox(width: 16),
+                      Expanded(
+                        child: Column(
+                          crossAxisAlignment: CrossAxisAlignment.start,
+                          children: [
+                            Text(
+                              user.displayName ?? 'İsim Belirtilmemiş',
+                              style: AppTextStyles.h2.copyWith(fontSize: 20),
+                            ),
+                            const SizedBox(height: 4),
+                            Text(
+                              user.email ?? 'E-posta bulunamadı',
+                              style: AppTextStyles.caption,
+                            ),
+                          ],
+                        ),
+                      ),
+                      IconButton(
+                        icon: const Icon(Icons.edit_outlined, color: AppColors.neutralGrey),
+                        onPressed: _showEditProfileDialog,
+                      ),
+                    ],
+                  ),
+                ),
+              ),
+            const SizedBox(height: 24),
+            Card(
+              elevation: 2,
+              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
+              child: ListTile(
+                leading: const Icon(Icons.star_rounded, color: Colors.amber, size: 32),
+                title: Text('Deneyim Puanı (XP)', style: AppTextStyles.body.copyWith(fontWeight: FontWeight.bold)),
+                trailing: Text('$userXp XP', style: AppTextStyles.h2.copyWith(color: AppColors.primaryAction)),
+              ),
             ),
-          ),
-          const SizedBox(height: 16),
-          // Kalan kısım aynı
-          _buildProfileOption(
-            icon: Icons.restaurant_menu_outlined,
-            title: 'Diyet Tercihleri',
-            subtitle: 'Vegan, Vejetaryen, Glutensiz...',
-            onTap: () {
-              Navigator.of(context).push(
-                MaterialPageRoute(builder: (context) => const DietSelectionScreen()),
-              );
-            },
-          ),
-          const Divider(),
-          _buildProfileOption(
-            icon: Icons.warning_amber_rounded,
-            title: 'Alerjiler',
-            subtitle: 'Fıstık, Süt ürünleri, Soya...',
-            onTap: () {
-              Navigator.of(context).push(
-                MaterialPageRoute(builder: (context) => const IntoleranceSelectionScreen()),
-              );
-            },
-          ),
-          const Divider(),
-          _buildProfileOption(
-            icon: Icons.kitchen_outlined,
-            title: 'Mutfak Aletleri',
-            subtitle: 'Fırın, Mikser, Airfryer...',
-            onTap: () {
-              Navigator.of(context).push(
-                MaterialPageRoute(builder: (context) => const EquipmentSelectionScreen()),
-              );
-            },
-          ),
-          const Divider(),
-          _buildProfileOption(
-            icon: Icons.info_outline,
-            title: 'Uygulama Hakkında',
-            subtitle: 'Versiyon 1.0.0',
-            onTap: () {},
-          ),
-        ],
+            const SizedBox(height: 16),
+
+            // GÜNCELLENDİ: Ayarları gruplayan Card Widget
+            Card(
+              elevation: 2,
+              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
+              clipBehavior: Clip.antiAlias,
+              child: Column(
+                children: [
+                  _buildProfileOption(
+                    context: context,
+                    icon: Icons.restaurant_menu_outlined,
+                    title: 'Diyet Tercihleri',
+                    subtitle: 'Vegan, Vejetaryen, Glutensiz...',
+                    targetScreen: const DietSelectionScreen(),
+                  ),
+                  const Divider(height: 1, indent: 72, endIndent: 16),
+                  _buildProfileOption(
+                    context: context,
+                    icon: Icons.warning_amber_rounded,
+                    title: 'Alerjiler ve Hassasiyetler',
+                    subtitle: 'Süt, Yumurta, Gluten...',
+                    targetScreen: const IntoleranceSelectionScreen(),
+                  ),
+                  const Divider(height: 1, indent: 72, endIndent: 16),
+                  _buildProfileOption(
+                    context: context,
+                    icon: Icons.kitchen_outlined,
+                    title: 'Mutfak Aletleri',
+                    subtitle: 'Fırın, Mikser, Airfryer...',
+                    targetScreen: const EquipmentSelectionScreen(),
+                  ),
+                ],
+              ),
+            ),
+            const SizedBox(height: 16),
+
+            // ÇIKIŞ YAP BUTONU
+            Card(
+              elevation: 2,
+              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
+              clipBehavior: Clip.antiAlias,
+              child: ListTile(
+                leading: const Icon(Icons.logout, color: Colors.red),
+                title: const Text('Çıkış Yap', style: TextStyle(color: Colors.red)),
+                onTap: () async {
+                  await ref.read(authServiceProvider).signOut();
+                },
+              ),
+            ),
+          ],
+        ),
       ),
     );
   }
 
   Widget _buildProfileOption({
+    required BuildContext context,
     required IconData icon,
     required String title,
     required String subtitle,
-    required VoidCallback onTap,
+    required Widget targetScreen,
   }) {
     return ListTile(
-      leading: Icon(icon, size: 28),
+      leading: Icon(icon, size: 28, color: AppColors.primaryText.withOpacity(0.8)),
       title: Text(title, style: AppTextStyles.body),
       subtitle: Text(subtitle, style: AppTextStyles.caption),
-      trailing: const Icon(Icons.arrow_forward_ios, size: 16),
-      onTap: onTap,
+      trailing: const Icon(Icons.arrow_forward_ios, size: 16, color: AppColors.neutralGrey),
+      onTap: () {
+        Navigator.of(context).push(
+          MaterialPageRoute(builder: (context) => targetScreen),
+        );
+      },
     );
   }
 }
\ No newline at end of file
diff --git a/lib/screens/recipes_screen.dart b/lib/screens/recipes_screen.dart
index 7afda19..56614b8 100644
--- a/lib/screens/recipes_screen.dart
+++ b/lib/screens/recipes_screen.dart
@@ -5,50 +5,55 @@ import 'package:flutter_riverpod/flutter_riverpod.dart';
 import 'package:neyese4/core/theme/app_text_styles.dart';
 import 'package:neyese4/data/models/recipe_suggestion.dart';
 import 'package:neyese4/data/providers.dart';
-import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_card.dart'; // Yeni kartımızı import ediyoruz
+import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_card.dart';
+import 'package:neyese4/core/widgets/chef_loading_indicator.dart';
 
 class RecipesScreen extends ConsumerWidget {
   const RecipesScreen({super.key});
 
   @override
   Widget build(BuildContext context, WidgetRef ref) {
-    final savedRecipes = ref.watch(savedRecipesListProvider);
+    // Yeni StreamProvider'ımızı dinliyoruz.
+    final savedRecipesAsyncValue = ref.watch(savedRecipesStreamProvider);
 
     return Scaffold(
       appBar: AppBar(title: const Text('Kaydedilen Tariflerim')),
-      body: savedRecipes.isEmpty
-          ? Center( // Boş durum için daha şık bir arayüz
-        child: Padding(
-          padding: const EdgeInsets.all(24.0),
-          child: Column(
-            mainAxisAlignment: MainAxisAlignment.center,
-            children: [
-              Icon(Icons.bookmark_remove_outlined, size: 100, color: Colors.grey[300]),
-              const SizedBox(height: 24),
-              const Text('Henüz Tarif Kaydetmedin', style: AppTextStyles.h2, textAlign: TextAlign.center),
-              const SizedBox(height: 8),
-              Text(
-                'Beğendiğin tariflerin detay sayfasındaki yer imi ikonuna dokunarak onları buraya ekleyebilirsin.',
-                style: AppTextStyles.body.copyWith(color: Colors.grey[600]),
-                textAlign: TextAlign.center,
+      // Stream'in durumuna göre (yükleniyor, hata, veri geldi) arayüzü çiziyoruz.
+      body: savedRecipesAsyncValue.when(
+        loading: () => Center(child: ChefLoadingIndicator()),
+        error: (err, stack) => Center(child: Text('Tarifler yüklenemedi: $err')),
+        data: (savedRecipes) {
+          if (savedRecipes.isEmpty) {
+            return Center(
+              child: Padding(
+                padding: const EdgeInsets.all(24.0),
+                child: Column(
+                  mainAxisAlignment: MainAxisAlignment.center,
+                  children: [
+                    Icon(Icons.bookmark_remove_outlined, size: 100, color: Colors.grey[300]),
+                    const SizedBox(height: 24),
+                    const Text('Henüz Tarif Kaydetmedin', style: AppTextStyles.h2, textAlign: TextAlign.center),
+                  ],
+                ),
               ),
-            ],
-          ),
-        ),
-      )
-          : GridView.builder( // ListView yerine GridView kullanıyoruz
-        padding: const EdgeInsets.all(16),
-        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
-          crossAxisCount: 2, // Yan yana 2 kart
-          crossAxisSpacing: 16, // Yatay boşluk
-          mainAxisSpacing: 16, // Dikey boşluk
-          childAspectRatio: 0.75, // Kartların en-boy oranı
-        ),
-        itemCount: savedRecipes.length,
-        itemBuilder: (context, index) {
-          final recipe = savedRecipes.reversed.toList()[index];
-          return RecipeCard( // Yeniden kullanılabilir kartımızı çağırıyoruz
-            recipe: RecipeSuggestion(id: recipe.id, title: recipe.title, image: recipe.image),
+            );
+          }
+          // Veri geldiğinde GridView'ı oluştur.
+          return GridView.builder(
+            padding: const EdgeInsets.all(16),
+            gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
+              crossAxisCount: 2,
+              crossAxisSpacing: 16,
+              mainAxisSpacing: 16,
+              childAspectRatio: 0.75,
+            ),
+            itemCount: savedRecipes.length,
+            itemBuilder: (context, index) {
+              final recipe = savedRecipes[index];
+              return RecipeCard(
+                recipe: RecipeSuggestion(id: recipe.id, title: recipe.title, image: recipe.image),
+              );
+            },
           );
         },
       ),
diff --git a/linux/flutter/generated_plugin_registrant.cc b/linux/flutter/generated_plugin_registrant.cc
index 64a0ece..e0c16cd 100644
--- a/linux/flutter/generated_plugin_registrant.cc
+++ b/linux/flutter/generated_plugin_registrant.cc
@@ -6,9 +6,13 @@
 
 #include "generated_plugin_registrant.h"
 
+#include <audioplayers_linux/audioplayers_linux_plugin.h>
 #include <file_selector_linux/file_selector_plugin.h>
 
 void fl_register_plugins(FlPluginRegistry* registry) {
+  g_autoptr(FlPluginRegistrar) audioplayers_linux_registrar =
+      fl_plugin_registry_get_registrar_for_plugin(registry, "AudioplayersLinuxPlugin");
+  audioplayers_linux_plugin_register_with_registrar(audioplayers_linux_registrar);
   g_autoptr(FlPluginRegistrar) file_selector_linux_registrar =
       fl_plugin_registry_get_registrar_for_plugin(registry, "FileSelectorPlugin");
   file_selector_plugin_register_with_registrar(file_selector_linux_registrar);
diff --git a/linux/flutter/generated_plugins.cmake b/linux/flutter/generated_plugins.cmake
index 2db3c22..a77328d 100644
--- a/linux/flutter/generated_plugins.cmake
+++ b/linux/flutter/generated_plugins.cmake
@@ -3,6 +3,7 @@
 #
 
 list(APPEND FLUTTER_PLUGIN_LIST
+  audioplayers_linux
   file_selector_linux
 )
 
diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
index 66c184f..0760f8f 100644
--- a/macos/Flutter/GeneratedPluginRegistrant.swift
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift
@@ -5,12 +5,28 @@
 import FlutterMacOS
 import Foundation
 
+import audioplayers_darwin
+import cloud_firestore
 import file_selector_macos
+import firebase_app_check
+import firebase_auth
+import firebase_core
+import firebase_storage
+import google_sign_in_ios
 import mobile_scanner
 import path_provider_foundation
+import sqflite_darwin
 
 func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
+  AudioplayersDarwinPlugin.register(with: registry.registrar(forPlugin: "AudioplayersDarwinPlugin"))
+  FLTFirebaseFirestorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseFirestorePlugin"))
   FileSelectorPlugin.register(with: registry.registrar(forPlugin: "FileSelectorPlugin"))
+  FLTFirebaseAppCheckPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseAppCheckPlugin"))
+  FLTFirebaseAuthPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseAuthPlugin"))
+  FLTFirebaseCorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseCorePlugin"))
+  FLTFirebaseStoragePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseStoragePlugin"))
+  FLTGoogleSignInPlugin.register(with: registry.registrar(forPlugin: "FLTGoogleSignInPlugin"))
   MobileScannerPlugin.register(with: registry.registrar(forPlugin: "MobileScannerPlugin"))
   PathProviderPlugin.register(with: registry.registrar(forPlugin: "PathProviderPlugin"))
+  SqflitePlugin.register(with: registry.registrar(forPlugin: "SqflitePlugin"))
 }
diff --git a/neyese_updates.patch b/neyese_updates.patch
index b52cde3..55366a2 100644
--- a/neyese_updates.patch
+++ b/neyese_updates.patch
@@ -1,3994 +0,0 @@
-diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
-index a74969f..f710399 100644
---- a/android/app/src/main/AndroidManifest.xml
-+++ b/android/app/src/main/AndroidManifest.xml
-@@ -1,4 +1,5 @@
- <manifest xmlns:android="http://schemas.android.com/apk/res/android">
-+    <uses-permission android:name="android.permission.CAMERA" />
-     <application
-         android:label="neyese4"
-         android:name="${applicationName}"
-diff --git a/android/gradle.properties b/android/gradle.properties
-index f018a61..247b489 100644
---- a/android/gradle.properties
-+++ b/android/gradle.properties
-@@ -1,3 +1,5 @@
- org.gradle.jvmargs=-Xmx8G -XX:MaxMetaspaceSize=4G -XX:ReservedCodeCacheSize=512m -XX:+HeapDumpOnOutOfMemoryError
- android.useAndroidX=true
- android.enableJetifier=true
-+# Use the JDK that is bundled with Android Studio to ensure consistency.
-+org.gradle.java.home=/Applications/Android Studio.app/Contents/jbr/Contents/Home
-\ No newline at end of file
-diff --git a/android/gradle/wrapper/gradle-wrapper.properties b/android/gradle/wrapper/gradle-wrapper.properties
-index 3acc4a6..9c5194d 100644
---- a/android/gradle/wrapper/gradle-wrapper.properties
-+++ b/android/gradle/wrapper/gradle-wrapper.properties
-@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
- distributionPath=wrapper/dists
- zipStoreBase=GRADLE_USER_HOME
- zipStorePath=wrapper/dists
--distributionUrl=https\://services.gradle.org/distributions/gradle-8.2-all.zip
-\ No newline at end of file
-+distributionUrl=https\://services.gradle.org/distributions/gradle-8.4-all.zip
-\ No newline at end of file
-diff --git a/android/settings.gradle.kts b/android/settings.gradle.kts
-index 118e3f7..7a0b7ee 100644
---- a/android/settings.gradle.kts
-+++ b/android/settings.gradle.kts
-@@ -18,10 +18,8 @@ pluginManagement {
- 
- plugins {
-     id("dev.flutter.flutter-plugin-loader") version "1.0.0"
--    // Android Gradle Plugin versiyonunu 8.2.1'e çekiyoruz.
--    id("com.android.application") version "8.2.1" apply false
--    // Kotlin versiyonunu da bununla uyumlu olan 1.9.0'a çekiyoruz.
--    id("org.jetbrains.kotlin.android") version "1.9.0" apply false
-+    id("com.android.application") version "8.3.2" apply false
-+    id("org.jetbrains.kotlin.android") version "1.9.22" apply false
- }
- 
- include(":app")
-diff --git a/lib/core/api/ai_service.dart b/lib/core/api/ai_service.dart
-index 55057d2..c859011 100644
---- a/lib/core/api/ai_service.dart
-+++ b/lib/core/api/ai_service.dart
-@@ -5,6 +5,7 @@ import 'package:google_generative_ai/google_generative_ai.dart';
- import 'package:neyese4/data/models/enriched_recipe_content.dart';
- import 'package:neyese4/data/models/recipe_detail.dart';
- import 'package:neyese4/core/config/api_keys.dart'; // Yeni import
-+import 'dart:io'; // Dosya işlemleri için
- 
- class AiService {
-   static const String _apiKey = ApiKeys.gemini; // Yeni kullanım şekli
-@@ -14,6 +15,65 @@ class AiService {
-     generationConfig: GenerationConfig(responseMimeType: 'application/json'),
-   );
- 
-+// YENİ METOT: Ürün fotoğrafını ve diğer bilgileri analiz eder
-+  Future<Map<String, dynamic>> analyzeProductImage(File imageFile) async {
-+    final prompt =
-+        "Analyze the attached image of a food product. Your primary goal is to find a barcode. If a barcode is clearly visible, return a JSON object with only one key: 'barcode'. "
-+        "If no barcode is visible, then identify the following details: 'productName', 'brand', 'category', 'quantity', 'unit', and 'expirationDate'. "
-+        "For 'category', choose from this list: ['Sebze & Meyve', 'Et & Tavuk', 'Süt Ürünleri', 'Bakliyat', 'Baharatlar', 'İçecekler', 'Atıştırmalık', 'Diğer']. "
-+        "For 'quantity', find the numerical value (e.g., for '500 g', extract 500). "
-+        "For 'unit', find the unit of measurement and MAP IT to one of these exact values: ['adet', 'g', 'kg', 'ml', 'L', 'paket', 'dilim', 'kaşık']. For example, if you see 'gr' or 'grams', use 'g'. "
-+        "For 'expirationDate', look for 'TETT' or 'SKT' and return the date in 'YYYY-MM-DD' format. "
-+        "Return all found information in a single, clean JSON object. If you cannot identify a piece of information, omit its key. "
-+        "Example: {\"productName\": \"Sade Yulaf Ezmesi\", \"brand\": \"Eti Lifalif\", \"category\": \"Diğer\", \"quantity\": 500, \"unit\": \"g\", \"expirationDate\": \"2025-12-21\"}.";
-+
-+    // Resmi byte dizisine çeviriyoruz
-+    final imageBytes = await imageFile.readAsBytes();
-+
-+    // AI'a hem metin (prompt) hem de resmi (imageBytes) gönderiyoruz
-+    final content = [
-+      Content.multi([
-+        TextPart(prompt),
-+        DataPart('image/jpeg', imageBytes),
-+      ])
-+    ];
-+
-+    final response = await _model.generateContent(content);
-+
-+    if (response.text != null) {
-+      print('--- VISION AI RESPONSE ---');
-+      print(response.text!);
-+      print('--------------------------');
-+      final jsonMap = jsonDecode(response.text!) as Map<String, dynamic>;
-+      // Gelen cevabı doğru tipe çeviriyoruz
-+      return {
-+        'productName': jsonMap['productName'] as String? ?? '',
-+        'brand': jsonMap['brand'] as String? ?? '',
-+      };
-+    } else {
-+      throw Exception('Görüntü analizinden sonuç alınamadı.');
-+    }
-+  }
-+  // YENİ METOT: Bir liste dolusu başlığı tek seferde çevirir.
-+  Future<List<String>> translateRecipeTitles(List<String> titles) async {
-+    final prompt =
-+        'You are a helpful translator. Take the following JSON array of English recipe titles and return a JSON array of the same size with their Turkish translations. Maintain the original order and only return the JSON array.\n\n'
-+        'English Titles: ${jsonEncode(titles)}';
-+
-+    try {
-+      final response = await _model.generateContent([Content.text(prompt)]);
-+      if (response.text != null) {
-+        final List<dynamic> translatedList = jsonDecode(response.text!);
-+        return translatedList.map((e) => e.toString()).toList();
-+      } else {
-+        // Çeviri başarısız olursa orijinal başlıkları geri döndür
-+        return titles;
-+      }
-+    } catch (e) {
-+      print('Toplu başlık çevirme hatası: $e');
-+      return titles; // Hata durumunda orijinalleri döndür
-+    }
-+  }
-   // Geri kalan metodun kendisinde bir değişiklik yok.
-   Future<EnrichedRecipeContent> getEnrichedRecipeContent(RecipeDetail recipe) async {
-     final prompt =
-@@ -26,7 +86,7 @@ class AiService {
-         '- "estimated_nutrition": (object) Provide estimated values for "Kalori", "Protein", "Yağ", "Karbonhidrat".\n'
-         '- "required_utensils": (array of strings) List the necessary kitchen utensils in Turkish.\n'
-         '- "ingredients_tr": (array of objects) Translate the ingredients to Turkish. Each object must have "amount" (double), "unit" (string), and "name" (string).\n'
--        '- "preparation_steps": (array of objects) Rewrite instructions in Turkish. Each object must have "step_number" (integer) and "description" (string).\n'
-+        '- "preparation_steps": (array of objects) Rewrite instructions in Turkish. Each object must have "step_number" (integer), "description" (string), and optionally "duration_in_seconds" (integer) if the step requires a timer.\n'
-         '- "chef_tips": (array of strings) Provide 2-3 useful and creative tips in Turkish.\n\n'
-         'Here is the recipe information to use:\n'
-         'Title: ${recipe.title}\n'
-@@ -39,6 +99,11 @@ class AiService {
-       final response = await _model.generateContent([Content.text(prompt)]);
- 
-       if (response.text != null) {
-+        // YENİ EKLENDİ: AI'dan gelen ham cevabı konsola yazdır.
-+        print('--- GEMINI RAW RESPONSE ---');
-+        print(response.text!);
-+        print('---------------------------');
-+
-         final jsonMap = jsonDecode(response.text!) as Map<String, dynamic>;
-         return EnrichedRecipeContent.fromJson(jsonMap);
-       } else {
-diff --git a/lib/data/models/kitchen_ingredient.g.dart b/lib/data/models/kitchen_ingredient.g.dart
-deleted file mode 100644
-index d9c3534..0000000
---- a/lib/data/models/kitchen_ingredient.g.dart
-+++ /dev/null
-@@ -1,41 +0,0 @@
--// GENERATED CODE - DO NOT MODIFY BY HAND
--
--part of 'kitchen_ingredient.dart';
--
--// **************************************************************************
--// TypeAdapterGenerator
--// **************************************************************************
--
--class KitchenIngredientAdapter extends TypeAdapter<KitchenIngredient> {
--  @override
--  final int typeId = 1;
--
--  @override
--  KitchenIngredient read(BinaryReader reader) {
--    final numOfFields = reader.readByte();
--    final fields = <int, dynamic>{
--      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
--    };
--    return KitchenIngredient(
--      name: fields[0] as String,
--    );
--  }
--
--  @override
--  void write(BinaryWriter writer, KitchenIngredient obj) {
--    writer
--      ..writeByte(1)
--      ..writeByte(0)
--      ..write(obj.name);
--  }
--
--  @override
--  int get hashCode => typeId.hashCode;
--
--  @override
--  bool operator ==(Object other) =>
--      identical(this, other) ||
--      other is KitchenIngredientAdapter &&
--          runtimeType == other.runtimeType &&
--          typeId == other.typeId;
--}
-diff --git a/lib/data/models/pantry_item.dart b/lib/data/models/pantry_item.dart
-index afd5a80..0fb908c 100644
---- a/lib/data/models/pantry_item.dart
-+++ b/lib/data/models/pantry_item.dart
-@@ -1,16 +1,42 @@
- import 'package:hive/hive.dart';
- 
--// Bu dosyayı bir sonraki adımda build_runner ile üreteceğiz.
--part 'kitchen_ingredient.g.dart';
-+part 'pantry_item.g.dart';
-+
-+@HiveType(typeId: 1) // Eski typeId'yi yeniden kullanabiliriz.
-+class PantryItem extends HiveObject {
- 
--// Her Hive nesnesi için benzersiz bir typeId belirliyoruz.
--// SavedRecipe için 0 kullanmıştık, bunun için 1 kullanıyoruz.
--@HiveType(typeId: 1)
--class KitchenIngredient extends HiveObject {
-   @HiveField(0)
--  final String name;
-+  final String productName;
-+
-+  @HiveField(1)
-+  final String? brand;
-+
-+  @HiveField(2)
-+  final double quantity;
-+
-+  @HiveField(3)
-+  final String unit; // "g", "adet", "ml"
-+
-+  @HiveField(4)
-+  final String category; // "Sebze & Meyve", "Süt Ürünleri" vb.
-+
-+  @HiveField(5)
-+  final DateTime addedDate;
-+
-+  @HiveField(6)
-+  final DateTime? expirationDate;
-+
-+  @HiveField(7) // YENİ ALAN
-+  final String? barcode;
- 
--  KitchenIngredient({
--    required this.name,
-+  PantryItem({
-+    required this.productName,
-+    this.brand,
-+    required this.quantity,
-+    required this.unit,
-+    required this.category,
-+    required this.addedDate,
-+    this.expirationDate,
-+    this.barcode,
-   });
--}
-+}
-\ No newline at end of file
-diff --git a/lib/data/models/pantry_item.g.dart b/lib/data/models/pantry_item.g.dart
-index 99e7697..20be51d 100644
---- a/lib/data/models/pantry_item.g.dart
-+++ b/lib/data/models/pantry_item.g.dart
-@@ -24,13 +24,14 @@ class PantryItemAdapter extends TypeAdapter<PantryItem> {
-       category: fields[4] as String,
-       addedDate: fields[5] as DateTime,
-       expirationDate: fields[6] as DateTime?,
-+      barcode: fields[7] as String?,
-     );
-   }
- 
-   @override
-   void write(BinaryWriter writer, PantryItem obj) {
-     writer
--      ..writeByte(7)
-+      ..writeByte(8)
-       ..writeByte(0)
-       ..write(obj.productName)
-       ..writeByte(1)
-@@ -44,7 +45,9 @@ class PantryItemAdapter extends TypeAdapter<PantryItem> {
-       ..writeByte(5)
-       ..write(obj.addedDate)
-       ..writeByte(6)
--      ..write(obj.expirationDate);
-+      ..write(obj.expirationDate)
-+      ..writeByte(7)
-+      ..write(obj.barcode);
-   }
- 
-   @override
-diff --git a/lib/data/models/preparation_step.dart b/lib/data/models/preparation_step.dart
-index 73fec83..bb15381 100644
---- a/lib/data/models/preparation_step.dart
-+++ b/lib/data/models/preparation_step.dart
-@@ -1,22 +1,22 @@
--// lib/data/models/preparation_step.dart
--
- class PreparationStep {
-   final int stepNumber;
-   final String description;
-   final String? videoPrompt;
-+  final int? durationInSeconds; // YENİ: Saniye cinsinden süre
- 
-   PreparationStep({
-     required this.stepNumber,
-     required this.description,
-     this.videoPrompt,
-+    this.durationInSeconds, // YENİ
-   });
- 
--  // YENİ EKLENDİ: fromJson metodu
-   factory PreparationStep.fromJson(Map<String, dynamic> json) {
-     return PreparationStep(
-       stepNumber: json['step_number'] as int? ?? 0,
-       description: json['description'] as String? ?? 'Adım açıklaması yok.',
-       videoPrompt: json['video_prompt'] as String?,
-+      durationInSeconds: json['duration_in_seconds'] as int?, // YENİ
-     );
-   }
- }
-\ No newline at end of file
-diff --git a/lib/data/providers.dart b/lib/data/providers.dart
-index f2530d4..7150364 100644
---- a/lib/data/providers.dart
-+++ b/lib/data/providers.dart
-@@ -1,47 +1,53 @@
-+// lib/data/providers.dart
-+
- import 'package:dio/dio.dart';
- import 'package:flutter_riverpod/flutter_riverpod.dart';
- import 'package:hive_flutter/hive_flutter.dart';
--import 'package:neyese4/core/api/dio_client.dart';
- import 'package:neyese4/core/api/ai_service.dart';
-+import 'package:neyese4/core/api/dio_client.dart'; // dio_client importu
- import 'package:neyese4/data/models/saved_recipe.dart';
-+import 'package:neyese4/data/repositories/product_repository.dart';
- import 'package:neyese4/data/repositories/recipe_repository.dart';
- import 'package:neyese4/data/repositories/saved_recipe_repository.dart';
-+import 'package:neyese4/data/models/pantry_item.dart';
-+import 'package:neyese4/data/repositories/pantry_repository.dart';
-+
-+
-+// --- API PROVIDER'LARI ---
-+
-+final productRepositoryProvider = Provider((ref) => ProductRepository());
- 
--// --- API PROVIDER'LARI (DEĞİŞİKLİK YOK) ---
--final dioClientProvider = Provider<Dio>((ref) {
--  return DioClient().dio;
-+
-+// GÜNCELLENDİ: Bu provider artık doğrudan Dio nesnesi yerine, DioClient sınıfının kendisini sağlar.
-+// Bu sayede DioClient'ın constructor'ı doğru şekilde çağrılır.
-+final dioClientProvider = Provider<DioClient>((ref) {
-+  return DioClient();
- });
- 
-+// GÜNCELLENDİ: Bu provider artık dioClientProvider'dan DioClient'ı alır ve içindeki .dio getter'ını kullanır.
- final recipeRepositoryProvider = Provider<RecipeRepository>((ref) {
--  final dio = ref.watch(dioClientProvider);
--  return SpoonacularRecipeRepository(dio: dio);
-+  final dioClient = ref.watch(dioClientProvider);
-+  return SpoonacularRecipeRepository(dio: dioClient.dio);
- });
- 
--// YENİ EKLENDİ: AI Servisi için Provider
- final aiServiceProvider = Provider<AiService>((ref) {
-   return AiService();
- });
- 
--// --- YEREL VERİTABANI (HIVE) PROVIDER'LARI (YENİ EKLENDİ) ---
-+// --- YEREL VERİTABANI (HIVE) PROVIDER'LARI (Değişiklik yok) ---
-+// YENİ: Akıllı Kiler (Pantry) kutusunu sağlayan provider.
-+final pantryBoxProvider = Provider((ref) => Hive.box<PantryItem>(kPantryBoxName));
-+
- 
--// 1. SavedRecipeRepository'mizin bir örneğini oluşturan Provider.
- final savedRecipeRepositoryProvider = Provider<SavedRecipeRepository>((ref) {
-   return SavedRecipeRepository();
- });
- 
--// 2. Kaydedilmiş tariflerin listesini sunan Provider.
--// Bu provider, alttaki StreamProvider'ı dinleyerek her zaman güncel listeyi tutar.
- final savedRecipesListProvider = Provider<List<SavedRecipe>>((ref) {
--  // Veritabanındaki değişiklikleri dinliyoruz.
-   ref.watch(savedRecipesStreamProvider);
--  // Ve en güncel listeyi repository'den alıp sunuyoruz.
-   return ref.read(savedRecipeRepositoryProvider).getAllSavedRecipes();
- });
- 
--
--// 3. Veritabanındaki değişiklikleri gerçek zamanlı olarak dinleyen StreamProvider.
--// Bu provider'ın ana amacı, veritabanında bir değişiklik olduğunda (ekleme/silme)
--// 'savedRecipesListProvider'ın yeniden tetiklenmesini ve güncellenmesini sağlamaktır.
--final savedRecipesStreamProvider = StreamProvider<BoxEvent>((ref) {
-+final savedRecipesStreamProvider = StreamProvider.autoDispose<BoxEvent>((ref) {
-   return ref.watch(savedRecipeRepositoryProvider).watchRecipes();
--});
-+});
-\ No newline at end of file
-diff --git a/lib/data/repositories/pantry_repository.dart b/lib/data/repositories/pantry_repository.dart
-index e69de29..481ebbb 100644
---- a/lib/data/repositories/pantry_repository.dart
-+++ b/lib/data/repositories/pantry_repository.dart
-@@ -0,0 +1,4 @@
-+// lib/data/repositories/pantry_repository.dart
-+
-+// Veritabanı kutusunun adını tanımlıyoruz.
-+const String kPantryBoxName = 'pantry_box';
-\ No newline at end of file
-diff --git a/lib/data/repositories/recipe_repository.dart b/lib/data/repositories/recipe_repository.dart
-index a8a04b6..f90cd0b 100644
---- a/lib/data/repositories/recipe_repository.dart
-+++ b/lib/data/repositories/recipe_repository.dart
-@@ -3,13 +3,12 @@ import 'package:neyese4/data/models/recipe_detail.dart';
- import 'package:neyese4/data/models/recipe_suggestion.dart';
- import 'package:neyese4/data/models/user_preferences.dart';
- 
-+import '../../features/recipe_finder/application/search_query.dart';
-+
- abstract class RecipeRepository {
-   Future<List<RecipeSuggestion>> getRandomRecipes();
-   Future<RecipeDetail> getRecipeDetailById(int id);
--  Future<List<RecipeSuggestion>> findRecipesByIngredients(
--      List<String> ingredients,
--      UserPreferences preferences,
--      );
-+  Future<List<RecipeSuggestion>> findRecipes(SearchQuery query);
- }
- 
- class SpoonacularRecipeRepository implements RecipeRepository {
-@@ -54,46 +53,43 @@ class SpoonacularRecipeRepository implements RecipeRepository {
-     } catch (e) { throw 'Beklenmedik bir hata oluştu: $e'; }
-   }
- 
--  // ARAMA FONKSİYONU TAMAMEN GÜNCELLENDİ
-+  // GÜNCELLENDİ: Metodun adı ve aldığı parametreler değişti
-   @override
--  Future<List<RecipeSuggestion>> findRecipesByIngredients(
--      List<String> ingredients,
--      UserPreferences preferences,
--      ) async {
--    final ingredientsString = _translateIngredients(ingredients);
--
-+  Future<List<RecipeSuggestion>> findRecipes(SearchQuery query) async {
-     final Map<String, dynamic> queryParameters = {
--      // DÜZELTME: Parametre adını 'includeIngredients' olarak değiştirdik.
--      'includeIngredients': ingredientsString,
-       'number': 20,
-     };
- 
--    if (preferences.diet != null) {
--      queryParameters['diet'] = preferences.diet;
-+    // Anahtar kelime ile arama
-+    if (query.query != null && query.query!.isNotEmpty) {
-+      queryParameters['query'] = query.query;
-     }
- 
--    if (preferences.intolerances != null && preferences.intolerances!.isNotEmpty) {
--      queryParameters['intolerances'] = preferences.intolerances!.join(',');
-+    // Malzemelerle arama
-+    if (query.ingredients != null && query.ingredients!.isNotEmpty) {
-+      queryParameters['includeIngredients'] = _translateIngredients(query.ingredients!);
-     }
- 
--    try {
--      // DÜZELTME: API endpoint'ini '/recipes/complexSearch' olarak değiştirdik.
--      final response = await dio.get(
--        '/recipes/complexSearch',
--        queryParameters: queryParameters,
--      );
-+    // Diyet, alerji ve diğer filtreler
-+    if (query.diet != null) { queryParameters['diet'] = query.diet; }
-+    if (query.intolerances != null && query.intolerances!.isNotEmpty) { queryParameters['intolerances'] = query.intolerances!.join(','); }
-+    if (query.type != null) { queryParameters['type'] = query.type; }
-+    if (query.cuisine != null) { queryParameters['cuisine'] = query.cuisine; }
-+    // YENİ EKLENDİ: maxReadyTime parametresini API isteğine ekliyoruz.
-+    if (query.maxReadyTime != null) {
-+      queryParameters['maxReadyTime'] = query.maxReadyTime;
-+    }
- 
-+    try {
-+      final response = await dio.get('/recipes/complexSearch', queryParameters: queryParameters);
-       if (response.statusCode == 200) {
--        // DÜZELTME: complexSearch'in cevabı 'results' anahtarı altındadır.
-         final List<dynamic> results = response.data['results'];
-         return results.map((json) => RecipeSuggestion.fromJson(json)).toList();
-       } else {
-         throw 'API isteği başarısız oldu: ${response.statusCode}';
-       }
--    } on DioException catch (e) {
--      throw 'API isteği sırasında bir hata oluştu: $e';
-     } catch (e) {
-       throw 'Beklenmedik bir hata oluştu: $e';
-     }
-   }
--}
-+}
-\ No newline at end of file
-diff --git a/lib/features/profile/application/xp_provider.dart b/lib/features/profile/application/xp_provider.dart
-index e69de29..39314d7 100644
---- a/lib/features/profile/application/xp_provider.dart
-+++ b/lib/features/profile/application/xp_provider.dart
-@@ -0,0 +1,7 @@
-+// lib/features/profile/application/xp_provider.dart
-+
-+import 'package:flutter_riverpod/flutter_riverpod.dart';
-+
-+// Kullanıcının toplam XP'sini tutan basit bir StateProvider.
-+// Uygulama açıldığında 0'dan başlar. (Daha sonra bu Hive'da saklanabilir)
-+final userXpProvider = StateProvider<int>((ref) => 0);
-\ No newline at end of file
-diff --git a/lib/features/recipe_finder/application/mock_recipe_data.dart b/lib/features/recipe_finder/application/mock_recipe_data.dart
-index 2998de9..7643c5a 100644
---- a/lib/features/recipe_finder/application/mock_recipe_data.dart
-+++ b/lib/features/recipe_finder/application/mock_recipe_data.dart
-@@ -43,7 +43,8 @@ final mockEnrichedRecipeContent = EnrichedRecipeContent(
-     PreparationStep(
-         stepNumber: 2,
-         description: "Geniş bir tavada etleri yüksek ateşte mühürleyin. Ayrı bir sos tavasında 2 yemek kaşığı tereyağını eritin ve salçayı kavurun. Az su ekleyerek sos kıvamına getirin.",
--        videoPrompt: "Close-up shot of beef strips searing in a hot pan. A separate small pan with butter melting and tomato paste being stirred in."
-+        videoPrompt: "Close-up shot of beef strips searing in a hot pan. A separate small pan with butter melting and tomato paste being stirred in.",
-+        durationInSeconds: 1800 // YENİ: 30 dakika = 1800 saniye
-     ),
-     PreparationStep(
-         stepNumber: 3,
-diff --git a/lib/features/recipe_finder/application/recipe_providers.dart b/lib/features/recipe_finder/application/recipe_providers.dart
-index a840d68..44a7e41 100644
---- a/lib/features/recipe_finder/application/recipe_providers.dart
-+++ b/lib/features/recipe_finder/application/recipe_providers.dart
-@@ -7,22 +7,69 @@ import 'package:neyese4/data/models/user_preferences.dart';
- import 'package:neyese4/data/providers.dart';
- import 'package:neyese4/features/recipe_finder/application/search_query.dart';
- 
--// --- ARAMA VE ÖNERİ PROVIDER'LARI (Değişiklik yok) ---
--final randomRecipesProvider = FutureProvider.autoDispose<List<RecipeSuggestion>>((ref) {
-+final randomRecipesProvider = FutureProvider.autoDispose<List<RecipeSuggestion>>((ref) async {
-   final recipeRepository = ref.watch(recipeRepositoryProvider);
--  return recipeRepository.getRandomRecipes();
--});
-+  final aiService = ref.watch(aiServiceProvider);
-+
-+  // 1. Önce İngilizce başlıklarla tarifleri al
-+  final originalRecipes = await recipeRepository.getRandomRecipes();
-+  if (originalRecipes.isEmpty) {
-+    return [];
-+  }
-+
-+  // 2. Sadece başlıkları bir listeye topla
-+  final englishTitles = originalRecipes.map((e) => e.title).toList();
-+
-+  // 3. Tüm başlıkları tek seferde çeviri için AI'a gönder
-+  final turkishTitles = await aiService.translateRecipeTitles(englishTitles);
- 
--final recipesByIngredientsProvider =
--FutureProvider.autoDispose.family<List<RecipeSuggestion>, SearchQuery>((ref, query) {
--  if (query.ingredients.isEmpty) {
--    return Future.value([]);
-+  // 4. Orijinal tarif listesini, çevrilmiş başlıklarla yeni bir listeye dönüştür
-+  if (originalRecipes.length == turkishTitles.length) {
-+    final translatedRecipes = <RecipeSuggestion>[];
-+    for (int i = 0; i < originalRecipes.length; i++) {
-+      translatedRecipes.add(
-+        originalRecipes[i].copyWith(title: turkishTitles[i]),
-+      );
-+    }
-+    return translatedRecipes;
-   }
-+
-+  // Çeviri sayısı tutmazsa, güvenli liman olarak orijinal listeyi döndür
-+  return originalRecipes;
-+});
-+
-+// GÜNCELLENDİ: Bu provider artık arama sonuçlarını da Türkçeleştiriyor.
-+final searchResultsProvider =
-+FutureProvider.autoDispose.family<List<RecipeSuggestion>, SearchQuery>((ref, query) async {
-+
-   final recipeRepository = ref.watch(recipeRepositoryProvider);
--  return recipeRepository.findRecipesByIngredients(
--    query.ingredients,
--    UserPreferences(diet: query.diet, intolerances: query.intolerances),
--  );
-+  final aiService = ref.watch(aiServiceProvider);
-+
-+  // 1. Önce İngilizce başlıklarla arama sonuçlarını al
-+  final originalRecipes = await recipeRepository.findRecipes(query);
-+  if (originalRecipes.isEmpty) {
-+    return [];
-+  }
-+
-+  // 2. Sadece başlıkları bir listeye topla
-+  final englishTitles = originalRecipes.map((e) => e.title).toList();
-+
-+  // 3. Tüm başlıkları tek seferde çeviri için AI'a gönder
-+  final turkishTitles = await aiService.translateRecipeTitles(englishTitles);
-+
-+  // 4. Orijinal sonuçları, çevrilmiş başlıklarla yeni bir listeye dönüştür
-+  if (originalRecipes.length == turkishTitles.length) {
-+    final translatedRecipes = <RecipeSuggestion>[];
-+    for (int i = 0; i < originalRecipes.length; i++) {
-+      translatedRecipes.add(
-+        originalRecipes[i].copyWith(title: turkishTitles[i]),
-+      );
-+    }
-+    return translatedRecipes;
-+  }
-+
-+  // Güvenli liman olarak orijinal listeyi döndür
-+  return originalRecipes;
- });
- 
- 
-@@ -65,4 +112,12 @@ final isRecipeSavedProvider = Provider.autoDispose.family<bool, int>((ref, recip
-   ref.watch(savedRecipesStreamProvider);
-   final repository = ref.watch(savedRecipeRepositoryProvider);
-   return repository.isRecipeSaved(recipeId);
-+});
-+
-+// YENİ: Akşam yemeği önerileri için özel bir provider
-+final dinnerIdeasProvider = FutureProvider.autoDispose<List<RecipeSuggestion>>((ref) {
-+  // Akşam yemeği için 'ana yemek' tipinde bir arama yapıyoruz.
-+  const query = SearchQuery(type: 'main course');
-+  // Mevcut arama provider'ımızı bu sabit sorguyla tetikliyoruz.
-+  return ref.watch(searchResultsProvider(query).future);
- });
-\ No newline at end of file
-diff --git a/lib/features/recipe_finder/application/search_query.dart b/lib/features/recipe_finder/application/search_query.dart
-index c631e1a..e856e45 100644
---- a/lib/features/recipe_finder/application/search_query.dart
-+++ b/lib/features/recipe_finder/application/search_query.dart
-@@ -1,3 +1,5 @@
-+// lib/features/recipe_finder/application/search_query.dart
-+
- import 'package:freezed_annotation/freezed_annotation.dart';
- 
- part 'search_query.freezed.dart';
-@@ -5,10 +7,12 @@ part 'search_query.freezed.dart';
- @freezed
- class SearchQuery with _$SearchQuery {
-   const factory SearchQuery({
--    required List<String> ingredients,
-+    String? query,
-+    List<String>? ingredients,
-     String? diet,
-     List<String>? intolerances,
--    // YENİ EKLENDİ: Mutfak aletlerini arama kriterine ekliyoruz.
--    List<String>? equipment,
-+    String? type,
-+    String? cuisine,
-+    int? maxReadyTime, // YENİ EKLENDİ
-   }) = _SearchQuery;
--}
-+}
-\ No newline at end of file
-diff --git a/lib/features/recipe_finder/application/search_query.freezed.dart b/lib/features/recipe_finder/application/search_query.freezed.dart
-index c30bb3a..5a7bad5 100644
---- a/lib/features/recipe_finder/application/search_query.freezed.dart
-+++ b/lib/features/recipe_finder/application/search_query.freezed.dart
-@@ -16,11 +16,13 @@ final _privateConstructorUsedError = UnsupportedError(
- 
- /// @nodoc
- mixin _$SearchQuery {
--  List<String> get ingredients => throw _privateConstructorUsedError;
-+  String? get query => throw _privateConstructorUsedError;
-+  List<String>? get ingredients => throw _privateConstructorUsedError;
-   String? get diet => throw _privateConstructorUsedError;
--  List<String>? get intolerances =>
--      throw _privateConstructorUsedError; // YENİ EKLENDİ: Mutfak aletlerini arama kriterine ekliyoruz.
--  List<String>? get equipment => throw _privateConstructorUsedError;
-+  List<String>? get intolerances => throw _privateConstructorUsedError;
-+  String? get type => throw _privateConstructorUsedError;
-+  String? get cuisine => throw _privateConstructorUsedError;
-+  int? get maxReadyTime => throw _privateConstructorUsedError;
- 
-   /// Create a copy of SearchQuery
-   /// with the given fields replaced by the non-null parameter values.
-@@ -36,10 +38,13 @@ abstract class $SearchQueryCopyWith<$Res> {
-       _$SearchQueryCopyWithImpl<$Res, SearchQuery>;
-   @useResult
-   $Res call(
--      {List<String> ingredients,
-+      {String? query,
-+      List<String>? ingredients,
-       String? diet,
-       List<String>? intolerances,
--      List<String>? equipment});
-+      String? type,
-+      String? cuisine,
-+      int? maxReadyTime});
- }
- 
- /// @nodoc
-@@ -57,16 +62,23 @@ class _$SearchQueryCopyWithImpl<$Res, $Val extends SearchQuery>
-   @pragma('vm:prefer-inline')
-   @override
-   $Res call({
--    Object? ingredients = null,
-+    Object? query = freezed,
-+    Object? ingredients = freezed,
-     Object? diet = freezed,
-     Object? intolerances = freezed,
--    Object? equipment = freezed,
-+    Object? type = freezed,
-+    Object? cuisine = freezed,
-+    Object? maxReadyTime = freezed,
-   }) {
-     return _then(_value.copyWith(
--      ingredients: null == ingredients
-+      query: freezed == query
-+          ? _value.query
-+          : query // ignore: cast_nullable_to_non_nullable
-+              as String?,
-+      ingredients: freezed == ingredients
-           ? _value.ingredients
-           : ingredients // ignore: cast_nullable_to_non_nullable
--              as List<String>,
-+              as List<String>?,
-       diet: freezed == diet
-           ? _value.diet
-           : diet // ignore: cast_nullable_to_non_nullable
-@@ -75,10 +87,18 @@ class _$SearchQueryCopyWithImpl<$Res, $Val extends SearchQuery>
-           ? _value.intolerances
-           : intolerances // ignore: cast_nullable_to_non_nullable
-               as List<String>?,
--      equipment: freezed == equipment
--          ? _value.equipment
--          : equipment // ignore: cast_nullable_to_non_nullable
--              as List<String>?,
-+      type: freezed == type
-+          ? _value.type
-+          : type // ignore: cast_nullable_to_non_nullable
-+              as String?,
-+      cuisine: freezed == cuisine
-+          ? _value.cuisine
-+          : cuisine // ignore: cast_nullable_to_non_nullable
-+              as String?,
-+      maxReadyTime: freezed == maxReadyTime
-+          ? _value.maxReadyTime
-+          : maxReadyTime // ignore: cast_nullable_to_non_nullable
-+              as int?,
-     ) as $Val);
-   }
- }
-@@ -92,10 +112,13 @@ abstract class _$$SearchQueryImplCopyWith<$Res>
-   @override
-   @useResult
-   $Res call(
--      {List<String> ingredients,
-+      {String? query,
-+      List<String>? ingredients,
-       String? diet,
-       List<String>? intolerances,
--      List<String>? equipment});
-+      String? type,
-+      String? cuisine,
-+      int? maxReadyTime});
- }
- 
- /// @nodoc
-@@ -111,16 +134,23 @@ class __$$SearchQueryImplCopyWithImpl<$Res>
-   @pragma('vm:prefer-inline')
-   @override
-   $Res call({
--    Object? ingredients = null,
-+    Object? query = freezed,
-+    Object? ingredients = freezed,
-     Object? diet = freezed,
-     Object? intolerances = freezed,
--    Object? equipment = freezed,
-+    Object? type = freezed,
-+    Object? cuisine = freezed,
-+    Object? maxReadyTime = freezed,
-   }) {
-     return _then(_$SearchQueryImpl(
--      ingredients: null == ingredients
-+      query: freezed == query
-+          ? _value.query
-+          : query // ignore: cast_nullable_to_non_nullable
-+              as String?,
-+      ingredients: freezed == ingredients
-           ? _value._ingredients
-           : ingredients // ignore: cast_nullable_to_non_nullable
--              as List<String>,
-+              as List<String>?,
-       diet: freezed == diet
-           ? _value.diet
-           : diet // ignore: cast_nullable_to_non_nullable
-@@ -129,10 +159,18 @@ class __$$SearchQueryImplCopyWithImpl<$Res>
-           ? _value._intolerances
-           : intolerances // ignore: cast_nullable_to_non_nullable
-               as List<String>?,
--      equipment: freezed == equipment
--          ? _value._equipment
--          : equipment // ignore: cast_nullable_to_non_nullable
--              as List<String>?,
-+      type: freezed == type
-+          ? _value.type
-+          : type // ignore: cast_nullable_to_non_nullable
-+              as String?,
-+      cuisine: freezed == cuisine
-+          ? _value.cuisine
-+          : cuisine // ignore: cast_nullable_to_non_nullable
-+              as String?,
-+      maxReadyTime: freezed == maxReadyTime
-+          ? _value.maxReadyTime
-+          : maxReadyTime // ignore: cast_nullable_to_non_nullable
-+              as int?,
-     ));
-   }
- }
-@@ -141,20 +179,26 @@ class __$$SearchQueryImplCopyWithImpl<$Res>
- 
- class _$SearchQueryImpl implements _SearchQuery {
-   const _$SearchQueryImpl(
--      {required final List<String> ingredients,
-+      {this.query,
-+      final List<String>? ingredients,
-       this.diet,
-       final List<String>? intolerances,
--      final List<String>? equipment})
-+      this.type,
-+      this.cuisine,
-+      this.maxReadyTime})
-       : _ingredients = ingredients,
--        _intolerances = intolerances,
--        _equipment = equipment;
-+        _intolerances = intolerances;
- 
--  final List<String> _ingredients;
-   @override
--  List<String> get ingredients {
-+  final String? query;
-+  final List<String>? _ingredients;
-+  @override
-+  List<String>? get ingredients {
-+    final value = _ingredients;
-+    if (value == null) return null;
-     if (_ingredients is EqualUnmodifiableListView) return _ingredients;
-     // ignore: implicit_dynamic_type
--    return EqualUnmodifiableListView(_ingredients);
-+    return EqualUnmodifiableListView(value);
-   }
- 
-   @override
-@@ -169,21 +213,16 @@ class _$SearchQueryImpl implements _SearchQuery {
-     return EqualUnmodifiableListView(value);
-   }
- 
--// YENİ EKLENDİ: Mutfak aletlerini arama kriterine ekliyoruz.
--  final List<String>? _equipment;
--// YENİ EKLENDİ: Mutfak aletlerini arama kriterine ekliyoruz.
-   @override
--  List<String>? get equipment {
--    final value = _equipment;
--    if (value == null) return null;
--    if (_equipment is EqualUnmodifiableListView) return _equipment;
--    // ignore: implicit_dynamic_type
--    return EqualUnmodifiableListView(value);
--  }
-+  final String? type;
-+  @override
-+  final String? cuisine;
-+  @override
-+  final int? maxReadyTime;
- 
-   @override
-   String toString() {
--    return 'SearchQuery(ingredients: $ingredients, diet: $diet, intolerances: $intolerances, equipment: $equipment)';
-+    return 'SearchQuery(query: $query, ingredients: $ingredients, diet: $diet, intolerances: $intolerances, type: $type, cuisine: $cuisine, maxReadyTime: $maxReadyTime)';
-   }
- 
-   @override
-@@ -191,22 +230,28 @@ class _$SearchQueryImpl implements _SearchQuery {
-     return identical(this, other) ||
-         (other.runtimeType == runtimeType &&
-             other is _$SearchQueryImpl &&
-+            (identical(other.query, query) || other.query == query) &&
-             const DeepCollectionEquality()
-                 .equals(other._ingredients, _ingredients) &&
-             (identical(other.diet, diet) || other.diet == diet) &&
-             const DeepCollectionEquality()
-                 .equals(other._intolerances, _intolerances) &&
--            const DeepCollectionEquality()
--                .equals(other._equipment, _equipment));
-+            (identical(other.type, type) || other.type == type) &&
-+            (identical(other.cuisine, cuisine) || other.cuisine == cuisine) &&
-+            (identical(other.maxReadyTime, maxReadyTime) ||
-+                other.maxReadyTime == maxReadyTime));
-   }
- 
-   @override
-   int get hashCode => Object.hash(
-       runtimeType,
-+      query,
-       const DeepCollectionEquality().hash(_ingredients),
-       diet,
-       const DeepCollectionEquality().hash(_intolerances),
--      const DeepCollectionEquality().hash(_equipment));
-+      type,
-+      cuisine,
-+      maxReadyTime);
- 
-   /// Create a copy of SearchQuery
-   /// with the given fields replaced by the non-null parameter values.
-@@ -219,20 +264,28 @@ class _$SearchQueryImpl implements _SearchQuery {
- 
- abstract class _SearchQuery implements SearchQuery {
-   const factory _SearchQuery(
--      {required final List<String> ingredients,
-+      {final String? query,
-+      final List<String>? ingredients,
-       final String? diet,
-       final List<String>? intolerances,
--      final List<String>? equipment}) = _$SearchQueryImpl;
-+      final String? type,
-+      final String? cuisine,
-+      final int? maxReadyTime}) = _$SearchQueryImpl;
- 
-   @override
--  List<String> get ingredients;
-+  String? get query;
-+  @override
-+  List<String>? get ingredients;
-   @override
-   String? get diet;
-   @override
--  List<String>?
--      get intolerances; // YENİ EKLENDİ: Mutfak aletlerini arama kriterine ekliyoruz.
-+  List<String>? get intolerances;
-+  @override
-+  String? get type;
-+  @override
-+  String? get cuisine;
-   @override
--  List<String>? get equipment;
-+  int? get maxReadyTime;
- 
-   /// Create a copy of SearchQuery
-   /// with the given fields replaced by the non-null parameter values.
-diff --git a/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart b/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
-index e69de29..7b417de 100644
---- a/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
-+++ b/lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
-@@ -0,0 +1,180 @@
-+// lib/features/recipe_finder/presentation/screens/cooking_mode_screen.dart
-+
-+import 'package:flutter/material.dart';
-+import 'package:flutter_riverpod/flutter_riverpod.dart'; // YENİ: Riverpod importu
-+import 'package:neyese4/core/theme/app_colors.dart';
-+import 'package:neyese4/core/theme/app_text_styles.dart';
-+import 'package:neyese4/data/models/preparation_step.dart';
-+import 'package:neyese4/features/profile/application/xp_provider.dart'; // YENİ: XP Provider importu
-+import 'package:timer_count_down/timer_controller.dart';
-+import 'package:timer_count_down/timer_count_down.dart';
-+
-+// GÜNCELLENDİ: StatefulWidget -> ConsumerStatefulWidget
-+class CookingModeScreen extends ConsumerStatefulWidget {
-+  final String recipeTitle;
-+  final List<PreparationStep> steps;
-+
-+  const CookingModeScreen({
-+    super.key,
-+    required this.recipeTitle,
-+    required this.steps,
-+  });
-+
-+  @override
-+  // GÜNCELLENDİ: State -> ConsumerState
-+  ConsumerState<CookingModeScreen> createState() => _CookingModeScreenState();
-+}
-+
-+// GÜNCELLENDİ: State -> ConsumerState
-+class _CookingModeScreenState extends ConsumerState<CookingModeScreen> {
-+  int _currentStepIndex = 0;
-+  final CountdownController _countdownController = CountdownController(autoStart: false);
-+
-+  void _goToNextStep() {
-+    if (_currentStepIndex < widget.steps.length - 1) {
-+      // YENİ: Her adım geçildiğinde 10 XP kazan
-+      ref.read(userXpProvider.notifier).state += 10;
-+      ScaffoldMessenger.of(context).showSnackBar(
-+        const SnackBar(content: Text('+10 XP Kazanıldı! 🎉'), duration: Duration(seconds: 1)),
-+      );
-+
-+      setState(() {
-+        _currentStepIndex++;
-+        _countdownController.restart();
-+        _countdownController.pause();
-+      });
-+    }
-+  }
-+
-+  void _goToPreviousStep() {
-+    if (_currentStepIndex > 0) {
-+      setState(() {
-+        _currentStepIndex--;
-+        _countdownController.restart();
-+        _countdownController.pause();
-+      });
-+    }
-+  }
-+
-+  @override
-+  Widget build(BuildContext context) {
-+    final PreparationStep currentStep = widget.steps[_currentStepIndex];
-+
-+    return Scaffold(
-+      appBar: AppBar(
-+        title: Text('${_currentStepIndex + 1}. Adım / ${widget.steps.length}'),
-+        centerTitle: true,
-+        leading: IconButton(
-+          icon: const Icon(Icons.close),
-+          onPressed: () => Navigator.of(context).pop(),
-+        ),
-+      ),
-+      // ... body kısmı aynı ...
-+      body: Padding(
-+        padding: const EdgeInsets.all(16.0),
-+        child: Column(
-+          children: [
-+            AspectRatio(
-+              aspectRatio: 16 / 9,
-+              child: Container(
-+                decoration: BoxDecoration(
-+                  color: Colors.grey.shade200,
-+                  borderRadius: BorderRadius.circular(12),
-+                ),
-+                child: const Center(
-+                  child: Icon(Icons.videocam_outlined, color: AppColors.neutralGrey, size: 48),
-+                ),
-+              ),
-+            ),
-+            const SizedBox(height: 24),
-+            if (currentStep.durationInSeconds != null)
-+              _buildTimerWidget(currentStep.durationInSeconds!),
-+            Expanded(
-+              child: SingleChildScrollView(
-+                child: Padding(
-+                  padding: const EdgeInsets.only(top: 16.0),
-+                  child: Text(
-+                    currentStep.description,
-+                    style: AppTextStyles.body.copyWith(fontSize: 20, height: 1.6),
-+                  ),
-+                ),
-+              ),
-+            ),
-+          ],
-+        ),
-+      ),
-+      bottomNavigationBar: Padding(
-+        padding: const EdgeInsets.all(8.0),
-+        child: Row(
-+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
-+          children: [
-+            Opacity(
-+              opacity: _currentStepIndex > 0 ? 1.0 : 0.0,
-+              child: ElevatedButton.icon(
-+                onPressed: _currentStepIndex > 0 ? _goToPreviousStep : null,
-+                icon: const Icon(Icons.arrow_back),
-+                label: const Text('Önceki'),
-+                style: ElevatedButton.styleFrom(backgroundColor: Colors.grey.shade300),
-+              ),
-+            ),
-+            ElevatedButton.icon(
-+              onPressed: () {
-+                if (_currentStepIndex == widget.steps.length - 1) {
-+                  // YENİ: Tarifi bitirince 50 XP bonus kazan
-+                  ref.read(userXpProvider.notifier).state += 50;
-+                  ScaffoldMessenger.of(context).showSnackBar(
-+                    const SnackBar(content: Text('Tarif Tamamlandı! +50 XP Bonus! 🏆'), duration: Duration(seconds: 2)),
-+                  );
-+                  Navigator.of(context).pop();
-+                } else {
-+                  _goToNextStep();
-+                }
-+              },
-+              icon: Icon(_currentStepIndex == widget.steps.length - 1 ? Icons.check_circle : Icons.arrow_forward),
-+              label: Text(_currentStepIndex == widget.steps.length - 1 ? 'Tarifi Bitir' : 'Sonraki'),
-+              style: ElevatedButton.styleFrom(
-+                  backgroundColor: AppColors.accent, foregroundColor: Colors.white),
-+            ),
-+          ],
-+        ),
-+      ),
-+    );
-+  }
-+
-+  // _buildTimerWidget metodu aynı
-+  Widget _buildTimerWidget(int seconds) {
-+    return Card(
-+      elevation: 2,
-+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
-+      child: Padding(
-+        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
-+        child: Row(
-+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
-+          children: [
-+            Countdown(
-+              controller: _countdownController,
-+              seconds: seconds,
-+              build: (_, double time) => Text(
-+                '${(time / 60).floor().toString().padLeft(2, '0')}:${(time % 60).floor().toString().padLeft(2, '0')}',
-+                style: AppTextStyles.h1.copyWith(fontFamily: 'monospace'),
-+              ),
-+              interval: const Duration(milliseconds: 100),
-+              onFinished: () {
-+                ScaffoldMessenger.of(context).showSnackBar(
-+                  const SnackBar(content: Text('Süre doldu!')),
-+                );
-+              },
-+            ),
-+            Row(
-+              children: [
-+                IconButton(icon: const Icon(Icons.play_arrow, color: AppColors.accent),onPressed: () => _countdownController.resume()),
-+                IconButton(icon: const Icon(Icons.pause, color: AppColors.primaryAction),onPressed: () => _countdownController.pause()),
-+                IconButton(icon: const Icon(Icons.replay, color: AppColors.neutralGrey),onPressed: () => _countdownController.restart()),
-+              ],
-+            )
-+          ],
-+        ),
-+      ),
-+    );
-+  }
-+}
-\ No newline at end of file
-diff --git a/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart b/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
-index e3b265e..78aacb3 100644
---- a/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
-+++ b/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
-@@ -1,5 +1,6 @@
- // lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
- 
-+import 'package:flutter/foundation.dart';
- import 'package:flutter/material.dart';
- import 'package:flutter_riverpod/flutter_riverpod.dart';
- import 'package:neyese4/core/theme/app_colors.dart';
-@@ -7,42 +8,43 @@ import 'package:neyese4/core/theme/app_text_styles.dart';
- import 'package:neyese4/data/models/saved_recipe.dart';
- import 'package:neyese4/data/providers.dart';
- import 'package:neyese4/features/recipe_finder/application/recipe_providers.dart';
--// Widget'larımızı import ediyoruz
-+import 'package:neyese4/features/recipe_finder/presentation/screens/cooking_mode_screen.dart';
- import 'package:neyese4/features/recipe_finder/presentation/widgets/chef_tips_card.dart';
- import 'package:neyese4/features/recipe_finder/presentation/widgets/ingredients_card.dart';
- import 'package:neyese4/features/recipe_finder/presentation/widgets/nutrition_card.dart';
- import 'package:neyese4/features/recipe_finder/presentation/widgets/preparation_steps_card.dart';
- import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_title_and_meta_card.dart';
- import 'package:neyese4/features/recipe_finder/presentation/widgets/utensils_card.dart';
--import 'package:flutter/foundation.dart'; // Web kontrolü için bu importu ekleyin
- 
--// Widget'ımızı tekrar ConsumerWidget'a çeviriyoruz.
- class RecipeDetailScreen extends ConsumerWidget {
-   final int recipeId;
-   const RecipeDetailScreen({super.key, required this.recipeId});
- 
-   @override
-   Widget build(BuildContext context, WidgetRef ref) {
--    // Yeni birleşik provider'ımızı dinliyoruz.
-     final recipeAsyncValue = ref.watch(fullRecipeProvider(recipeId));
- 
--    return Scaffold(
--      backgroundColor: AppColors.background,
--      // Gelen verinin durumuna göre (yükleniyor, hata, başarılı) farklı arayüzler gösteriyoruz.
--      body: recipeAsyncValue.when(
--        loading: () => const Center(child: CircularProgressIndicator()),
--        error: (err, stack) => Center(
-+    return recipeAsyncValue.when(
-+      loading: () => const Scaffold(
-+        body: Center(child: CircularProgressIndicator()),
-+      ),
-+      error: (err, stack) => Scaffold(
-+        appBar: AppBar(title: const Text('Hata')),
-+        body: Center(
-           child: Padding(
-             padding: const EdgeInsets.all(20.0),
--            child: Text('Tarif yüklenemedi.\nLütfen internet bağlantınızı kontrol edin.\nHata: $err', textAlign: TextAlign.center),
-+            child: Text('Tarif yüklenemedi.\nLütfen internet bağlantınızı kontrol edin.\nHata: $err',
-+                textAlign: TextAlign.center),
-           ),
-         ),
--        data: (content) {
--          // Veri başarıyla geldiğinde, daha önce tasarladığımız arayüzü gösteriyoruz.
--          final isSaved = ref.watch(isRecipeSavedProvider(recipeId));
--          const double cardSpacing = 24.0;
-+      ),
-+      data: (content) {
-+        final isSaved = ref.watch(isRecipeSavedProvider(recipeId));
-+        const double cardSpacing = 24.0;
- 
--          return CustomScrollView(
-+        return Scaffold(
-+          backgroundColor: AppColors.background,
-+          body: CustomScrollView(
-             slivers: [
-               SliverAppBar(
-                 expandedHeight: 250.0,
-@@ -55,7 +57,6 @@ class RecipeDetailScreen extends ConsumerWidget {
-                         shadows: [Shadow(color: Colors.black54, blurRadius: 8, offset: Offset(0, 1))]),
-                   ),
-                   background: Image.network(
--                    // Web'de CORS hatası almamak için proxy kullanıyoruz.
-                     kIsWeb
-                         ? 'https://api.allorigins.win/raw?url=${Uri.encodeComponent(content.imageUrl)}'
-                         : content.imageUrl,
-@@ -64,18 +65,17 @@ class RecipeDetailScreen extends ConsumerWidget {
-                   ),
-                 ),
-                 actions: [
--                  // Kaydetme butonunu tekrar aktif hale getiriyoruz
-                   IconButton(
--                    icon: Icon(isSaved ? Icons.bookmark : Icons.bookmark_border_outlined, color: isSaved ? AppColors.primaryAction : null),
-+                    icon: Icon(isSaved ? Icons.bookmark : Icons.bookmark_border_outlined,
-+                        color: isSaved ? AppColors.primaryAction : null),
-                     onPressed: () {
-                       final repository = ref.read(savedRecipeRepositoryProvider);
-                       if (isSaved) {
-                         repository.deleteRecipe(recipeId);
-                       } else {
--                        // Not: image URL'i şu an mock datadan değil, AI cevabından gelmiyor.
--                        // Şimdilik sabit bir URL kullanabiliriz veya Spoonacular'dan gelen orijinali kullanabiliriz.
--                        // Bu özellik daha sonra geliştirilebilir.
--                        repository.saveRecipe(SavedRecipe(id: recipeId, title: content.title, image: content.imageUrl));                      }
-+                        repository.saveRecipe(
-+                            SavedRecipe(id: recipeId, title: content.title, image: content.imageUrl));
-+                      }
-                     },
-                   ),
-                 ],
-@@ -102,23 +102,31 @@ class RecipeDetailScreen extends ConsumerWidget {
-                 ),
-               ),
-             ],
--          );
--        },
--      ),
--      // Butonun görünürlüğü veri yüklendiğinde sağlanır.
--      bottomNavigationBar: recipeAsyncValue.hasValue ? Padding(
--        padding: const EdgeInsets.all(16.0),
--        child: ElevatedButton.icon(
--          icon: const Icon(Icons.play_arrow_rounded, color: Colors.white),
--          onPressed: () {},
--          style: ElevatedButton.styleFrom(
--            backgroundColor: AppColors.accent,
--            padding: const EdgeInsets.symmetric(vertical: 16),
--            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
-           ),
--          label: const Text('Tarifi Yapmaya Başla', style: AppTextStyles.button),
--        ),
--      ) : null,
-+          bottomNavigationBar: Padding(
-+            padding: const EdgeInsets.all(16.0),
-+            child: ElevatedButton.icon(
-+              icon: const Icon(Icons.play_arrow_rounded, color: Colors.white),
-+              onPressed: () {
-+                Navigator.of(context).push(
-+                  MaterialPageRoute(
-+                    builder: (context) => CookingModeScreen(
-+                      recipeTitle: content.title,
-+                      steps: content.preparationSteps,
-+                    ),
-+                  ),
-+                );
-+              },
-+              style: ElevatedButton.styleFrom(
-+                backgroundColor: AppColors.accent,
-+                padding: const EdgeInsets.symmetric(vertical: 16),
-+                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
-+              ),
-+              label: const Text('Tarifi Yapmaya Başla', style: AppTextStyles.button),
-+            ),
-+          ),
-+        );
-+      },
-     );
-   }
- }
-\ No newline at end of file
-diff --git a/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart b/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart
-index 9db7a67..ebbf3c3 100644
---- a/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart
-+++ b/lib/features/recipe_finder/presentation/screens/recipe_results_screen.dart
-@@ -13,9 +13,9 @@ class RecipeResultsScreen extends ConsumerWidget {
- 
-   @override
-   Widget build(BuildContext context, WidgetRef ref) {
--    final resultsAsyncValue = ref.watch(recipesByIngredientsProvider(searchQuery));
-+    final resultsAsyncValue = ref.watch(searchResultsProvider(searchQuery));
-     return Scaffold(
--      appBar: AppBar(title: Text('${searchQuery.ingredients.join(', ')} için Tarifler')),
-+      appBar: AppBar(title: Text('${searchQuery.ingredients?.join(', ')} için Tarifler')),
-       body: resultsAsyncValue.when(
-         loading: () => const Center(child: CircularProgressIndicator()),
-         error: (err, stack) => Center(child: Text('Hata oluştu: $err')),
-diff --git a/lib/features/recipe_finder/presentation/widgets/recipe_card.dart b/lib/features/recipe_finder/presentation/widgets/recipe_card.dart
-index e69de29..91f2e24 100644
---- a/lib/features/recipe_finder/presentation/widgets/recipe_card.dart
-+++ b/lib/features/recipe_finder/presentation/widgets/recipe_card.dart
-@@ -0,0 +1,76 @@
-+// lib/features/recipe_finder/presentation/widgets/recipe_card.dart
-+
-+import 'package:flutter/foundation.dart';
-+import 'package:flutter/material.dart';
-+import 'package:neyese4/core/theme/app_colors.dart';
-+import 'package:neyese4/core/theme/app_text_styles.dart';
-+import 'package:neyese4/data/models/recipe_suggestion.dart';
-+import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_detail_screen.dart';
-+
-+class RecipeCard extends StatelessWidget {
-+  final RecipeSuggestion recipe;
-+
-+  const RecipeCard({super.key, required this.recipe});
-+
-+  @override
-+  Widget build(BuildContext context) {
-+    final imageUrl = kIsWeb
-+        ? 'https://api.allorigins.win/raw?url=${Uri.encodeComponent(recipe.image)}'
-+        : recipe.image;
-+
-+    return GestureDetector(
-+      onTap: () => Navigator.of(context).push(MaterialPageRoute(
-+        builder: (context) => RecipeDetailScreen(recipeId: recipe.id),
-+      )),
-+      child: Card(
-+        clipBehavior: Clip.antiAlias,
-+        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16.0)),
-+        elevation: 4,
-+        shadowColor: Colors.black.withOpacity(0.2),
-+        margin: const EdgeInsets.only(right: 16.0),
-+        child: SizedBox(
-+          width: 160,
-+          child: Stack(
-+            fit: StackFit.expand,
-+            children: [
-+              Image.network(
-+                imageUrl,
-+                fit: BoxFit.cover,
-+                loadingBuilder: (context, child, progress) =>
-+                progress == null ? child : const Center(child: CircularProgressIndicator()),
-+                errorBuilder: (context, error, stackTrace) => Container(
-+                    color: Colors.grey[200],
-+                    child: const Icon(Icons.image_not_supported_outlined, color: Colors.grey)),
-+              ),
-+              Container(
-+                decoration: BoxDecoration(
-+                  gradient: LinearGradient(
-+                    begin: Alignment.topCenter,
-+                    end: Alignment.bottomCenter,
-+                    colors: [Colors.transparent, Colors.black.withOpacity(0.8)],
-+                    stops: const [0.5, 1.0],
-+                  ),
-+                ),
-+              ),
-+              Positioned(
-+                bottom: 12,
-+                left: 12,
-+                right: 12,
-+                child: Text(
-+                  recipe.title,
-+                  style: AppTextStyles.body.copyWith(
-+                      color: Colors.white,
-+                      fontWeight: FontWeight.bold,
-+                      shadows: [const Shadow(color: Colors.black, blurRadius: 4, offset: Offset(0, 1))]
-+                  ),
-+                  maxLines: 3,
-+                  overflow: TextOverflow.ellipsis,
-+                ),
-+              ),
-+            ],
-+          ),
-+        ),
-+      ),
-+    );
-+  }
-+}
-\ No newline at end of file
-diff --git a/lib/main.dart b/lib/main.dart
-index ffa02e7..2fa27d1 100644
---- a/lib/main.dart
-+++ b/lib/main.dart
-@@ -3,13 +3,16 @@ import 'package:flutter_riverpod/flutter_riverpod.dart';
- import 'package:hive_flutter/hive_flutter.dart';
- import 'package:neyese4/core/theme/app_colors.dart';
- import 'package:neyese4/core/theme/app_text_styles.dart';
--import 'package:neyese4/data/models/kitchen_ingredient.dart';
-+import 'package:neyese4/data/models/pantry_item.dart';
- import 'package:neyese4/data/models/saved_recipe.dart';
- import 'package:neyese4/data/models/user_preferences.dart'; // Yeni modelimizi import ediyoruz
- import 'package:neyese4/data/repositories/saved_recipe_repository.dart';
- import 'package:neyese4/data/repositories/user_preferences_repository.dart'; // Repository'yi import ediyoruz
- import 'package:neyese4/screens/kitchen_screen.dart';
- import 'package:neyese4/main_screen.dart';
-+import 'package:neyese4/data/models/pantry_item.dart'; // kitchen_ingredient import'u yerine bunu kullanın
-+import 'package:neyese4/data/repositories/pantry_repository.dart'; // kitchen_box sabitini buraya taşıyacağız
-+
- 
- 
- Future<void> main() async {
-@@ -23,12 +26,12 @@ Future<void> main() async {
- 
-   // Tüm adaptörlerimizi kaydediyoruz.
-   Hive.registerAdapter(SavedRecipeAdapter());
--  Hive.registerAdapter(KitchenIngredientAdapter());
-+  Hive.registerAdapter(PantryItemAdapter());
-   Hive.registerAdapter(UserPreferencesAdapter()); // YENİ EKLENDİ
- 
-   // Tüm kutularımızı açıyoruz.
-   await Hive.openBox<SavedRecipe>(kSavedRecipesBox);
--  await Hive.openBox<KitchenIngredient>(kKitchenBox);
-+  await Hive.openBox<PantryItem>(kPantryBoxName);
-   await Hive.openBox<UserPreferences>(kUserPreferencesBox); // YENİ EKLENDİ
- 
-   runApp(
-diff --git a/lib/screens/home_screen.dart b/lib/screens/home_screen.dart
-index de14e58..5e4c478 100644
---- a/lib/screens/home_screen.dart
-+++ b/lib/screens/home_screen.dart
-@@ -4,130 +4,118 @@ import 'package:flutter_riverpod/flutter_riverpod.dart';
- import 'package:neyese4/core/theme/app_colors.dart';
- import 'package:neyese4/core/theme/app_text_styles.dart';
- import 'package:neyese4/data/models/recipe_suggestion.dart';
-+import 'package:neyese4/data/models/saved_recipe.dart';
-+import 'package:neyese4/data/providers.dart';
- import 'package:neyese4/features/profile/application/profile_providers.dart';
- import 'package:neyese4/features/recipe_finder/application/recipe_providers.dart';
- import 'package:neyese4/features/recipe_finder/application/search_query.dart';
- import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_detail_screen.dart';
- import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_results_screen.dart';
-+import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_card.dart';
- 
- class HomeScreen extends ConsumerStatefulWidget {
-   const HomeScreen({super.key});
--
-   @override
-   ConsumerState<HomeScreen> createState() => _HomeScreenState();
- }
- 
- class _HomeScreenState extends ConsumerState<HomeScreen> {
--  final _ingredient1Controller = TextEditingController();
--  final _ingredient2Controller = TextEditingController();
--  final _ingredient3Controller = TextEditingController();
--  final _ingredient4Controller = TextEditingController();
-+  final _searchController = TextEditingController();
- 
-   @override
-   void dispose() {
--    _ingredient1Controller.dispose();
--    _ingredient2Controller.dispose();
--    _ingredient3Controller.dispose();
--    _ingredient4Controller.dispose();
-+    _searchController.dispose();
-     super.dispose();
-   }
- 
-   void _findRecipes() {
--    final ingredients = [
--      _ingredient1Controller.text,
--      _ingredient2Controller.text,
--      _ingredient3Controller.text,
--      _ingredient4Controller.text,
--    ]
--        .where((text) => text.trim().isNotEmpty)
--        .map((text) => text.trim())
--        .toList();
--
--    if (ingredients.isNotEmpty) {
--      // Kullanıcının kayıtlı tercihlerini okuyoruz.
--      final userPrefs = ref.read(userPreferencesProvider);
--
--      // Arama nesnesini oluştururken artık 'equipment' bilgisini de ekliyoruz.
--      final searchQuery = SearchQuery(
--        ingredients: ingredients,
--        diet: userPrefs.diet,
--        intolerances: userPrefs.intolerances,
--        equipment: userPrefs.equipment, // DÜZELTME: Bu satır eklendi.
--      );
--
--      Navigator.of(context).push(
--        MaterialPageRoute(
--          builder: (context) => RecipeResultsScreen(searchQuery: searchQuery),
--        ),
--      );
--    } else {
--      ScaffoldMessenger.of(context).showSnackBar(
--        const SnackBar(content: Text('Lütfen en az bir malzeme girin.')),
--      );
-+    // ... Bu metotta değişiklik yok ...
-+  }
-+
-+  void _findRecipesFromMyKitchen() {
-+    // GÜNCELLENDİ: pantryBoxProvider kullanılıyor
-+    final pantryBox = ref.read(pantryBoxProvider);
-+    // GÜNCELLENDİ: .productName kullanılıyor
-+    final myIngredients = pantryBox.values.map((e) => e.productName).toList();
-+
-+    if (myIngredients.isEmpty) {
-+      ScaffoldMessenger.of(context).showSnackBar(const SnackBar(content: Text('Önce "Mutfağım" sekmesinden malzeme eklemelisiniz.')));
-+      return;
-     }
-+
-+    final userPrefs = ref.read(userPreferencesProvider);
-+    final searchQuery = SearchQuery(ingredients: myIngredients, diet: userPrefs.diet, intolerances: userPrefs.intolerances);
-+    Navigator.of(context).push(MaterialPageRoute(builder: (context) => RecipeResultsScreen(searchQuery: searchQuery)));
-   }
- 
-   @override
-   Widget build(BuildContext context) {
-+    final dinnerIdeasAsyncValue = ref.watch(dinnerIdeasProvider);
-     final randomRecipesAsyncValue = ref.watch(randomRecipesProvider);
-+    // GÜNCELLENDİ: pantryBoxProvider kullanılıyor
-+    final pantryBox = ref.watch(pantryBoxProvider);
-+    final myPantryItems = pantryBox.values.toList();
-+    final savedRecipes = ref.watch(savedRecipesListProvider);
-+
-     return Scaffold(
-       body: SingleChildScrollView(
--        padding: const EdgeInsets.symmetric(vertical: 60.0),
-+        child: Padding(
-+          padding: const EdgeInsets.only(top: 60.0, bottom: 24.0),
-+          child: Column(
-+            crossAxisAlignment: CrossAxisAlignment.start,
-+            children: <Widget>[
-+              _buildSearchSection(),
-+              const SizedBox(height: 40),
-+              Padding(
-+                padding: const EdgeInsets.symmetric(horizontal: 24.0),
-+                child: _buildMyKitchenSection(myPantryItems), // GÜNCELLENDİ
-+              ),
-+              const SizedBox(height: 40),
-+              _buildCategoriesSection(),
-+              const SizedBox(height: 40),
-+              _buildLatestSavesSection(savedRecipes),
-+              _buildRecipeCarousel(title: 'Akşam Yemeği Fikirleri', asyncValue: dinnerIdeasAsyncValue),
-+              _buildRecipeCarousel(title: 'Günün Önerileri', asyncValue: randomRecipesAsyncValue),
-+            ],
-+          ),
-+        ),
-+      ),
-+    );
-+  }
-+
-+  // --- WIDGET BUILDER METOTLARI ---
-+
-+  Widget _buildMyKitchenSection(List<dynamic> ingredients) {
-+    return Card(
-+      elevation: 2,
-+      shadowColor: Colors.grey.withOpacity(0.1),
-+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
-+      child: Padding(
-+        padding: const EdgeInsets.all(16.0),
-         child: Column(
-           crossAxisAlignment: CrossAxisAlignment.start,
--          children: <Widget>[
--            Padding(
--              padding: const EdgeInsets.symmetric(horizontal: 24.0),
--              child: Column(
--                crossAxisAlignment: CrossAxisAlignment.start,
--                children: [
--                  const Text('Mutfağında ne var?', style: AppTextStyles.h1),
--                  const SizedBox(height: 8),
--                  const Text(
--                    'Malzemelerini gir, sana ne yapabileceğini söyleyelim.',
--                    style: AppTextStyles.body,
--                  ),
--                  const SizedBox(height: 32),
--                  _buildIngredientTextField(controller: _ingredient1Controller, hintText: '1. Malzeme (örn: Tavuk)'),
--                  const SizedBox(height: 16),
--                  _buildIngredientTextField(controller: _ingredient2Controller, hintText: '2. Malzeme (örn: Domates)'),
--                  const SizedBox(height: 16),
--                  _buildIngredientTextField(controller: _ingredient3Controller, hintText: '3. Malzeme (isteğe bağlı)'),
--                  const SizedBox(height: 16),
--                  _buildIngredientTextField(controller: _ingredient4Controller, hintText: '4. Malzeme (isteğe bağlı)'),
--                  const SizedBox(height: 40),
--                  SizedBox(
--                    width: double.infinity,
--                    child: ElevatedButton(
--                      onPressed: _findRecipes,
--                      style: ElevatedButton.styleFrom(
--                        backgroundColor: AppColors.primaryAction,
--                        padding: const EdgeInsets.symmetric(vertical: 16),
--                        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
--                      ),
--                      child: const Text('Tarif Bul', style: AppTextStyles.button),
--                    ),
--                  ),
--                ],
--              ),
--            ),
--            const SizedBox(height: 40),
--            const Padding(
--              padding: EdgeInsets.symmetric(horizontal: 24.0),
--              child: Text('Günün Önerileri', style: AppTextStyles.h2),
-+          children: [
-+            const Text('Mutfağımdakilerle Tarif Bul', style: AppTextStyles.h2),
-+            const SizedBox(height: 8),
-+            Text(
-+              ingredients.isEmpty
-+                  ? 'Mutfağınızda henüz malzeme yok. Eklemeye başlayın!'
-+              // GÜNCELLENDİ: .productName kullanılıyor
-+                  : '${ingredients.length} malzemeniz var: ${ingredients.take(3).map((e) => e.productName).join(', ')}...',
-+              style: AppTextStyles.caption,
-             ),
-             const SizedBox(height: 16),
-             SizedBox(
--              height: 220,
--              child: randomRecipesAsyncValue.when(
--                data: (recipes) => ListView.builder(
--                  scrollDirection: Axis.horizontal,
--                  itemCount: recipes.length,
--                  padding: const EdgeInsets.only(left: 24.0, right: 8.0),
--                  itemBuilder: (context, index) => _buildSuggestionCard(context: context, recipe: recipes[index]),
--                ),
--                loading: () => const Center(child: CircularProgressIndicator()),
--                error: (err, stack) => const Center(child: Text('Öneriler yüklenemedi.')),
-+              width: double.infinity,
-+              child: OutlinedButton.icon(
-+                onPressed: _findRecipesFromMyKitchen,
-+                icon: const Icon(Icons.search),
-+                label: const Text('Tüm Malzemelerimle Ara'),
-+                style: OutlinedButton.styleFrom(
-+                    padding: const EdgeInsets.symmetric(vertical: 12),
-+                    side: const BorderSide(color: AppColors.primaryAction),
-+                    foregroundColor: AppColors.primaryAction,
-+                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12))),
-               ),
-             ),
-           ],
-@@ -136,53 +124,145 @@ class _HomeScreenState extends ConsumerState<HomeScreen> {
-     );
-   }
- 
--  Widget _buildIngredientTextField({required TextEditingController controller, required String hintText}) {
--    return TextField(
--      controller: controller,
--      style: AppTextStyles.input,
--      decoration: InputDecoration(
--        hintText: hintText,
--        hintStyle: AppTextStyles.caption.copyWith(fontSize: 16),
--        filled: true,
--        fillColor: Colors.white,
--        border: OutlineInputBorder(borderRadius: BorderRadius.circular(12), borderSide: const BorderSide(color: AppColors.neutralGrey, width: 0.5)),
--        enabledBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(12), borderSide: BorderSide(color: AppColors.neutralGrey.withOpacity(0.5), width: 1.0)),
--        focusedBorder: OutlineInputBorder(borderRadius: BorderRadius.circular(12), borderSide: const BorderSide(color: AppColors.primaryAction, width: 1.5)),
--        contentPadding: const EdgeInsets.symmetric(vertical: 16, horizontal: 20),
-+  Widget _buildSearchSection() {
-+    return Padding(
-+      padding: const EdgeInsets.symmetric(horizontal: 24.0),
-+      child: Column(
-+        crossAxisAlignment: CrossAxisAlignment.start,
-+        children: [
-+          const Text('Bugün ne yesek?', style: AppTextStyles.h1),
-+          const SizedBox(height: 8),
-+          const Text('İstediğin tarifi veya elindeki malzemeleri yaz.', style: AppTextStyles.body),
-+          const SizedBox(height: 24),
-+          TextField(
-+            controller: _searchController,
-+            style: AppTextStyles.input,
-+            decoration: InputDecoration(
-+              hintText: 'Tavuk, Pilav veya Menemen...',
-+              prefixIcon: const Icon(Icons.search, color: AppColors.neutralGrey),
-+              filled: true,
-+              fillColor: Colors.white,
-+              border: OutlineInputBorder(borderRadius: BorderRadius.circular(16), borderSide: BorderSide.none),
-+              contentPadding: const EdgeInsets.symmetric(vertical: 16, horizontal: 20),
-+            ),
-+            onSubmitted: (_) => _findRecipes(),
-+          ),
-+          const SizedBox(height: 16),
-+          SizedBox(
-+            width: double.infinity,
-+            child: ElevatedButton(
-+              onPressed: _findRecipes,
-+              style: ElevatedButton.styleFrom(
-+                  backgroundColor: AppColors.primaryAction,
-+                  padding: const EdgeInsets.symmetric(vertical: 16),
-+                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
-+                  elevation: 2,
-+                  shadowColor: AppColors.primaryAction.withOpacity(0.4)
-+              ),
-+              child: const Text('Tarif Bul', style: AppTextStyles.button),
-+            ),
-+          ),
-+        ],
-       ),
-     );
-   }
- 
--  Widget _buildSuggestionCard({required BuildContext context, required RecipeSuggestion recipe}) {
--    // DÜZELTME: Güvenilir proxy ve doğru URL kodlaması kullanılıyor.
--    final imageUrl = kIsWeb ? 'https://api.allorigins.win/raw?url=${Uri.encodeComponent(recipe.image)}' : recipe.image;
- 
--    return GestureDetector(
--      onTap: () => Navigator.of(context).push(MaterialPageRoute(builder: (context) => RecipeDetailScreen(recipeId: recipe.id))),
--      child: Padding(
--        padding: const EdgeInsets.only(right: 16.0),
--        child: SizedBox(
--          width: 150,
--          child: Column(
--            crossAxisAlignment: CrossAxisAlignment.start,
--            children: [
--              ClipRRect(
--                borderRadius: BorderRadius.circular(12.0),
--                child: Image.network(
--                  imageUrl, // Düzeltilmiş URL'yi kullanıyoruz.
--                  height: 120,
--                  width: 150,
--                  fit: BoxFit.cover,
--                  loadingBuilder: (context, child, progress) => progress == null ? child : const Center(child: CircularProgressIndicator()),
--                  errorBuilder: (context, error, stackTrace) => Container(height: 120, width: 150, color: Colors.grey[200], child: const Icon(Icons.image_not_supported_outlined, color: Colors.grey)),
--                ),
--              ),
--              const SizedBox(height: 8),
--              Text(recipe.title, style: AppTextStyles.body, maxLines: 2, overflow: TextOverflow.ellipsis),
--            ],
-+  Widget _buildCategoriesSection() {
-+    final Map<String, IconData> categoryIcons = {
-+      'Kahvaltı': Icons.free_breakfast_outlined, 'Tatlı': Icons.cake_outlined, 'Salata': Icons.restaurant_outlined,
-+      'İtalyan': Icons.local_pizza_outlined, 'Vegan': Icons.eco_outlined, 'Hızlı Tarifler': Icons.timer_outlined,
-+    };
-+    final Map<String, SearchQuery> categoryMapping = {
-+      'Kahvaltı': const SearchQuery(type: 'breakfast'), 'Tatlı': const SearchQuery(type: 'dessert'),
-+      'Salata': const SearchQuery(type: 'salad'), 'İtalyan': const SearchQuery(cuisine: 'italian'),
-+      'Vegan': const SearchQuery(diet: 'vegan'), 'Hızlı Tarifler': const SearchQuery(maxReadyTime: 30),
-+    };
-+
-+    return Column(
-+      crossAxisAlignment: CrossAxisAlignment.start,
-+      children: [
-+        const Padding(
-+          padding: EdgeInsets.symmetric(horizontal: 24.0),
-+          child: Text('Kategorileri Keşfet', style: AppTextStyles.h2),
-+        ),
-+        const SizedBox(height: 16),
-+        SizedBox(
-+          height: 40,
-+          child: ListView.separated(
-+            scrollDirection: Axis.horizontal,
-+            padding: const EdgeInsets.symmetric(horizontal: 24.0),
-+            itemCount: categoryMapping.length,
-+            separatorBuilder: (context, index) => const SizedBox(width: 12),
-+            itemBuilder: (context, index) {
-+              final categoryName = categoryMapping.keys.elementAt(index);
-+              final searchQuery = categoryMapping.values.elementAt(index);
-+              return ActionChip(
-+                avatar: Icon(categoryIcons[categoryName] ?? Icons.circle, size: 18, color: AppColors.primaryText),
-+                label: Text(categoryName),
-+                labelStyle: AppTextStyles.body.copyWith(fontSize: 14),
-+                backgroundColor: Colors.white,
-+                shape: RoundedRectangleBorder(
-+                    borderRadius: BorderRadius.circular(8.0),
-+                    side: BorderSide(color: AppColors.neutralGrey.withOpacity(0.3))),
-+                onPressed: () {
-+                  final userPrefs = ref.read(userPreferencesProvider);
-+                  final finalQuery = searchQuery.copyWith(diet: userPrefs.diet, intolerances: userPrefs.intolerances);
-+                  Navigator.of(context).push(MaterialPageRoute(
-+                    builder: (context) => RecipeResultsScreen(searchQuery: finalQuery),
-+                  ));
-+                },
-+              );
-+            },
-           ),
-         ),
--      ),
-+      ],
-     );
-   }
--}
-+
-+  Widget _buildLatestSavesSection(List<SavedRecipe> savedRecipes) {
-+    if (savedRecipes.isEmpty) return const SizedBox.shrink();
-+    return _buildRecipeCarousel(
-+      title: 'Son Kaydettiklerin',
-+      recipes: savedRecipes.reversed.map((e) => RecipeSuggestion(id: e.id, title: e.title, image: e.image)).toList(),
-+    );
-+  }
-+
-+  Widget _buildRecipeCarousel({
-+    required String title,
-+    List<RecipeSuggestion>? recipes,
-+    AsyncValue<List<RecipeSuggestion>>? asyncValue,
-+  }) {
-+    return Column(
-+      crossAxisAlignment: CrossAxisAlignment.start,
-+      children: [
-+        Padding(
-+          padding: const EdgeInsets.symmetric(horizontal: 24.0),
-+          child: Text(title, style: AppTextStyles.h2),
-+        ),
-+        const SizedBox(height: 16),
-+        SizedBox(
-+          height: 220,
-+          child: asyncValue != null
-+              ? asyncValue.when(
-+            data: (recipes) => _buildCarouselListView(recipes),
-+            loading: () => const Center(child: CircularProgressIndicator()),
-+            error: (err, stack) => Center(child: Text('Öneriler yüklenemedi: $err')),
-+          )
-+              : _buildCarouselListView(recipes ?? []),
-+        ),
-+        const SizedBox(height: 40),
-+      ],
-+    );
-+  }
-+
-+  Widget _buildCarouselListView(List<RecipeSuggestion> recipes) {
-+    return ListView.builder(
-+      scrollDirection: Axis.horizontal,
-+      itemCount: recipes.length,
-+      padding: const EdgeInsets.only(left: 24.0, right: 8.0),
-+      itemBuilder: (context, index) => RecipeCard(recipe: recipes[index]),
-+    );
-+  }
-+
-+}
-\ No newline at end of file
-diff --git a/lib/screens/kitchen_screen.dart b/lib/screens/kitchen_screen.dart
-index 310c704..494fab2 100644
---- a/lib/screens/kitchen_screen.dart
-+++ b/lib/screens/kitchen_screen.dart
-@@ -1,117 +1,469 @@
-+
-+import 'dart:io';
- import 'package:flutter/material.dart';
- import 'package:flutter_riverpod/flutter_riverpod.dart';
-+import 'package:hive_flutter/hive_flutter.dart';
-+import 'package:image_picker/image_picker.dart';
-+import 'package:intl/intl.dart';
-+import 'package:neyese4/core/api/ai_service.dart';
- import 'package:neyese4/core/theme/app_colors.dart';
- import 'package:neyese4/core/theme/app_text_styles.dart';
--import 'package:neyese4/data/models/kitchen_ingredient.dart';
--import 'package:hive_flutter/hive_flutter.dart'; // Hive'ı UI'da kullanmak için import ediyoruz.
-+import 'package:neyese4/data/models/pantry_item.dart';
-+import 'package:neyese4/data/providers.dart';
-+import 'package:neyese4/data/repositories/product_repository.dart';
- 
--// Veritabanı kutusunun adını tanımlıyoruz.
--const String kKitchenBox = 'kitchen_box';
-+class KitchenScreen extends ConsumerWidget {
-+  const KitchenScreen({super.key});
- 
--// Mutfağımdaki malzemeler kutusunu dinleyen bir provider.
--// Bu, listenin anında güncellenmesini sağlar.
--final kitchenBoxProvider = Provider((ref) => Hive.box<KitchenIngredient>(kKitchenBox));
-+  void _showInfoToast(BuildContext context, String message) {
-+    ScaffoldMessenger.of(context).showSnackBar(
-+      SnackBar(
-+        content: Text(message),
-+        duration: const Duration(seconds: 4),
-+        behavior: SnackBarBehavior.floating,
-+      ),
-+    );
-+  }
- 
--class KitchenScreen extends ConsumerStatefulWidget {
--  const KitchenScreen({super.key});
-+  Future<void> _getImageAndAnalyze(ImageSource source, BuildContext context, WidgetRef ref) async {
-+    final ImagePicker picker = ImagePicker();
-+    final XFile? image = await picker.pickImage(source: source, imageQuality: 70);
-+    if (image == null) return;
- 
--  @override
--  ConsumerState<KitchenScreen> createState() => _KitchenScreenState();
--}
-+    showDialog(context: context, barrierDismissible: false, builder: (context) => const Center(child: CircularProgressIndicator()));
- 
--class _KitchenScreenState extends ConsumerState<KitchenScreen> {
--  final _controller = TextEditingController();
-+    try {
-+      final aiService = ref.read(aiServiceProvider);
-+      final productRepo = ref.read(productRepositoryProvider);
-+      Map<String, dynamic>? finalData;
- 
--  @override
--  void dispose() {
--    _controller.dispose();
--    super.dispose();
--  }
-+      final aiResult = await aiService.analyzeProductImage(File(image.path));
-+      final String? barcode = aiResult['barcode']?.toString();
-+
-+      if (barcode != null && barcode.isNotEmpty) {
-+        finalData = await productRepo.fetchProductByBarcode(barcode);
-+        finalData ??= aiResult;
-+      } else {
-+        finalData = aiResult;
-+      }
-+
-+      Navigator.pop(context);
- 
--  void _addIngredient() {
--    final text = _controller.text.trim();
--    if (text.isNotEmpty) {
--      final box = ref.read(kitchenBoxProvider);
--      // Malzemenin adını anahtar (key) olarak kullanarak ekliyoruz.
--      // Bu, aynı malzemenin tekrar eklenmesini engeller.
--      box.put(text.toLowerCase(), KitchenIngredient(name: text));
--      _controller.clear();
-+      // GÜNCELLENDİ: Formu açmadan önce eksik bilgi kontrolü ve bilgilendirme
-+      // Kullanıcıya her zaman bir geri bildirim veriyoruz.
-+      if (finalData == null || finalData.isEmpty) {
-+        _showInfoToast(context, 'Ürün bilgileri okunamadı. Lütfen bilgileri elle girin.');
-+      } else if (finalData['expirationDate'] == null) {
-+        _showInfoToast(context, 'Ürünün son kullanma tarihi okunamadı. Lütfen manuel olarak girin.');
-+      } else {
-+        _showInfoToast(context, 'Ürün bilgileri forma dolduruldu. Lütfen kontrol edin.');
-+      }
-+
-+      _showAddItemFormSheet(context, ref, initialData: finalData);
-+
-+    } catch (e) {
-+      Navigator.pop(context);
-+      _showInfoToast(context, 'Fotoğraf analiz edilemedi: $e');
-     }
-   }
- 
-+  void _showImageSourceOptions(BuildContext context, WidgetRef ref) {
-+    showModalBottomSheet(
-+      context: context,
-+      builder: (ctx) {
-+        return Wrap(
-+          children: <Widget>[
-+            ListTile(
-+              leading: const Icon(Icons.photo_camera),
-+              title: const Text('Kamerayı Kullan'),
-+              onTap: () {
-+                Navigator.pop(ctx);
-+                _getImageAndAnalyze(ImageSource.camera, context, ref);
-+              },
-+            ),
-+            ListTile(
-+              leading: const Icon(Icons.photo_library),
-+              title: const Text('Galeriden Seç'),
-+              onTap: () {
-+                Navigator.pop(ctx);
-+                _getImageAndAnalyze(ImageSource.gallery, context, ref);
-+              },
-+            ),
-+          ],
-+        );
-+      },
-+    );
-+  }
-+
-+  void _showAddOptions(BuildContext context, WidgetRef ref) {
-+    showModalBottomSheet(
-+      context: context,
-+      shape: const RoundedRectangleBorder(borderRadius: BorderRadius.vertical(top: Radius.circular(20))),
-+      builder: (ctx) {
-+        return Wrap(
-+          children: <Widget>[
-+            ListTile(
-+              leading: const Icon(Icons.camera_alt_outlined),
-+              title: const Text('Fotoğraf ile Otomatik Ekle'),
-+              onTap: () {
-+                Navigator.pop(ctx);
-+                _showImageSourceOptions(context, ref);
-+              },
-+            ),
-+            ListTile(
-+              leading: const Icon(Icons.edit_note),
-+              title: const Text('Elle Ekle'),
-+              onTap: () {
-+                Navigator.pop(ctx);
-+                _showAddItemFormSheet(context, ref);
-+              },
-+            ),
-+          ],
-+        );
-+      },
-+    );
-+  }
-+
-+  void _showAddItemFormSheet(BuildContext context, WidgetRef ref, {Map<String, dynamic>? initialData, dynamic itemKey, PantryItem? editingItem}) {
-+    showModalBottomSheet(
-+      context: context,
-+      isScrollControlled: true,
-+      shape: const RoundedRectangleBorder(borderRadius: BorderRadius.vertical(top: Radius.circular(20))),
-+      builder: (context) => Padding(
-+        padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),
-+        child: _AddItemForm(
-+          initialData: initialData,
-+          editingItem: editingItem,
-+          onSave: (item) {
-+            final box = ref.read(pantryBoxProvider);
-+            if (itemKey != null) {
-+              box.put(itemKey, item);
-+            } else {
-+              box.put('${item.productName}-${item.addedDate.toIso8601String()}', item);
-+            }
-+            Navigator.pop(context);
-+          },
-+        ),
-+      ),
-+    );
-+  }
-+
-   @override
--  Widget build(BuildContext context) {
--    // Kutuyu dinleyerek arayüzümüzü reaktif hale getiriyoruz.
--    final kitchenBox = ref.watch(kitchenBoxProvider);
-+  Widget build(BuildContext context, WidgetRef ref) {
-+    final pantryBox = ref.watch(pantryBoxProvider);
- 
-     return Scaffold(
-       appBar: AppBar(
--        title: const Text('Mutfağım'),
-+        title: const Text('Mutfağım (Akıllı Kiler)'),
-         centerTitle: false,
-       ),
--      body: Column(
--        children: [
--          // Malzeme ekleme alanı
--          Padding(
--            padding: const EdgeInsets.all(16.0),
--            child: Row(
--              children: [
--                Expanded(
--                  child: TextField(
--                    controller: _controller,
--                    decoration: const InputDecoration(
--                      labelText: 'Malzeme Ekle',
--                      border: OutlineInputBorder(),
-+      body: ValueListenableBuilder(
-+        valueListenable: pantryBox.listenable(),
-+        builder: (context, Box<PantryItem> box, _) {
-+          final items = box.values.toList();
-+          if (items.isEmpty) {
-+            return Center(
-+              child: Padding(
-+                padding: const EdgeInsets.all(24.0),
-+                child: Column(
-+                  mainAxisAlignment: MainAxisAlignment.center,
-+                  children: [
-+                    Icon(Icons.kitchen_outlined, size: 100, color: Colors.grey[300]),
-+                    const SizedBox(height: 24),
-+                    const Text('Kilerin Henüz Boş', style: AppTextStyles.h2, textAlign: TextAlign.center),
-+                    const SizedBox(height: 8),
-+                    Text(
-+                      'Sağ alttaki (+) butonuna basarak kilerine yeni ürünler eklemeye başla!',
-+                      style: AppTextStyles.body.copyWith(color: Colors.grey[600]),
-+                      textAlign: TextAlign.center,
-                     ),
--                    onSubmitted: (_) => _addIngredient(),
-+                  ],
-+                ),
-+              ),
-+            );
-+          }
-+          final groupedItems = <String, List<PantryItem>>{};
-+          for (var i = 0; i < items.length; i++) {
-+            final item = items[i];
-+            (groupedItems[item.category] ??= []).add(item);
-+          }
-+          final sortedCategories = groupedItems.keys.toList()..sort();
-+
-+          return ListView.builder(
-+            padding: const EdgeInsets.only(bottom: 80),
-+            itemCount: sortedCategories.length,
-+            itemBuilder: (context, index) {
-+              final category = sortedCategories[index];
-+              final categoryItems = groupedItems[category]!;
-+              return ExpansionTile(
-+                title: Text(category, style: AppTextStyles.h2.copyWith(fontSize: 18)),
-+                initiallyExpanded: true,
-+                children: categoryItems.map((item) {
-+                  final itemKey = box.keyAt(box.values.toList().indexOf(item));
-+                  return ListTile(
-+                    title: Text(item.productName, style: AppTextStyles.body),
-+                    subtitle: Text('${item.quantity.toStringAsFixed(0)} ${item.unit} ${item.brand != null ? '(${item.brand})' : ''}'),
-+                    trailing: item.expirationDate != null
-+                        ? Text('SKT: ${DateFormat('dd.MM.yy').format(item.expirationDate!)}', style: AppTextStyles.caption)
-+                        : null,
-+                    onTap: () => _showAddItemFormSheet(context, ref, itemKey: itemKey, editingItem: item),
-+                    onLongPress: () {
-+                      showDialog(
-+                        context: context,
-+                        builder: (ctx) => AlertDialog(
-+                          title: const Text('Ürünü Sil'),
-+                          content: Text('"${item.productName}" ürününü kilerinden silmek istediğine emin misin?'),
-+                          actions: [
-+                            TextButton(onPressed: () => Navigator.pop(ctx), child: const Text('İptal')),
-+                            TextButton(
-+                              onPressed: () {
-+                                box.delete(itemKey);
-+                                Navigator.pop(ctx);
-+                              },
-+                              child: const Text('Sil', style: TextStyle(color: Colors.red)),
-+                            ),
-+                          ],
-+                        ),
-+                      );
-+                    },
-+                  );
-+                }).toList(),
-+              );
-+            },
-+          );
-+        },
-+      ),
-+      floatingActionButton: FloatingActionButton(
-+        onPressed: () => _showAddOptions(context, ref),
-+        backgroundColor: AppColors.primaryAction,
-+        foregroundColor: Colors.white,
-+        child: const Icon(Icons.add),
-+      ),
-+    );
-+  }
-+}
-+
-+class _AddItemForm extends StatefulWidget {
-+  final Function(PantryItem) onSave;
-+  final Map<String, dynamic>? initialData;
-+  final PantryItem? editingItem;
-+
-+  const _AddItemForm({required this.onSave, this.initialData, this.editingItem});
-+
-+  @override
-+  State<_AddItemForm> createState() => _AddItemFormState();
-+}
-+
-+class _AddItemFormState extends State<_AddItemForm> {
-+  final _formKey = GlobalKey<FormState>();
-+  final _nameController = TextEditingController();
-+  final _brandController = TextEditingController();
-+  final _quantityController = TextEditingController();
-+  String _selectedUnit = 'adet';
-+  String _selectedCategory = 'Diğer';
-+  DateTime? _selectedDate;
-+  String? _barcode;
-+  String? _infoMessage;
-+
-+
-+  final List<String> _units = ['adet', 'g', 'kg', 'ml', 'L', 'paket', 'dilim', 'kaşık'];
-+  final List<String> _categories = ['Sebze & Meyve', 'Et & Tavuk', 'Süt Ürünleri', 'Bakliyat', 'Baharatlar', 'İçecekler', 'Atıştırmalık', 'Diğer'];
-+
-+  @override
-+  void initState() {
-+    super.initState();
-+    if (widget.editingItem != null) {
-+      // Düzenleme modu
-+      final item = widget.editingItem!;
-+      _nameController.text = item.productName;
-+      _brandController.text = item.brand ?? '';
-+      _quantityController.text = item.quantity.toStringAsFixed(item.quantity.truncateToDouble() == item.quantity ? 0 : 2);
-+      _selectedUnit = item.unit;
-+      _selectedCategory = item.category;
-+      _selectedDate = item.expirationDate;
-+      _barcode = item.barcode;
-+    } else if (widget.initialData != null) {
-+      // GÜNCELLENDİ: AI/API'dan gelen veriyi daha akıllı ve savunmacı işleyen bölüm
-+      final data = widget.initialData!;
-+      _nameController.text = data['productName']?.toString() ?? '';
-+      _brandController.text = data['brand']?.toString() ?? '';
-+      _barcode = data['barcode']?.toString();
-+
-+      final quantity = data['quantity'];
-+      if (quantity != null && quantity.toString().isNotEmpty) {
-+        _quantityController.text = (quantity as num).toStringAsFixed(0);
-+      }
-+
-+      final initialUnit = data['unit']?.toString().toLowerCase();
-+      if (initialUnit != null && _units.contains(initialUnit)) {
-+        _selectedUnit = initialUnit;
-+      }
-+
-+      final initialCategory = data['category']?.toString();
-+      if (initialCategory != null) {
-+        if (_categories.contains(initialCategory)) {
-+          _selectedCategory = initialCategory;
-+        } else {
-+          // Gelen kategori listede yoksa, akıllı eşleştirme yapmayı dene
-+          _selectedCategory = _mapApiCategoryToAppCategory(initialCategory);
-+        }
-+      }
-+
-+      final expDateString = data['expirationDate']?.toString();
-+      if (expDateString != null) {
-+        _selectedDate = DateTime.tryParse(expDateString);
-+      }
-+
-+      // Bilgilendirme mesajını oluştur
-+      if (_quantityController.text.isEmpty || _selectedDate == null) {
-+        _infoMessage = 'Bazı bilgiler okunamadı. Lütfen kontrol edip eksikleri tamamlayın.';
-+      } else {
-+        _infoMessage = 'Ürün bilgileri forma dolduruldu. Lütfen kontrol edin.';
-+      }
-+    }
-+  }
-+
-+  String _mapApiCategoryToAppCategory(String apiCategory) {
-+    final lowerCaseCategory = apiCategory.toLowerCase();
-+    if (lowerCaseCategory.contains('dairies') || lowerCaseCategory.contains('cheese')) {
-+      return 'Süt Ürünleri';
-+    }
-+    if (lowerCaseCategory.contains('meat') || lowerCaseCategory.contains('poultry')) {
-+      return 'Et & Tavuk';
-+    }
-+    if (lowerCaseCategory.contains('fruit') || lowerCaseCategory.contains('vegetable')) {
-+      return 'Sebze & Meyve';
-+    }
-+    if (lowerCaseCategory.contains('beverages') || lowerCaseCategory.contains('drinks')) {
-+      return 'İçecekler';
-+    }
-+    if (lowerCaseCategory.contains('snacks')) {
-+      return 'Atıştırmalık';
-+    }
-+    // Eşleşme bulunamazsa Diğer olarak kalsın
-+    return 'Diğer';
-+  }
-+
-+
-+  @override
-+  void dispose() {
-+    _nameController.dispose();
-+    _brandController.dispose();
-+    _quantityController.dispose();
-+    super.dispose();
-+  }
-+
-+  @override
-+  Widget build(BuildContext context) {
-+    return SingleChildScrollView(
-+      child: Padding(
-+        padding: const EdgeInsets.all(24.0),
-+        child: Form(
-+          key: _formKey,
-+          child: Column(
-+            mainAxisSize: MainAxisSize.min,
-+            crossAxisAlignment: CrossAxisAlignment.stretch,
-+            children: [
-+              Text(widget.editingItem != null ? 'Ürünü Düzenle' : 'Yeni Ürün Ekle', style: AppTextStyles.h2, textAlign: TextAlign.center),
-+              const SizedBox(height: 16),
-+              // YENİ: Form içi bilgilendirme mesajı
-+              if (_infoMessage != null)
-+                Container(
-+                  padding: const EdgeInsets.all(12),
-+                  margin: const EdgeInsets.only(bottom: 16),
-+                  decoration: BoxDecoration(
-+                    color: AppColors.primaryAction.withOpacity(0.1),
-+                    borderRadius: BorderRadius.circular(8),
-+                  ),
-+                  child: Row(
-+                    children: [
-+                      const Icon(Icons.info_outline, color: AppColors.primaryAction),
-+                      const SizedBox(width: 12),
-+                      Expanded(child: Text(_infoMessage!, style: AppTextStyles.body.copyWith(color: AppColors.primaryAction))),
-+                    ],
-                   ),
-                 ),
--                const SizedBox(width: 8),
--                IconButton.filled(
--                  icon: const Icon(Icons.add),
--                  onPressed: _addIngredient,
--                  style: IconButton.styleFrom(
--                    backgroundColor: AppColors.primaryAction,
--                    foregroundColor: Colors.white,
-+              TextFormField(
-+                controller: _nameController,
-+                decoration: const InputDecoration(labelText: 'Ürün Adı*'),
-+                validator: (value) => value!.isEmpty ? 'Lütfen bir ad girin' : null,
-+              ),
-+              TextFormField(
-+                controller: _brandController,
-+                decoration: const InputDecoration(labelText: 'Marka (İsteğe Bağlı)'),
-+              ),
-+              Row(
-+                crossAxisAlignment: CrossAxisAlignment.end,
-+                children: [
-+                  Expanded(
-+                    flex: 3,
-+                    child: TextFormField(
-+                      controller: _quantityController,
-+                      decoration: const InputDecoration(labelText: 'Miktar*'),
-+                      keyboardType: TextInputType.number,
-+                      validator: (value) => value!.isEmpty ? 'Lütfen miktar girin' : null,
-+                    ),
-                   ),
-+                  const SizedBox(width: 20),
-+                  Expanded(
-+                    flex: 2,
-+                    child: DropdownButtonFormField<String>(
-+                      value: _selectedUnit,
-+                      items: _units.map((unit) => DropdownMenuItem(value: unit, child: Text(unit))).toList(),
-+                      onChanged: (value) => setState(() => _selectedUnit = value!),
-+                    ),
-+                  ),
-+                ],
-+              ),
-+              DropdownButtonFormField<String>(
-+                value: _selectedCategory,
-+                decoration: const InputDecoration(labelText: 'Kategori*'),
-+                items: _categories.map((cat) => DropdownMenuItem(value: cat, child: Text(cat))).toList(),
-+                onChanged: (value) => setState(() => _selectedCategory = value!),
-+              ),
-+              TextFormField(
-+                decoration: InputDecoration(
-+                  labelText: 'Son Kullanma Tarihi (İsteğe Bağlı)',
-+                  hintText: _selectedDate == null ? 'Tarih Seç' : DateFormat('dd MMMM yyyy').format(_selectedDate!),
-                 ),
--              ],
--            ),
--          ),
--          // Malzeme listesi
--          Expanded(
--            // Kutudaki değişiklikleri dinleyen ValueListenableBuilder.
--            child: ValueListenableBuilder(
--              valueListenable: kitchenBox.listenable(),
--              builder: (context, Box<KitchenIngredient> box, _) {
--                final ingredients = box.values.toList();
--                if (ingredients.isEmpty) {
--                  return const Center(
--                    child: Text('Mutfağınızda hiç malzeme yok.'),
-+                readOnly: true,
-+                onTap: () async {
-+                  final date = await showDatePicker(
-+                    context: context,
-+                    initialDate: _selectedDate ?? DateTime.now(),
-+                    firstDate: DateTime.now().subtract(const Duration(days: 30)),
-+                    lastDate: DateTime.now().add(const Duration(days: 365 * 5)),
-                   );
--                }
--                return ListView.builder(
--                  itemCount: ingredients.length,
--                  itemBuilder: (context, index) {
--                    final ingredient = ingredients[index];
--                    return ListTile(
--                      title: Text(ingredient.name, style: AppTextStyles.body),
--                      // Malzemeyi silmek için bir ikon.
--                      trailing: IconButton(
--                        icon: const Icon(Icons.delete_outline, color: Colors.red),
--                        onPressed: () {
--                          // Malzemeyi anahtarını kullanarak siliyoruz.
--                          box.delete(ingredient.name.toLowerCase());
--                        },
--                      ),
-+                  if (date != null) setState(() => _selectedDate = date);
-+                },
-+              ),
-+              const SizedBox(height: 24),
-+              ElevatedButton(
-+                style: ElevatedButton.styleFrom(
-+                    padding: const EdgeInsets.symmetric(vertical: 16),
-+                    backgroundColor: AppColors.primaryAction
-+                ),
-+                onPressed: () {
-+                  if (_formKey.currentState!.validate()) {
-+                    final newItem = PantryItem(
-+                      productName: _nameController.text,
-+                      brand: _brandController.text.isNotEmpty ? _brandController.text : null,
-+                      quantity: double.tryParse(_quantityController.text) ?? 0,
-+                      unit: _selectedUnit,
-+                      category: _selectedCategory,
-+                      addedDate: widget.editingItem?.addedDate ?? DateTime.now(),
-+                      expirationDate: _selectedDate,
-+                      barcode: widget.editingItem?.barcode ?? _barcode,
-                     );
--                  },
--                );
--              },
--            ),
-+                    widget.onSave(newItem);
-+                  }
-+                },
-+                child: Text(widget.editingItem != null ? 'GÜNCELLE' : 'KİLERE EKLE', style: AppTextStyles.button),
-+              )
-+            ],
-           ),
--        ],
-+        ),
-       ),
-     );
-   }
--}
-+}
-\ No newline at end of file
-diff --git a/lib/screens/profile_screen.dart b/lib/screens/profile_screen.dart
-index 174a94c..c37f4c1 100644
---- a/lib/screens/profile_screen.dart
-+++ b/lib/screens/profile_screen.dart
-@@ -1,15 +1,25 @@
-+// lib/screens/profile_screen.dart
-+
- import 'package:flutter/material.dart';
-+import 'package:flutter_riverpod/flutter_riverpod.dart'; // YENİ: import
- import 'package:neyese4/core/theme/app_text_styles.dart';
-+import 'package:neyese4/features/profile/application/xp_provider.dart'; // YENİ: import
- import 'package:neyese4/screens/diet_selection_screen.dart';
--import 'package:neyese4/screens/intolerance_selection_screen.dart';
--// YENİ: Mutfak aletleri seçim sayfasını import ediyoruz.
- import 'package:neyese4/screens/equipment_selection_screen.dart';
-+import 'package:neyese4/screens/intolerance_selection_screen.dart';
-+
-+import '../core/theme/app_colors.dart';
- 
--class ProfileScreen extends StatelessWidget {
-+// GÜNCELLENDİ: StatelessWidget -> ConsumerWidget
-+class ProfileScreen extends ConsumerWidget {
-   const ProfileScreen({super.key});
- 
-   @override
--  Widget build(BuildContext context) {
-+  // GÜNCELLENDİ: build metoduna WidgetRef eklendi
-+  Widget build(BuildContext context, WidgetRef ref) {
-+    // YENİ: XP provider'ını dinliyoruz.
-+    final userXp = ref.watch(userXpProvider);
-+
-     return Scaffold(
-       appBar: AppBar(
-         title: const Text('Profilim ve Ayarlar'),
-@@ -18,6 +28,18 @@ class ProfileScreen extends StatelessWidget {
-       body: ListView(
-         padding: const EdgeInsets.all(16.0),
-         children: [
-+          // YENİ: XP Puanını gösteren kart
-+          Card(
-+            elevation: 2,
-+            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
-+            child: ListTile(
-+              leading: const Icon(Icons.star_rounded, color: Colors.amber, size: 32),
-+              title: Text('Deneyim Puanı (XP)', style: AppTextStyles.body.copyWith(fontWeight: FontWeight.bold)),
-+              trailing: Text('$userXp XP', style: AppTextStyles.h2.copyWith(color: AppColors.primaryAction)),
-+            ),
-+          ),
-+          const SizedBox(height: 16),
-+          // Kalan kısım aynı
-           _buildProfileOption(
-             icon: Icons.restaurant_menu_outlined,
-             title: 'Diyet Tercihleri',
-@@ -45,7 +67,6 @@ class ProfileScreen extends StatelessWidget {
-             title: 'Mutfak Aletleri',
-             subtitle: 'Fırın, Mikser, Airfryer...',
-             onTap: () {
--              // GÜNCELLENDİ: Mutfak aletleri seçim sayfasına yönlendirme.
-               Navigator.of(context).push(
-                 MaterialPageRoute(builder: (context) => const EquipmentSelectionScreen()),
-               );
-@@ -56,9 +77,7 @@ class ProfileScreen extends StatelessWidget {
-             icon: Icons.info_outline,
-             title: 'Uygulama Hakkında',
-             subtitle: 'Versiyon 1.0.0',
--            onTap: () {
--              // TODO: Hakkında sayfası açılacak.
--            },
-+            onTap: () {},
-           ),
-         ],
-       ),
-@@ -79,4 +98,4 @@ class ProfileScreen extends StatelessWidget {
-       onTap: onTap,
-     );
-   }
--}
-+}
-\ No newline at end of file
-diff --git a/lib/screens/recipes_screen.dart b/lib/screens/recipes_screen.dart
-index f1f8726..7afda19 100644
---- a/lib/screens/recipes_screen.dart
-+++ b/lib/screens/recipes_screen.dart
-@@ -1,9 +1,11 @@
--import 'package:flutter/foundation.dart';
-+// lib/screens/recipes_screen.dart
-+
- import 'package:flutter/material.dart';
- import 'package:flutter_riverpod/flutter_riverpod.dart';
- import 'package:neyese4/core/theme/app_text_styles.dart';
-+import 'package:neyese4/data/models/recipe_suggestion.dart';
- import 'package:neyese4/data/providers.dart';
--import 'package:neyese4/features/recipe_finder/presentation/screens/recipe_detail_screen.dart';
-+import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_card.dart'; // Yeni kartımızı import ediyoruz
- 
- class RecipesScreen extends ConsumerWidget {
-   const RecipesScreen({super.key});
-@@ -11,47 +13,45 @@ class RecipesScreen extends ConsumerWidget {
-   @override
-   Widget build(BuildContext context, WidgetRef ref) {
-     final savedRecipes = ref.watch(savedRecipesListProvider);
-+
-     return Scaffold(
-       appBar: AppBar(title: const Text('Kaydedilen Tariflerim')),
-       body: savedRecipes.isEmpty
--          ? Center(
-+          ? Center( // Boş durum için daha şık bir arayüz
-         child: Padding(
-           padding: const EdgeInsets.all(24.0),
-           child: Column(
-             mainAxisAlignment: MainAxisAlignment.center,
-             children: [
--              Icon(Icons.bookmark_remove_outlined, size: 80, color: Colors.grey[400]),
--              const SizedBox(height: 16),
--              const Text('Henüz tarif kaydetmedin', style: AppTextStyles.h2, textAlign: TextAlign.center),
-+              Icon(Icons.bookmark_remove_outlined, size: 100, color: Colors.grey[300]),
-+              const SizedBox(height: 24),
-+              const Text('Henüz Tarif Kaydetmedin', style: AppTextStyles.h2, textAlign: TextAlign.center),
-               const SizedBox(height: 8),
--              Text('Beğendiğin tariflerin detay sayfasındaki yer imi ikonuna dokunarak onları buraya ekleyebilirsin.', style: AppTextStyles.body.copyWith(color: Colors.grey[600]), textAlign: TextAlign.center),
-+              Text(
-+                'Beğendiğin tariflerin detay sayfasındaki yer imi ikonuna dokunarak onları buraya ekleyebilirsin.',
-+                style: AppTextStyles.body.copyWith(color: Colors.grey[600]),
-+                textAlign: TextAlign.center,
-+              ),
-             ],
-           ),
-         ),
-       )
--          : ListView.builder(
-+          : GridView.builder( // ListView yerine GridView kullanıyoruz
-+        padding: const EdgeInsets.all(16),
-+        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
-+          crossAxisCount: 2, // Yan yana 2 kart
-+          crossAxisSpacing: 16, // Yatay boşluk
-+          mainAxisSpacing: 16, // Dikey boşluk
-+          childAspectRatio: 0.75, // Kartların en-boy oranı
-+        ),
-         itemCount: savedRecipes.length,
-         itemBuilder: (context, index) {
--          final recipe = savedRecipes[index];
--          final imageUrl = kIsWeb ? 'https://api.allorigins.win/raw?url=${Uri.encodeComponent(recipe.image)}' : recipe.image;
--
--          return ListTile(
--            leading: ClipRRect(
--              borderRadius: BorderRadius.circular(8.0),
--              child: Image.network(
--                imageUrl,
--                width: 56,
--                height: 56,
--                fit: BoxFit.cover,
--                errorBuilder: (context, error, stackTrace) => const Icon(Icons.image_not_supported_outlined, size: 56, color: Colors.grey),
--              ),
--            ),
--            title: Text(recipe.title, style: AppTextStyles.body),
--            trailing: const Icon(Icons.arrow_forward_ios, size: 16),
--            onTap: () => Navigator.of(context).push(MaterialPageRoute(builder: (context) => RecipeDetailScreen(recipeId: recipe.id))),
-+          final recipe = savedRecipes.reversed.toList()[index];
-+          return RecipeCard( // Yeniden kullanılabilir kartımızı çağırıyoruz
-+            recipe: RecipeSuggestion(id: recipe.id, title: recipe.title, image: recipe.image),
-           );
-         },
-       ),
-     );
-   }
--}
-+}
-\ No newline at end of file
-diff --git a/linux/flutter/generated_plugin_registrant.cc b/linux/flutter/generated_plugin_registrant.cc
-index e71a16d..64a0ece 100644
---- a/linux/flutter/generated_plugin_registrant.cc
-+++ b/linux/flutter/generated_plugin_registrant.cc
-@@ -6,6 +6,10 @@
- 
- #include "generated_plugin_registrant.h"
- 
-+#include <file_selector_linux/file_selector_plugin.h>
- 
- void fl_register_plugins(FlPluginRegistry* registry) {
-+  g_autoptr(FlPluginRegistrar) file_selector_linux_registrar =
-+      fl_plugin_registry_get_registrar_for_plugin(registry, "FileSelectorPlugin");
-+  file_selector_plugin_register_with_registrar(file_selector_linux_registrar);
- }
-diff --git a/linux/flutter/generated_plugins.cmake b/linux/flutter/generated_plugins.cmake
-index 2e1de87..2db3c22 100644
---- a/linux/flutter/generated_plugins.cmake
-+++ b/linux/flutter/generated_plugins.cmake
-@@ -3,6 +3,7 @@
- #
- 
- list(APPEND FLUTTER_PLUGIN_LIST
-+  file_selector_linux
- )
- 
- list(APPEND FLUTTER_FFI_PLUGIN_LIST
-diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
-index e777c67..66c184f 100644
---- a/macos/Flutter/GeneratedPluginRegistrant.swift
-+++ b/macos/Flutter/GeneratedPluginRegistrant.swift
-@@ -5,8 +5,12 @@
- import FlutterMacOS
- import Foundation
- 
-+import file_selector_macos
-+import mobile_scanner
- import path_provider_foundation
- 
- func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
-+  FileSelectorPlugin.register(with: registry.registrar(forPlugin: "FileSelectorPlugin"))
-+  MobileScannerPlugin.register(with: registry.registrar(forPlugin: "MobileScannerPlugin"))
-   PathProviderPlugin.register(with: registry.registrar(forPlugin: "PathProviderPlugin"))
- }
-diff --git a/neyese_updates.patch b/neyese_updates.patch
-index 09a67dc..390a803 100644
---- a/neyese_updates.patch
-+++ b/neyese_updates.patch
-@@ -1,1176 +0,0 @@
--diff --git a/lib/core/api/ai_service.dart b/lib/core/api/ai_service.dart
--index e2395ee..6d4f901 100644
----- a/lib/core/api/ai_service.dart
--+++ b/lib/core/api/ai_service.dart
--@@ -21,13 +21,19 @@ class AiService {
--   Future<EnrichedRecipeContent> getEnrichedRecipeContent(RecipeDetail recipe) async {
--     final prompt =
--         'You are a helpful and creative Turkish chef assistant. '
---        'Take the following recipe and return a JSON object with four keys: "title_tr", "ingredients_tr", "instructions_tr", and "tips_tr".\n'
---        '- "title_tr": Translate the recipe title to Turkish.\n'
---        '- "ingredients_tr": Translate the list of ingredients to Turkish. Return it as a JSON array of strings.\n'
---        '- "instructions_tr": Rewrite the recipe instructions in Turkish for a home cook. Format it as a single string with numbered steps (e.g., "1. Adım: ...\\n2. Adım: ...").\n'
---        '- "tips_tr": Provide 2-3 useful and creative tips related to this recipe as a single string, with each tip starting with a "•" character and separated by a newline.\n\n'
---        'Here is the recipe information:\n'
--+        'Take the following recipe information and return a JSON object with the keys: "turkish_title", "difficulty", "readyInMinutes", "tags", "estimated_nutrition", "required_utensils", "ingredients_tr", "preparation_steps", and "chef_tips".\n'
--+        '- "turkish_title": (string) Translate the recipe title to Turkish.\n'
--+        '- "difficulty": (string) Estimate the difficulty as "Kolay", "Orta", or "Zor".\n'
--+        '- "readyInMinutes": (integer) Use the provided preparation time.\n'
--+        '- "tags": (array of strings) Provide 3-4 relevant Turkish tags (e.g., "akşam yemeği", "tavuklu", "fırında").\n'
--+        '- "estimated_nutrition": (object) Provide estimated values for "Kalori", "Protein", "Yağ", "Karbonhidrat".\n'
--+        '- "required_utensils": (array of strings) List the necessary kitchen utensils in Turkish.\n'
--+        '- "ingredients_tr": (array of objects) Translate the ingredients to Turkish. Each object must have "amount" (double), "unit" (string), and "name" (string).\n'
--+        '- "preparation_steps": (array of objects) Rewrite instructions in Turkish. Each object must have "step_number" (integer) and "description" (string).\n'
--+        '- "chef_tips": (array of strings) Provide 2-3 useful and creative tips in Turkish.\n\n'
--+        'Here is the recipe information to use:\n'
--         'Title: ${recipe.title}\n'
--+        'Ready in Minutes: ${recipe.readyInMinutes}\n'
--         'Ingredients List: ${recipe.extendedIngredients.map((e) => e.original).toList()}\n'
--         'Instructions: ${recipe.instructions}';
-- 
--diff --git a/lib/core/api/dio_client.dart b/lib/core/api/dio_client.dart
--index 67fe63b..94bae65 100644
----- a/lib/core/api/dio_client.dart
--+++ b/lib/core/api/dio_client.dart
--@@ -18,7 +18,7 @@ class DioClient {
-- 
--     // Anahtarın .env dosyasında bulunduğundan emin olalım.
--     if (apiKey == null) {
---      throw Exception("SPOONACULAR_API_KEY .env dosyasında bulunamadı!");
--+      throw Exception("SPOONACULAR_API_KEY .env dosyasında bulunamadıysa!");
--     }
-- 
--     // 3. _dio nesnesini burada, constructor içinde oluşturuyoruz.
--diff --git a/lib/data/models/enriched_recipe_content.dart b/lib/data/models/enriched_recipe_content.dart
--index 9aadad1..8935d38 100644
----- a/lib/data/models/enriched_recipe_content.dart
--+++ b/lib/data/models/enriched_recipe_content.dart
--@@ -1,29 +1,52 @@
---// Bu basit sınıf, Gemini'den gelen yapılandırılmış veriyi tutar.
--+// lib/data/models/enriched_recipe_content.dart
--+
--+import 'package:neyese4/data/models/ingredient_info.dart';
--+import 'package:neyese4/data/models/preparation_step.dart';
--+
-- class EnrichedRecipeContent {
--+  final String imageUrl; // YENİ EKLENDİ
--   final String title;
---  final List<String> ingredients;
---  final String instructions;
---  final String tips; // Püf noktaları için ayrı bir alan
--+  final String difficulty;
--+  final List<String> tags;
--+  final Map<String, String> estimatedNutrition;
--+  final List<String> requiredUtensils;
--+  final List<IngredientInfo> ingredients;
--+  final List<PreparationStep> preparationSteps;
--+  final List<String> chefTips;
--+  final int readyInMinutes;
-- 
--   EnrichedRecipeContent({
--+    required this.imageUrl, // YENİ EKLENDİ
--     required this.title,
--+    required this.difficulty,
--+    required this.tags,
--+    required this.estimatedNutrition,
--+    required this.requiredUtensils,
--     required this.ingredients,
---    required this.instructions,
---    required this.tips,
--+    required this.preparationSteps,
--+    required this.chefTips,
--+    required this.readyInMinutes,
--   });
-- 
---  // Gelen JSON'ı bu nesneye çevirmek için bir fabrika metodu.
--+  // Not: fromJson metodunu DEĞİŞTİRMİYORUZ çünkü imageUrl AI'dan gelmeyecek.
--   factory EnrichedRecipeContent.fromJson(Map<String, dynamic> json) {
---    // Malzeme listesinin doğru şekilde parse edildiğinden emin oluyoruz.
---    final ingredientsList = (json['ingredients_tr'] as List<dynamic>?)
---        ?.map((e) => e.toString())
---        .toList() ?? [];
---
--     return EnrichedRecipeContent(
---      title: json['title_tr'] as String? ?? 'Başlık Çevrilemedi',
---      ingredients: ingredientsList,
---      instructions: json['instructions_tr'] as String? ?? 'Talimatlar zenginleştirilemedi.',
---      tips: json['tips_tr'] as String? ?? '', // Püf noktalarını alıyoruz.
--+      imageUrl: '', // Burası provider içinde doldurulacağı için boş kalabilir.
--+      title: json['turkish_title'] as String? ?? 'Başlık Yok',
--+      difficulty: json['difficulty'] as String? ?? 'Belirtilmemiş',
--+      readyInMinutes: json['readyInMinutes'] as int? ?? 0,
--+      tags: (json['tags'] as List<dynamic>?)?.map((e) => e.toString()).toList() ?? [],
--+      estimatedNutrition: (json['estimated_nutrition'] as Map<String, dynamic>?)
--+          ?.map((key, value) => MapEntry(key, value.toString())) ?? {},
--+      requiredUtensils: (json['required_utensils'] as List<dynamic>?)
--+          ?.map((e) => e.toString()).toList() ?? [],
--+      ingredients: (json['ingredients_tr'] as List<dynamic>?)
--+          ?.map((item) => IngredientInfo.fromJson(item as Map<String, dynamic>))
--+          .toList() ?? [],
--+      preparationSteps: (json['preparation_steps'] as List<dynamic>?)
--+          ?.map((item) => PreparationStep.fromJson(item as Map<String, dynamic>))
--+          .toList() ?? [],
--+      chefTips: (json['chef_tips'] as List<dynamic>?)?.map((e) => e.toString()).toList() ?? [],
--     );
--   }
---}
--+}
--\ No newline at end of file
--diff --git a/lib/data/models/ingredient_info.dart b/lib/data/models/ingredient_info.dart
--index e69de29..af88e3f 100644
----- a/lib/data/models/ingredient_info.dart
--+++ b/lib/data/models/ingredient_info.dart
--@@ -0,0 +1,23 @@
--+// lib/data/models/ingredient_info.dart
--+
--+class IngredientInfo {
--+  final double amount;
--+  final String unit;
--+  final String name;
--+
--+  IngredientInfo({
--+    required this.amount,
--+    required this.unit,
--+    required this.name,
--+  });
--+
--+  // YENİ EKLENDİ: fromJson metodu
--+  factory IngredientInfo.fromJson(Map<String, dynamic> json) {
--+    return IngredientInfo(
--+      // num olarak gelen veriyi double'a çeviriyoruz.
--+      amount: (json['amount'] as num?)?.toDouble() ?? 0.0,
--+      unit: json['unit'] as String? ?? '',
--+      name: json['name'] as String? ?? 'Bilinmeyen Malzeme',
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/lib/data/models/preparation_step.dart b/lib/data/models/preparation_step.dart
--index e69de29..73fec83 100644
----- a/lib/data/models/preparation_step.dart
--+++ b/lib/data/models/preparation_step.dart
--@@ -0,0 +1,22 @@
--+// lib/data/models/preparation_step.dart
--+
--+class PreparationStep {
--+  final int stepNumber;
--+  final String description;
--+  final String? videoPrompt;
--+
--+  PreparationStep({
--+    required this.stepNumber,
--+    required this.description,
--+    this.videoPrompt,
--+  });
--+
--+  // YENİ EKLENDİ: fromJson metodu
--+  factory PreparationStep.fromJson(Map<String, dynamic> json) {
--+    return PreparationStep(
--+      stepNumber: json['step_number'] as int? ?? 0,
--+      description: json['description'] as String? ?? 'Adım açıklaması yok.',
--+      videoPrompt: json['video_prompt'] as String?,
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/application/mock_recipe_data.dart b/lib/features/recipe_finder/application/mock_recipe_data.dart
--index e69de29..2998de9 100644
----- a/lib/features/recipe_finder/application/mock_recipe_data.dart
--+++ b/lib/features/recipe_finder/application/mock_recipe_data.dart
--@@ -0,0 +1,64 @@
--+// lib/features/recipe_finder/application/mock_recipe_data.dart
--+
--+import 'package:neyese4/data/models/enriched_recipe_content.dart';
--+import 'package:neyese4/data/models/ingredient_info.dart';
--+import 'package:neyese4/data/models/preparation_step.dart';
--+
--+// Arayüz geliştirirken kullanacağımız sahte, zenginleştirilmiş tarif verisi.
--+final mockEnrichedRecipeContent = EnrichedRecipeContent(
--+  // YENİ EKLENDİ: Eksik olan zorunlu alan
--+  imageUrl: 'https://i.lezzet.com.tr/images-xxlarge-secondary/ev-yapimi-iskender-nasil-yapilir-22248768-4934-4217-a146-8323894814a5.jpg',
--+
--+  title: "Ev Yapımı İskender Kebap",
--+  difficulty: "Orta",
--+  readyInMinutes: 45,
--+  tags: ["türk mutfağı", "ana yemek", "et", "yoğurtlu"],
--+  estimatedNutrition: {
--+    "Kalori": "650 kcal",
--+    "Protein": "45 g",
--+    "Yağ": "35 g",
--+    "Karbonhidrat": "40 g",
--+  },
--+  requiredUtensils: [
--+    "Geniş bir tava",
--+    "Servis tabağı",
--+    "Bıçak",
--+    "Sos tavası",
--+  ],
--+  ingredients: [
--+    IngredientInfo(amount: 500, unit: "g", name: "dana bonfile"),
--+    IngredientInfo(amount: 2, unit: "adet", name: "tırnak pide"),
--+    IngredientInfo(amount: 3, unit: "yemek kaşığı", name: "tereyağı"),
--+    IngredientInfo(amount: 1, unit: "yemek kaşığı", name: "domates salçası"),
--+    IngredientInfo(amount: 1, unit: "su bardağı", name: "süzme yoğurt"),
--+    IngredientInfo(amount: 2, unit: "adet", name: "domates"),
--+    IngredientInfo(amount: 4, unit: "adet", name: "sivri biber"),
--+  ],
--+  preparationSteps: [
--+    PreparationStep(
--+        stepNumber: 1,
--+        description: "Tırnak pideleri küp küp doğrayın ve servis tabağının tabanına yayın. Üzerine hafifçe ısıtılmış süzme yoğurdu gezdirin.",
--+        videoPrompt: "Hands dicing turkish pide bread into cubes and spreading them on a white plate. A spoon drizzling yogurt over the bread."
--+    ),
--+    PreparationStep(
--+        stepNumber: 2,
--+        description: "Geniş bir tavada etleri yüksek ateşte mühürleyin. Ayrı bir sos tavasında 2 yemek kaşığı tereyağını eritin ve salçayı kavurun. Az su ekleyerek sos kıvamına getirin.",
--+        videoPrompt: "Close-up shot of beef strips searing in a hot pan. A separate small pan with butter melting and tomato paste being stirred in."
--+    ),
--+    PreparationStep(
--+        stepNumber: 3,
--+        description: "Mühürlenmiş etleri yoğurtlu pidelerin üzerine yerleştirin. Hazırladığınız salçalı sosu etlerin üzerine gezdirin. Yanına közlenmiş domates ve biber ekleyin.",
--+        videoPrompt: "Placing the cooked beef over the yogurt and bread. Pouring the red tomato sauce over the beef. Placing grilled tomatoes and peppers on the side."
--+    ),
--+    PreparationStep(
--+        stepNumber: 4,
--+        description: "Kalan 1 yemek kaşığı tereyağını kızdırıp tabağın üzerinde gezdirerek cızırtılı bir sesle servis edin. Afiyet olsun!",
--+        videoPrompt: "Pouring sizzling hot melted butter from a small pan over the final Iskender dish, creating steam and a sizzling sound."
--+    ),
--+  ],
--+  chefTips: [
--+    "En iyi lezzet için mutlaka süzme yoğurt kullanın.",
--+    "Tereyağını yakmamaya özen gösterin, sadece kızdırmanız yeterli.",
--+    "Etleri çok ince yapraklar halinde kesmek, lezzeti artıracaktır."
--+  ],
--+);
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/application/recipe_providers.dart b/lib/features/recipe_finder/application/recipe_providers.dart
--index a210d7d..a840d68 100644
----- a/lib/features/recipe_finder/application/recipe_providers.dart
--+++ b/lib/features/recipe_finder/application/recipe_providers.dart
--@@ -1,31 +1,18 @@
--+// lib/features/recipe_finder/application/recipe_providers.dart
--+
-- import 'package:flutter_riverpod/flutter_riverpod.dart';
-- import 'package:neyese4/data/models/enriched_recipe_content.dart';
---import 'package:neyese4/data/models/recipe_detail.dart';
-- import 'package:neyese4/data/models/recipe_suggestion.dart';
-- import 'package:neyese4/data/models/user_preferences.dart';
-- import 'package:neyese4/data/providers.dart';
-- import 'package:neyese4/features/recipe_finder/application/search_query.dart';
-- 
---// Günün önerileri için
--+// --- ARAMA VE ÖNERİ PROVIDER'LARI (Değişiklik yok) ---
-- final randomRecipesProvider = FutureProvider.autoDispose<List<RecipeSuggestion>>((ref) {
--   final recipeRepository = ref.watch(recipeRepositoryProvider);
--   return recipeRepository.getRandomRecipes();
-- });
-- 
---// Ham tarif detayını API'den çekmek için
---final recipeDetailProvider = FutureProvider.autoDispose.family<RecipeDetail, int>((ref, recipeId) {
---  final recipeRepository = ref.watch(recipeRepositoryProvider);
---  return recipeRepository.getRecipeDetailById(recipeId);
---});
---
---// Bir tarifin kayıtlı olup olmadığını kontrol etmek için
---final isRecipeSavedProvider = Provider.autoDispose.family<bool, int>((ref, recipeId) {
---  ref.watch(savedRecipesStreamProvider);
---  final repository = ref.watch(savedRecipeRepositoryProvider);
---  return repository.isRecipeSaved(recipeId);
---});
---
---// Malzemelere ve profil ayarlarına göre arama yapmak için
-- final recipesByIngredientsProvider =
-- FutureProvider.autoDispose.family<List<RecipeSuggestion>, SearchQuery>((ref, query) {
--   if (query.ingredients.isEmpty) {
--@@ -34,13 +21,48 @@ FutureProvider.autoDispose.family<List<RecipeSuggestion>, SearchQuery>((ref, que
--   final recipeRepository = ref.watch(recipeRepositoryProvider);
--   return recipeRepository.findRecipesByIngredients(
--     query.ingredients,
---    UserPreferences(diet: query.diet, intolerances: query.intolerances, equipment: query.equipment),
--+    UserPreferences(diet: query.diet, intolerances: query.intolerances),
--   );
-- });
-- 
---// DÜZENLENDİ: Bu provider artık ham tarifi alıp AI servisine göndererek zenginleştirilmiş içeriği getirir.
---final enrichedRecipeProvider =
---FutureProvider.autoDispose.family<EnrichedRecipeContent, RecipeDetail>((ref, recipe) {
--+
--+// --- TARİF DETAY SAYFASI İÇİN YENİ PROVIDER'LAR ---
--+
--+// 1. Temel tarifi Spoonacular'dan çeken provider (dahili kullanım için)
--+final _recipeDetailProvider = FutureProvider.autoDispose.family((ref, int recipeId) {
--+  final recipeRepository = ref.watch(recipeRepositoryProvider);
--+  return recipeRepository.getRecipeDetailById(recipeId);
--+});
--+
--+// 2. Spoonacular'dan tarifi alıp Gemini ile zenginleştiren BİRLEŞİK provider
--+// Arayüzümüz sadece bu provider'ı kullanacak.
--+final fullRecipeProvider = FutureProvider.autoDispose.family<EnrichedRecipeContent, int>((ref, recipeId) async {
--+  // Önce temel tarifi al
--+  final baseRecipe = await ref.watch(_recipeDetailProvider(recipeId).future);
--+
--+  // Sonra bu tarifi AI servisine gönderip zenginleştirilmiş halini al
--   final aiService = ref.watch(aiServiceProvider);
---  return aiService.getEnrichedRecipeContent(recipe);
--+  final enrichedContentFromAI = await aiService.getEnrichedRecipeContent(baseRecipe);
--+
--+
--+  return EnrichedRecipeContent(
--+    imageUrl: baseRecipe.image, // Spoonacular'dan gelen orijinal resim URL'si
--+    title: enrichedContentFromAI.title,
--+    difficulty: enrichedContentFromAI.difficulty,
--+    readyInMinutes: enrichedContentFromAI.readyInMinutes,
--+    tags: enrichedContentFromAI.tags,
--+    estimatedNutrition: enrichedContentFromAI.estimatedNutrition,
--+    requiredUtensils: enrichedContentFromAI.requiredUtensils,
--+    ingredients: enrichedContentFromAI.ingredients,
--+    preparationSteps: enrichedContentFromAI.preparationSteps,
--+    chefTips: enrichedContentFromAI.chefTips,
--+  );
-- });
--+
--+
--+// 3. Bir tarifin kaydedilip kaydedilmediğini kontrol eden provider (Değişiklik yok)
--+final isRecipeSavedProvider = Provider.autoDispose.family<bool, int>((ref, recipeId) {
--+  ref.watch(savedRecipesStreamProvider);
--+  final repository = ref.watch(savedRecipeRepositoryProvider);
--+  return repository.isRecipeSaved(recipeId);
--+});
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart b/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
--index 806aca1..e3b265e 100644
----- a/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
--+++ b/lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
--@@ -1,164 +1,124 @@
---import 'package:flutter/foundation.dart';
--+// lib/features/recipe_finder/presentation/screens/recipe_detail_screen.dart
--+
-- import 'package:flutter/material.dart';
-- import 'package:flutter_riverpod/flutter_riverpod.dart';
-- import 'package:neyese4/core/theme/app_colors.dart';
-- import 'package:neyese4/core/theme/app_text_styles.dart';
---import 'package:neyese4/data/models/recipe_detail.dart';
-- import 'package:neyese4/data/models/saved_recipe.dart';
-- import 'package:neyese4/data/providers.dart';
-- import 'package:neyese4/features/recipe_finder/application/recipe_providers.dart';
--+// Widget'larımızı import ediyoruz
--+import 'package:neyese4/features/recipe_finder/presentation/widgets/chef_tips_card.dart';
--+import 'package:neyese4/features/recipe_finder/presentation/widgets/ingredients_card.dart';
--+import 'package:neyese4/features/recipe_finder/presentation/widgets/nutrition_card.dart';
--+import 'package:neyese4/features/recipe_finder/presentation/widgets/preparation_steps_card.dart';
--+import 'package:neyese4/features/recipe_finder/presentation/widgets/recipe_title_and_meta_card.dart';
--+import 'package:neyese4/features/recipe_finder/presentation/widgets/utensils_card.dart';
--+import 'package:flutter/foundation.dart'; // Web kontrolü için bu importu ekleyin
-- 
--+// Widget'ımızı tekrar ConsumerWidget'a çeviriyoruz.
-- class RecipeDetailScreen extends ConsumerWidget {
--   final int recipeId;
--   const RecipeDetailScreen({super.key, required this.recipeId});
-- 
--   @override
--   Widget build(BuildContext context, WidgetRef ref) {
---    final recipeDetailAsyncValue = ref.watch(recipeDetailProvider(recipeId));
--+    // Yeni birleşik provider'ımızı dinliyoruz.
--+    final recipeAsyncValue = ref.watch(fullRecipeProvider(recipeId));
-- 
--     return Scaffold(
--       backgroundColor: AppColors.background,
---      body: recipeDetailAsyncValue.when(
--+      // Gelen verinin durumuna göre (yükleniyor, hata, başarılı) farklı arayüzler gösteriyoruz.
--+      body: recipeAsyncValue.when(
--         loading: () => const Center(child: CircularProgressIndicator()),
---        error: (err, stack) => Center(child: Text('Tarif yüklenemedi: $err')),
---        data: (recipe) {
---          final enrichedContentAsyncValue = ref.watch(enrichedRecipeProvider(recipe));
--+        error: (err, stack) => Center(
--+          child: Padding(
--+            padding: const EdgeInsets.all(20.0),
--+            child: Text('Tarif yüklenemedi.\nLütfen internet bağlantınızı kontrol edin.\nHata: $err', textAlign: TextAlign.center),
--+          ),
--+        ),
--+        data: (content) {
--+          // Veri başarıyla geldiğinde, daha önce tasarladığımız arayüzü gösteriyoruz.
--           final isSaved = ref.watch(isRecipeSavedProvider(recipeId));
---          final imageUrl = kIsWeb ? 'https://api.allorigins.win/raw?url=${Uri.encodeComponent(recipe.image)}' : recipe.image;
--+          const double cardSpacing = 24.0;
-- 
--           return CustomScrollView(
--             slivers: [
--               SliverAppBar(
---                surfaceTintColor: Colors.transparent,
--                 expandedHeight: 250.0,
--                 pinned: true,
---                title: enrichedContentAsyncValue.when(
---                  data: (content) => Text(content.title, maxLines: 1, overflow: TextOverflow.ellipsis),
---                  loading: () => Text(recipe.title, maxLines: 1, overflow: TextOverflow.ellipsis),
---                  error: (_, __) => Text(recipe.title, maxLines: 1, overflow: TextOverflow.ellipsis),
--+                flexibleSpace: FlexibleSpaceBar(
--+                  title: Text(
--+                    content.title,
--+                    style: const TextStyle(
--+                        fontSize: 16,
--+                        shadows: [Shadow(color: Colors.black54, blurRadius: 8, offset: Offset(0, 1))]),
--+                  ),
--+                  background: Image.network(
--+                    // Web'de CORS hatası almamak için proxy kullanıyoruz.
--+                    kIsWeb
--+                        ? 'https://api.allorigins.win/raw?url=${Uri.encodeComponent(content.imageUrl)}'
--+                        : content.imageUrl,
--+                    fit: BoxFit.cover,
--+                    errorBuilder: (c, e, s) => const Icon(Icons.error),
--+                  ),
--                 ),
---                centerTitle: false,
--                 actions: [
--+                  // Kaydetme butonunu tekrar aktif hale getiriyoruz
--                   IconButton(
--                     icon: Icon(isSaved ? Icons.bookmark : Icons.bookmark_border_outlined, color: isSaved ? AppColors.primaryAction : null),
---                    onPressed: () async {
---                      final savedRecipeRepository = ref.read(savedRecipeRepositoryProvider);
--+                    onPressed: () {
--+                      final repository = ref.read(savedRecipeRepositoryProvider);
--                       if (isSaved) {
---                        await savedRecipeRepository.deleteRecipe(recipeId);
--+                        repository.deleteRecipe(recipeId);
--                       } else {
---                        await savedRecipeRepository.saveRecipe(SavedRecipe(id: recipe.id, title: recipe.title, image: recipe.image));
---                      }
--+                        // Not: image URL'i şu an mock datadan değil, AI cevabından gelmiyor.
--+                        // Şimdilik sabit bir URL kullanabiliriz veya Spoonacular'dan gelen orijinali kullanabiliriz.
--+                        // Bu özellik daha sonra geliştirilebilir.
--+                        repository.saveRecipe(SavedRecipe(id: recipeId, title: content.title, image: content.imageUrl));                      }
--                     },
--                   ),
--                 ],
---                flexibleSpace: FlexibleSpaceBar(
---                  background: Image.network(imageUrl, fit: BoxFit.cover, errorBuilder: (c, e, s) => const Icon(Icons.error)),
---                ),
--               ),
---              SliverToBoxAdapter(
---                child: Padding(
---                    padding: const EdgeInsets.all(16.0),
---                    child: enrichedContentAsyncValue.when(
---                      loading: () => const Center(heightFactor: 5, child: CircularProgressIndicator()),
---                      error: (err, stack) => Center(child: Text('Tarif içeriği yüklenemedi: $err', style: const TextStyle(color: Colors.red))),
---                      data: (content) {
---                        // YENİ VE ŞIK ARAYÜZ
---                        return Column(
---                          crossAxisAlignment: CrossAxisAlignment.start,
---                          children: [
---                            // Başlık ve Özet Bilgiler
---                            Text(content.title, style: AppTextStyles.h1),
---                            const SizedBox(height: 16),
---                            Row(
---                              children: [
---                                _buildInfoChip(Icons.timer_outlined, '${recipe.readyInMinutes} dk'),
---                                const SizedBox(width: 8),
---                                _buildInfoChip(Icons.food_bank_outlined, '${content.ingredients.length} malzeme'),
---                              ],
---                            ),
---                            const SizedBox(height: 24),
---
---                            // Malzemeler Bölümü
---                            const Text('Malzemeler', style: AppTextStyles.h2),
---                            const SizedBox(height: 12),
---                            Container(
---                              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
---                              decoration: BoxDecoration(
---                                  color: Colors.white,
---                                  borderRadius: BorderRadius.circular(12),
---                                  border: Border.all(color: Colors.grey.shade200)),
---                              child: Column(
---                                crossAxisAlignment: CrossAxisAlignment.start,
---                                children: content.ingredients
---                                    .map((ingredient) => Padding(
---                                  padding: const EdgeInsets.symmetric(vertical: 4.0),
---                                  child: Text('• $ingredient', style: AppTextStyles.body),
---                                ))
---                                    .toList(),
---                              ),
---                            ),
---                            const SizedBox(height: 24),
---
---                            // Hazırlanışı Bölümü
---                            const Text('Hazırlanışı', style: AppTextStyles.h2),
---                            const SizedBox(height: 12),
---                            Text(
---                              content.instructions,
---                              style: AppTextStyles.body.copyWith(height: 1.6, fontSize: 17),
---                            ),
---
---                            // Püf Noktaları Bölümü (Eğer varsa)
---                            if (content.tips.isNotEmpty) ...[
---                              const SizedBox(height: 24),
---                              const Text('Püf Noktaları', style: AppTextStyles.h2),
---                              const SizedBox(height: 12),
---                              Container(
---                                padding: const EdgeInsets.all(16),
---                                decoration: BoxDecoration(
---                                  color: AppColors.primaryAction.withOpacity(0.05),
---                                  borderRadius: BorderRadius.circular(12),
---                                ),
---                                child: Text(
---                                    content.tips,
---                                    style: AppTextStyles.body.copyWith(height: 1.5, fontStyle: FontStyle.italic)
---                                ),
---                              )
---                            ],
---
---                            const SizedBox(height: 40),
---                            SizedBox(
---                              width: double.infinity,
---                              child: ElevatedButton.icon(
---                                icon: const Icon(Icons.play_arrow_rounded, color: Colors.white),
---                                onPressed: () {
---                                  // TODO: İnteraktif Pişirme Modu sayfası açılacak.
---                                },
---                                style: ElevatedButton.styleFrom(
---                                  backgroundColor: AppColors.accent,
---                                  padding: const EdgeInsets.symmetric(vertical: 16),
---                                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
---                                ),
---                                label: const Text('Tarifi Yapmaya Başla', style: AppTextStyles.button),
---                              ),
---                            ),
---                          ],
---                        );
---                      },
---                    )
--+              SliverPadding(
--+                padding: const EdgeInsets.all(16.0),
--+                sliver: SliverList(
--+                  delegate: SliverChildListDelegate(
--+                    [
--+                      RecipeTitleAndMetaCard(content: content),
--+                      const SizedBox(height: cardSpacing),
--+                      IngredientsCard(content: content),
--+                      const SizedBox(height: cardSpacing),
--+                      UtensilsCard(content: content),
--+                      const SizedBox(height: cardSpacing),
--+                      PreparationStepsCard(content: content),
--+                      const SizedBox(height: cardSpacing),
--+                      ChefTipsCard(content: content),
--+                      const SizedBox(height: cardSpacing),
--+                      NutritionCard(content: content),
--+                      const SizedBox(height: cardSpacing + 20),
--+                    ],
--+                  ),
--                 ),
--               ),
--             ],
--           );
--         },
--       ),
--+      // Butonun görünürlüğü veri yüklendiğinde sağlanır.
--+      bottomNavigationBar: recipeAsyncValue.hasValue ? Padding(
--+        padding: const EdgeInsets.all(16.0),
--+        child: ElevatedButton.icon(
--+          icon: const Icon(Icons.play_arrow_rounded, color: Colors.white),
--+          onPressed: () {},
--+          style: ElevatedButton.styleFrom(
--+            backgroundColor: AppColors.accent,
--+            padding: const EdgeInsets.symmetric(vertical: 16),
--+            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
--+          ),
--+          label: const Text('Tarifi Yapmaya Başla', style: AppTextStyles.button),
--+        ),
--+      ) : null,
--     );
--   }
---
---  Widget _buildInfoChip(IconData icon, String label) => Chip(
---    avatar: Icon(icon, color: AppColors.primaryAction, size: 20),
---    label: Text(label, style: AppTextStyles.body),
---    backgroundColor: AppColors.primaryAction.withOpacity(0.1),
---    side: BorderSide.none,
---    padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
---  );
---}
--+}
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/presentation/widgets/chef_tips_card.dart b/lib/features/recipe_finder/presentation/widgets/chef_tips_card.dart
--index e69de29..ad0c6c7 100644
----- a/lib/features/recipe_finder/presentation/widgets/chef_tips_card.dart
--+++ b/lib/features/recipe_finder/presentation/widgets/chef_tips_card.dart
--@@ -0,0 +1,52 @@
--+// lib/features/recipe_finder/presentation/widgets/chef_tips_card.dart
--+
--+import 'package:flutter/material.dart';
--+import 'package:neyese4/core/theme/app_colors.dart';
--+import 'package:neyese4/core/theme/app_text_styles.dart';
--+import 'package:neyese4/data/models/enriched_recipe_content.dart';
--+
--+class ChefTipsCard extends StatelessWidget {
--+  final EnrichedRecipeContent content;
--+  const ChefTipsCard({super.key, required this.content});
--+
--+  @override
--+  Widget build(BuildContext context) {
--+    if (content.chefTips.isEmpty) {
--+      // Eğer püf noktası yoksa, bu kartı hiç gösterme.
--+      return const SizedBox.shrink();
--+    }
--+
--+    return Container(
--+      width: double.infinity,
--+      padding: const EdgeInsets.all(16.0),
--+      decoration: BoxDecoration(
--+        color: AppColors.primaryAction.withOpacity(0.05), // Farklı bir arka plan
--+        borderRadius: BorderRadius.circular(12),
--+        border: Border.all(color: AppColors.primaryAction.withOpacity(0.2)),
--+      ),
--+      child: Column(
--+        crossAxisAlignment: CrossAxisAlignment.start,
--+        children: [
--+          Row(
--+            children: [
--+              const Icon(Icons.lightbulb_outline, color: AppColors.primaryAction),
--+              const SizedBox(width: 8),
--+              Text('Püf Noktaları', style: AppTextStyles.h2),
--+            ],
--+          ),
--+          const SizedBox(height: 16),
--+          ...content.chefTips.map((tip) {
--+            return Padding(
--+              padding: const EdgeInsets.only(bottom: 8.0),
--+              // İtalik ve hafif bir stil ile
--+              child: Text(
--+                '• $tip',
--+                style: AppTextStyles.body.copyWith(fontStyle: FontStyle.italic),
--+              ),
--+            );
--+          }).toList(),
--+        ],
--+      ),
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/presentation/widgets/ingredients_card.dart b/lib/features/recipe_finder/presentation/widgets/ingredients_card.dart
--index e69de29..2173e8f 100644
----- a/lib/features/recipe_finder/presentation/widgets/ingredients_card.dart
--+++ b/lib/features/recipe_finder/presentation/widgets/ingredients_card.dart
--@@ -0,0 +1,175 @@
--+// lib/features/recipe_finder/presentation/widgets/ingredients_card.dart
--+
--+import 'package:flutter/material.dart';
--+import 'package:intl/intl.dart';
--+import 'package:neyese4/core/theme/app_colors.dart';
--+import 'package:neyese4/core/theme/app_text_styles.dart';
--+import 'package:neyese4/data/models/enriched_recipe_content.dart';
--+import 'package:neyese4/data/models/ingredient_info.dart';
--+
--+class IngredientsCard extends StatefulWidget {
--+  final EnrichedRecipeContent content;
--+  const IngredientsCard({super.key, required this.content});
--+
--+  @override
--+  State<IngredientsCard> createState() => _IngredientsCardState();
--+}
--+
--+class _IngredientsCardState extends State<IngredientsCard> {
--+  late int _servings;
--+  final int _originalServings = 2;
--+
--+  // YENİ: İşaretlenmiş malzemelerin adlarını tutacak bir set.
--+  // Set kullanıyoruz çünkü her malzeme sadece bir kez eklenebilir.
--+  final Set<String> _checkedIngredients = {};
--+
--+  @override
--+  void initState() {
--+    super.initState();
--+    _servings = _originalServings;
--+  }
--+
--+  void _incrementServings() {
--+    setState(() {
--+      _servings++;
--+    });
--+  }
--+
--+  void _decrementServings() {
--+    if (_servings > 1) {
--+      setState(() {
--+        _servings--;
--+      });
--+    }
--+  }
--+
--+  @override
--+  Widget build(BuildContext context) {
--+    return _buildStyledCard(
--+      title: 'Malzemeler',
--+      headerAccessory: _buildServingCalculator(),
--+      child: Column(
--+        crossAxisAlignment: CrossAxisAlignment.start,
--+        children: widget.content.ingredients.map((ingredient) {
--+          return _buildIngredientRow(ingredient);
--+        }).toList(),
--+      ),
--+    );
--+  }
--+
--+  Widget _buildServingCalculator() {
--+    return Row(
--+      children: [
--+        IconButton(
--+          onPressed: _decrementServings,
--+          icon: const Icon(Icons.remove_circle_outline),
--+          color: AppColors.neutralGrey,
--+        ),
--+        Text('$_servings Porsiyon', style: AppTextStyles.body.copyWith(fontWeight: FontWeight.bold)),
--+        IconButton(
--+          onPressed: _incrementServings,
--+          icon: const Icon(Icons.add_circle_outline),
--+          color: AppColors.primaryAction,
--+        ),
--+      ],
--+    );
--+  }
--+
--+  // GÜNCELLENDİ: Bu metot artık interaktif bir Checkbox içeriyor.
--+  Widget _buildIngredientRow(IngredientInfo ingredient) {
--+    final newAmount = (ingredient.amount / _originalServings) * _servings;
--+    final NumberFormat numberFormat = NumberFormat("#.##");
--+    final formattedAmount = numberFormat.format(newAmount);
--+
--+    // Bu malzemenin işaretli olup olmadığını kontrol ediyoruz.
--+    final bool isChecked = _checkedIngredients.contains(ingredient.name);
--+
--+    return Padding(
--+      padding: const EdgeInsets.symmetric(vertical: 2.0),
--+      child: InkWell( // Tüm satırı tıklanabilir yapmak için
--+        onTap: () {
--+          setState(() {
--+            if (isChecked) {
--+              _checkedIngredients.remove(ingredient.name);
--+            } else {
--+              _checkedIngredients.add(ingredient.name);
--+            }
--+          });
--+        },
--+        borderRadius: BorderRadius.circular(8),
--+        child: Padding(
--+          padding: const EdgeInsets.symmetric(vertical: 6.0),
--+          child: Row(
--+            children: [
--+              // GÜNCELLENDİ: Artık statik bir ikon yerine interaktif bir Checkbox var.
--+              Checkbox(
--+                value: isChecked,
--+                onChanged: (bool? value) {
--+                  setState(() {
--+                    if (value == true) {
--+                      _checkedIngredients.add(ingredient.name);
--+                    } else {
--+                      _checkedIngredients.remove(ingredient.name);
--+                    }
--+                  });
--+                },
--+                activeColor: AppColors.primaryAction,
--+              ),
--+              const SizedBox(width: 8),
--+              SizedBox(
--+                width: 80,
--+                child: Text(
--+                  '$formattedAmount ${ingredient.unit}',
--+                  style: AppTextStyles.body.copyWith(fontWeight: FontWeight.bold),
--+                ),
--+              ),
--+              Expanded(
--+                child: Text(
--+                  ingredient.name,
--+                  // GÜNCELLENDİ: İşaretliyse metnin üzerini çiziyoruz.
--+                  style: AppTextStyles.body.copyWith(
--+                    decoration: isChecked ? TextDecoration.lineThrough : null,
--+                    color: isChecked ? AppColors.neutralGrey : AppColors.primaryText,
--+                  ),
--+                ),
--+              ),
--+            ],
--+          ),
--+        ),
--+      ),
--+    );
--+  }
--+
--+  Widget _buildStyledCard({required String title, required Widget child, Widget? headerAccessory}) {
--+    return Container(
--+      width: double.infinity,
--+      padding: const EdgeInsets.all(16.0),
--+      decoration: BoxDecoration(
--+        color: Colors.white,
--+        borderRadius: BorderRadius.circular(12),
--+        boxShadow: [
--+          BoxShadow(
--+            color: Colors.grey.withOpacity(0.1),
--+            spreadRadius: 1,
--+            blurRadius: 5,
--+            offset: const Offset(0, 2),
--+          ),
--+        ],
--+      ),
--+      child: Column(
--+        crossAxisAlignment: CrossAxisAlignment.start,
--+        children: [
--+          Row(
--+            mainAxisAlignment: MainAxisAlignment.spaceBetween,
--+            children: [
--+              Text(title, style: AppTextStyles.h2),
--+              if (headerAccessory != null) headerAccessory,
--+            ],
--+          ),
--+          const Divider(height: 32),
--+          child,
--+        ],
--+      ),
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/presentation/widgets/nutrition_card.dart b/lib/features/recipe_finder/presentation/widgets/nutrition_card.dart
--index e69de29..d5dda9e 100644
----- a/lib/features/recipe_finder/presentation/widgets/nutrition_card.dart
--+++ b/lib/features/recipe_finder/presentation/widgets/nutrition_card.dart
--@@ -0,0 +1,59 @@
--+// lib/features/recipe_finder/presentation/widgets/nutrition_card.dart
--+
--+import 'package:flutter/material.dart';
--+import 'package:neyese4/core/theme/app_text_styles.dart';
--+import 'package:neyese4/data/models/enriched_recipe_content.dart';
--+
--+class NutritionCard extends StatelessWidget {
--+  final EnrichedRecipeContent content;
--+  const NutritionCard({super.key, required this.content});
--+
--+  @override
--+  Widget build(BuildContext context) {
--+    return _buildStyledCard(
--+      title: 'Tahmini Besin Değerleri',
--+      child: Column(
--+        children: content.estimatedNutrition.entries.map((entry) {
--+          return Padding(
--+            padding: const EdgeInsets.symmetric(vertical: 4.0),
--+            child: Row(
--+              mainAxisAlignment: MainAxisAlignment.spaceBetween,
--+              children: [
--+                Text(entry.key, style: AppTextStyles.body),
--+                Text(entry.value, style: AppTextStyles.body.copyWith(fontWeight: FontWeight.bold)),
--+              ],
--+            ),
--+          );
--+        }).toList(),
--+      ),
--+    );
--+  }
--+
--+  // Ortak kart stili için yardımcı metot.
--+  Widget _buildStyledCard({required String title, required Widget child}) {
--+    return Container(
--+      width: double.infinity,
--+      padding: const EdgeInsets.all(16.0),
--+      decoration: BoxDecoration(
--+        color: Colors.white,
--+        borderRadius: BorderRadius.circular(12),
--+        boxShadow: [
--+          BoxShadow(
--+            color: Colors.grey.withOpacity(0.1),
--+            spreadRadius: 1,
--+            blurRadius: 5,
--+            offset: const Offset(0, 2),
--+          ),
--+        ],
--+      ),
--+      child: Column(
--+        crossAxisAlignment: CrossAxisAlignment.start,
--+        children: [
--+          Text(title, style: AppTextStyles.h2),
--+          const SizedBox(height: 16),
--+          child,
--+        ],
--+      ),
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/presentation/widgets/preparation_steps_card.dart b/lib/features/recipe_finder/presentation/widgets/preparation_steps_card.dart
--index e69de29..2eda7e0 100644
----- a/lib/features/recipe_finder/presentation/widgets/preparation_steps_card.dart
--+++ b/lib/features/recipe_finder/presentation/widgets/preparation_steps_card.dart
--@@ -0,0 +1,119 @@
--+// lib/features/recipe_finder/presentation/widgets/preparation_steps_card.dart
--+
--+import 'package:flutter/material.dart';
--+import 'package:neyese4/core/theme/app_colors.dart';
--+import 'package:neyese4/core/theme/app_text_styles.dart';
--+import 'package:neyese4/data/models/enriched_recipe_content.dart';
--+import 'package:neyese4/data/models/preparation_step.dart';
--+
--+class PreparationStepsCard extends StatelessWidget {
--+  final EnrichedRecipeContent content;
--+  const PreparationStepsCard({super.key, required this.content});
--+
--+  @override
--+  Widget build(BuildContext context) {
--+    return _buildStyledCard(
--+      title: 'Hazırlanışı',
--+      child: Column(
--+        children: content.preparationSteps.map((step) {
--+          // Her bir adım için _StepItem widget'ını oluşturuyoruz.
--+          // Listenin son elemanı değilse, altına bir ayırıcı (divider) ekliyoruz.
--+          final isLastItem = step == content.preparationSteps.last;
--+          return Column(
--+            children: [
--+              _StepItem(step: step),
--+              if (!isLastItem)
--+                const Divider(height: 32, thickness: 0.5)
--+            ],
--+          );
--+        }).toList(),
--+      ),
--+    );
--+  }
--+
--+  // Diğer kartlarımızla aynı stili kullanmak için yardımcı metot.
--+  Widget _buildStyledCard({required String title, required Widget child}) {
--+    return Container(
--+      width: double.infinity,
--+      padding: const EdgeInsets.all(16.0),
--+      decoration: BoxDecoration(
--+        color: Colors.white,
--+        borderRadius: BorderRadius.circular(12),
--+        boxShadow: [
--+          BoxShadow(
--+            color: Colors.grey.withOpacity(0.1),
--+            spreadRadius: 1,
--+            blurRadius: 5,
--+            offset: const Offset(0, 2),
--+          ),
--+        ],
--+      ),
--+      child: Column(
--+        crossAxisAlignment: CrossAxisAlignment.start,
--+        children: [
--+          Text(title, style: AppTextStyles.h2),
--+          const SizedBox(height: 16),
--+          child,
--+        ],
--+      ),
--+    );
--+  }
--+}
--+
--+// Tek bir hazırlık adımını gösteren widget.
--+class _StepItem extends StatelessWidget {
--+  final PreparationStep step;
--+  const _StepItem({required this.step});
--+
--+  @override
--+  Widget build(BuildContext context) {
--+    return Row(
--+      crossAxisAlignment: CrossAxisAlignment.start,
--+      children: [
--+        // Adım Numarası
--+        CircleAvatar(
--+          radius: 14,
--+          backgroundColor: AppColors.primaryAction,
--+          child: Text(
--+            '${step.stepNumber}',
--+            style: AppTextStyles.body.copyWith(
--+              color: Colors.white,
--+              fontWeight: FontWeight.bold,
--+            ),
--+          ),
--+        ),
--+        const SizedBox(width: 16),
--+        // Adım Açıklaması ve Görseli için Alan
--+        Expanded(
--+          child: Column(
--+            crossAxisAlignment: CrossAxisAlignment.start,
--+            children: [
--+              Text(
--+                step.description,
--+                style: AppTextStyles.body.copyWith(height: 1.5, fontSize: 17),
--+              ),
--+              const SizedBox(height: 16),
--+              // Gelecekte AI ile görsel üreteceğimiz alanın yer tutucusu.
--+              AspectRatio(
--+                aspectRatio: 16 / 9,
--+                child: Container(
--+                  decoration: BoxDecoration(
--+                    color: Colors.grey.shade200,
--+                    borderRadius: BorderRadius.circular(8),
--+                  ),
--+                  child: const Center(
--+                    child: Icon(
--+                      Icons.camera_alt_outlined,
--+                      color: AppColors.neutralGrey,
--+                      size: 32,
--+                    ),
--+                  ),
--+                ),
--+              ),
--+            ],
--+          ),
--+        ),
--+      ],
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/presentation/widgets/recipe_title_and_meta_card.dart b/lib/features/recipe_finder/presentation/widgets/recipe_title_and_meta_card.dart
--index e69de29..56c83f7 100644
----- a/lib/features/recipe_finder/presentation/widgets/recipe_title_and_meta_card.dart
--+++ b/lib/features/recipe_finder/presentation/widgets/recipe_title_and_meta_card.dart
--@@ -0,0 +1,44 @@
--+import 'package:flutter/material.dart';
--+import 'package:neyese4/core/theme/app_colors.dart';
--+import 'package:neyese4/core/theme/app_text_styles.dart';
--+import 'package:neyese4/data/models/enriched_recipe_content.dart';
--+
--+class RecipeTitleAndMetaCard extends StatelessWidget {
--+  final EnrichedRecipeContent content;
--+  const RecipeTitleAndMetaCard({super.key, required this.content});
--+
--+  @override
--+  Widget build(BuildContext context) {
--+    return Column(
--+      crossAxisAlignment: CrossAxisAlignment.start,
--+      children: [
--+        Text(content.title, style: AppTextStyles.h1),
--+        const SizedBox(height: 16),
--+        Row(
--+          children: [
--+            _buildInfoChip(
--+              icon: Icons.timer_outlined,
--+              label: '${content.readyInMinutes} dk',
--+            ),
--+            const SizedBox(width: 12),
--+            _buildInfoChip(
--+              icon: Icons.leaderboard_outlined,
--+              label: content.difficulty,
--+            ),
--+          ],
--+        ),
--+      ],
--+    );
--+  }
--+
--+  Widget _buildInfoChip({required IconData icon, required String label}) {
--+    return Chip(
--+      avatar: Icon(icon, color: AppColors.primaryAction, size: 20),
--+      label: Text(label),
--+      labelStyle: AppTextStyles.body.copyWith(color: AppColors.primaryText),
--+      backgroundColor: AppColors.primaryAction.withOpacity(0.1),
--+      side: BorderSide.none,
--+      padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 6),
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/lib/features/recipe_finder/presentation/widgets/utensils_card.dart b/lib/features/recipe_finder/presentation/widgets/utensils_card.dart
--index e69de29..213b1ff 100644
----- a/lib/features/recipe_finder/presentation/widgets/utensils_card.dart
--+++ b/lib/features/recipe_finder/presentation/widgets/utensils_card.dart
--@@ -0,0 +1,52 @@
--+import 'package:flutter/material.dart';
--+import 'package:neyese4/core/theme/app_text_styles.dart';
--+import 'package:neyese4/data/models/enriched_recipe_content.dart';
--+
--+class UtensilsCard extends StatelessWidget {
--+  final EnrichedRecipeContent content;
--+  const UtensilsCard({super.key, required this.content});
--+
--+  @override
--+  Widget build(BuildContext context) {
--+    return _buildStyledCard(
--+      title: 'Mutfak Aletleri',
--+      child: Column(
--+        crossAxisAlignment: CrossAxisAlignment.start,
--+        children: content.requiredUtensils.map((utensil) {
--+          return Padding(
--+            padding: const EdgeInsets.only(bottom: 8.0),
--+            child: Text('• $utensil', style: AppTextStyles.body),
--+          );
--+        }).toList(),
--+      ),
--+    );
--+  }
--+
--+  // Ortak kart stilimizi oluşturmak için bir yardımcı metot
--+  Widget _buildStyledCard({required String title, required Widget child}) {
--+    return Container(
--+      width: double.infinity,
--+      padding: const EdgeInsets.all(16.0),
--+      decoration: BoxDecoration(
--+        color: Colors.white,
--+        borderRadius: BorderRadius.circular(12),
--+        boxShadow: [
--+          BoxShadow(
--+            color: Colors.grey.withOpacity(0.1),
--+            spreadRadius: 1,
--+            blurRadius: 5,
--+            offset: const Offset(0, 2),
--+          ),
--+        ],
--+      ),
--+      child: Column(
--+        crossAxisAlignment: CrossAxisAlignment.start,
--+        children: [
--+          Text(title, style: AppTextStyles.h2),
--+          const SizedBox(height: 16),
--+          child,
--+        ],
--+      ),
--+    );
--+  }
--+}
--\ No newline at end of file
--diff --git a/neyese_updates.patch b/neyese_updates.patch
--index 229a846..e062a5f 100644
----- a/neyese_updates.patch
--+++ b/neyese_updates.patch
--@@ -1,13 +0,0 @@
---diff --git a/lib/core/api/dio_client.dart b/lib/core/api/dio_client.dart
---index 67fe63b..94bae65 100644
------ a/lib/core/api/dio_client.dart
---+++ b/lib/core/api/dio_client.dart
---@@ -18,7 +18,7 @@ class DioClient {
--- 
---     // Anahtarın .env dosyasında bulunduğundan emin olalım.
---     if (apiKey == null) {
----      throw Exception("SPOONACULAR_API_KEY .env dosyasında bulunamadı!");
---+      throw Exception("SPOONACULAR_API_KEY .env dosyasında bulunamadıysa!");
---     }
--- 
---     // 3. _dio nesnesini burada, constructor içinde oluşturuyoruz.
--diff --git a/pubspec.lock b/pubspec.lock
--index 6d7ed5d..f4cd404 100644
----- a/pubspec.lock
--+++ b/pubspec.lock
--@@ -360,6 +360,14 @@ packages:
--       url: "https://pub.dev"
--     source: hosted
--     version: "4.1.2"
--+  intl:
--+    dependency: "direct main"
--+    description:
--+      name: intl
--+      sha256: "3df61194eb431efc39c4ceba583b95633a403f46c9fd341e550ce0bfa50e9aa5"
--+      url: "https://pub.dev"
--+    source: hosted
--+    version: "0.20.2"
--   io:
--     dependency: transitive
--     description:
--diff --git a/pubspec.yaml b/pubspec.yaml
--index e038115..5d4378b 100644
----- a/pubspec.yaml
--+++ b/pubspec.yaml
--@@ -44,6 +44,7 @@ dependencies:
--   google_generative_ai: ^0.4.7 #Yapay Zeka asistan için
--   cupertino_icons: ^1.0.6
--   flutter_dotenv: ^5.2.1
--+  intl: ^0.20.2
-- 
-- dev_dependencies:
--   flutter_test:
-diff --git a/pubspec.lock b/pubspec.lock
-index 559f4d5..cda4b0b 100644
---- a/pubspec.lock
-+++ b/pubspec.lock
-@@ -158,6 +158,14 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "3.1.2"
-+  cross_file:
-+    dependency: transitive
-+    description:
-+      name: cross_file
-+      sha256: "7caf6a750a0c04effbb52a676dce9a4a592e10ad35c34d6d2d0e4811160d5670"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.3.4+2"
-   crypto:
-     dependency: transitive
-     description:
-@@ -222,6 +230,38 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "7.0.1"
-+  file_selector_linux:
-+    dependency: transitive
-+    description:
-+      name: file_selector_linux
-+      sha256: "54cbbd957e1156d29548c7d9b9ec0c0ebb6de0a90452198683a7d23aed617a33"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.9.3+2"
-+  file_selector_macos:
-+    dependency: transitive
-+    description:
-+      name: file_selector_macos
-+      sha256: "8c9250b2bd2d8d4268e39c82543bacbaca0fda7d29e0728c3c4bbb7c820fd711"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.9.4+3"
-+  file_selector_platform_interface:
-+    dependency: transitive
-+    description:
-+      name: file_selector_platform_interface
-+      sha256: a3994c26f10378a039faa11de174d7b78eb8f79e4dd0af2a451410c1a5c3f66b
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "2.6.2"
-+  file_selector_windows:
-+    dependency: transitive
-+    description:
-+      name: file_selector_windows
-+      sha256: "320fcfb6f33caa90f0b58380489fc5ac05d99ee94b61aa96ec2bff0ba81d3c2b"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.9.3+4"
-   fixnum:
-     dependency: transitive
-     description:
-@@ -243,6 +283,14 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "3.0.2"
-+  flutter_plugin_android_lifecycle:
-+    dependency: transitive
-+    description:
-+      name: flutter_plugin_android_lifecycle
-+      sha256: f948e346c12f8d5480d2825e03de228d0eb8c3a737e4cdaa122267b89c022b5e
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "2.0.28"
-   flutter_riverpod:
-     dependency: "direct main"
-     description:
-@@ -256,6 +304,11 @@ packages:
-     description: flutter
-     source: sdk
-     version: "0.0.0"
-+  flutter_web_plugins:
-+    dependency: transitive
-+    description: flutter
-+    source: sdk
-+    version: "0.0.0"
-   freezed:
-     dependency: "direct dev"
-     description:
-@@ -352,6 +405,70 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "4.1.2"
-+  image_picker:
-+    dependency: "direct main"
-+    description:
-+      name: image_picker
-+      sha256: "021834d9c0c3de46bf0fe40341fa07168407f694d9b2bb18d532dc1261867f7a"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "1.1.2"
-+  image_picker_android:
-+    dependency: transitive
-+    description:
-+      name: image_picker_android
-+      sha256: "317a5d961cec5b34e777b9252393f2afbd23084aa6e60fcf601dcf6341b9ebeb"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.8.12+23"
-+  image_picker_for_web:
-+    dependency: transitive
-+    description:
-+      name: image_picker_for_web
-+      sha256: "717eb042ab08c40767684327be06a5d8dbb341fe791d514e4b92c7bbe1b7bb83"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "3.0.6"
-+  image_picker_ios:
-+    dependency: transitive
-+    description:
-+      name: image_picker_ios
-+      sha256: "05da758e67bc7839e886b3959848aa6b44ff123ab4b28f67891008afe8ef9100"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.8.12+2"
-+  image_picker_linux:
-+    dependency: transitive
-+    description:
-+      name: image_picker_linux
-+      sha256: "34a65f6740df08bbbeb0a1abd8e6d32107941fd4868f67a507b25601651022c9"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.2.1+2"
-+  image_picker_macos:
-+    dependency: transitive
-+    description:
-+      name: image_picker_macos
-+      sha256: "1b90ebbd9dcf98fb6c1d01427e49a55bd96b5d67b8c67cf955d60a5de74207c1"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.2.1+2"
-+  image_picker_platform_interface:
-+    dependency: transitive
-+    description:
-+      name: image_picker_platform_interface
-+      sha256: "886d57f0be73c4b140004e78b9f28a8914a09e50c2d816bdd0520051a71236a0"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "2.10.1"
-+  image_picker_windows:
-+    dependency: transitive
-+    description:
-+      name: image_picker_windows
-+      sha256: "6ad07afc4eb1bc25f3a01084d28520496c4a3bb0cb13685435838167c9dcedeb"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "0.2.1+1"
-   intl:
-     dependency: "direct main"
-     description:
-@@ -472,6 +589,14 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "2.0.0"
-+  mobile_scanner:
-+    dependency: "direct main"
-+    description:
-+      name: mobile_scanner
-+      sha256: "54005bdea7052d792d35b4fef0f84ec5ddc3a844b250ecd48dc192fb9b4ebc95"
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "7.0.1"
-   package_config:
-     dependency: transitive
-     description:
-@@ -685,6 +810,14 @@ packages:
-       url: "https://pub.dev"
-     source: hosted
-     version: "0.7.4"
-+  timer_count_down:
-+    dependency: "direct main"
-+    description:
-+      name: timer_count_down
-+      sha256: d025d408c2654e497ca0bd4bde014bd7509d4c6397af4ed23a0f9b692bbcf337
-+      url: "https://pub.dev"
-+    source: hosted
-+    version: "2.2.2"
-   timing:
-     dependency: transitive
-     description:
-@@ -767,4 +900,4 @@ packages:
-     version: "3.1.3"
- sdks:
-   dart: ">=3.8.1 <4.0.0"
--  flutter: ">=3.27.0"
-+  flutter: ">=3.29.0"
-diff --git a/pubspec.yaml b/pubspec.yaml
-index 0693af7..7f38674 100644
---- a/pubspec.yaml
-+++ b/pubspec.yaml
-@@ -44,6 +44,9 @@ dependencies:
-   google_generative_ai: ^0.4.7 #Yapay Zeka asistan için
-   cupertino_icons: ^1.0.6
-   intl: ^0.20.2
-+  timer_count_down: ^2.2.2
-+  mobile_scanner: ^7.0.1
-+  image_picker: ^1.1.2
- 
- dev_dependencies:
-   flutter_test:
-diff --git a/windows/flutter/generated_plugin_registrant.cc b/windows/flutter/generated_plugin_registrant.cc
-index 8b6d468..77ab7a0 100644
---- a/windows/flutter/generated_plugin_registrant.cc
-+++ b/windows/flutter/generated_plugin_registrant.cc
-@@ -6,6 +6,9 @@
- 
- #include "generated_plugin_registrant.h"
- 
-+#include <file_selector_windows/file_selector_windows.h>
- 
- void RegisterPlugins(flutter::PluginRegistry* registry) {
-+  FileSelectorWindowsRegisterWithRegistrar(
-+      registry->GetRegistrarForPlugin("FileSelectorWindows"));
- }
-diff --git a/windows/flutter/generated_plugins.cmake b/windows/flutter/generated_plugins.cmake
-index b93c4c3..a423a02 100644
---- a/windows/flutter/generated_plugins.cmake
-+++ b/windows/flutter/generated_plugins.cmake
-@@ -3,6 +3,7 @@
- #
- 
- list(APPEND FLUTTER_PLUGIN_LIST
-+  file_selector_windows
- )
- 
- list(APPEND FLUTTER_FFI_PLUGIN_LIST
diff --git a/pubspec.lock b/pubspec.lock
index cda4b0b..1c892fa 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -9,6 +9,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "76.0.0"
+  _flutterfire_internals:
+    dependency: transitive
+    description:
+      name: _flutterfire_internals
+      sha256: dda4fd7909a732a014239009aa52537b136f8ce568de23c212587097887e2307
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.56"
   _macros:
     dependency: transitive
     description: dart
@@ -38,6 +46,62 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.13.0"
+  audioplayers:
+    dependency: "direct main"
+    description:
+      name: audioplayers
+      sha256: e653f162ddfcec1da2040ba2d8553fff1662b5c2a5c636f4c21a3b11bee497de
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.5.0"
+  audioplayers_android:
+    dependency: transitive
+    description:
+      name: audioplayers_android
+      sha256: "60a6728277228413a85755bd3ffd6fab98f6555608923813ce383b190a360605"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.2.1"
+  audioplayers_darwin:
+    dependency: transitive
+    description:
+      name: audioplayers_darwin
+      sha256: "0811d6924904ca13f9ef90d19081e4a87f7297ddc19fc3d31f60af1aaafee333"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.0"
+  audioplayers_linux:
+    dependency: transitive
+    description:
+      name: audioplayers_linux
+      sha256: f75bce1ce864170ef5e6a2c6a61cd3339e1a17ce11e99a25bae4474ea491d001
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.2.1"
+  audioplayers_platform_interface:
+    dependency: transitive
+    description:
+      name: audioplayers_platform_interface
+      sha256: "0e2f6a919ab56d0fec272e801abc07b26ae7f31980f912f24af4748763e5a656"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.1.1"
+  audioplayers_web:
+    dependency: transitive
+    description:
+      name: audioplayers_web
+      sha256: "1c0f17cec68455556775f1e50ca85c40c05c714a99c5eb1d2d57cc17ba5522d7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.1.1"
+  audioplayers_windows:
+    dependency: transitive
+    description:
+      name: audioplayers_windows
+      sha256: "4048797865105b26d47628e6abb49231ea5de84884160229251f37dfcbe52fd7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.2.1"
   boolean_selector:
     dependency: transitive
     description:
@@ -110,6 +174,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "8.10.1"
+  cached_network_image:
+    dependency: "direct main"
+    description:
+      name: cached_network_image
+      sha256: "7c1183e361e5c8b0a0f21a28401eecdbde252441106a9816400dd4c2b2424916"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.4.1"
+  cached_network_image_platform_interface:
+    dependency: transitive
+    description:
+      name: cached_network_image_platform_interface
+      sha256: "35814b016e37fbdc91f7ae18c8caf49ba5c88501813f73ce8a07027a395e2829"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.1.1"
+  cached_network_image_web:
+    dependency: transitive
+    description:
+      name: cached_network_image_web
+      sha256: "980842f4e8e2535b8dbd3d5ca0b1f0ba66bf61d14cc3a17a9b4788a3685ba062"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.1"
   characters:
     dependency: transitive
     description:
@@ -134,6 +222,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.1.2"
+  cloud_firestore:
+    dependency: "direct main"
+    description:
+      name: cloud_firestore
+      sha256: "80cafe016ea12e4b76737487784dc659720065705445be547d2f47aaaa3f2874"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.6.9"
+  cloud_firestore_platform_interface:
+    dependency: transitive
+    description:
+      name: cloud_firestore_platform_interface
+      sha256: "9c5adf444b6e4eca15ecbc497678fba6d9944041fbf22810b756269ddefa75c7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.6.9"
+  cloud_firestore_web:
+    dependency: transitive
+    description:
+      name: cloud_firestore_web
+      sha256: "884c153ac66cdef469ca5e55bf71d979c3b53dc20a4c1662fae5c07bf603d878"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.4.9"
   code_builder:
     dependency: transitive
     description:
@@ -262,6 +374,102 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.9.3+4"
+  firebase_app_check:
+    dependency: "direct main"
+    description:
+      name: firebase_app_check
+      sha256: "09dccc2f132312d9749dd2fe887e307b413066e664aac45cce3d95cebe50e8ae"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.3.2+7"
+  firebase_app_check_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_app_check_platform_interface
+      sha256: a468aba05b43f7e427fe8151aa61d97d24812ef4dd5d6bd175473c8881be46af
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.1.1+7"
+  firebase_app_check_web:
+    dependency: transitive
+    description:
+      name: firebase_app_check_web
+      sha256: "8c9ef22679402e1cecdcfd4d20e87a6dd7e1c99cfc4f0a8abf38db625d39a9a6"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.2.0+11"
+  firebase_auth:
+    dependency: "direct main"
+    description:
+      name: firebase_auth
+      sha256: "10ddd766bd3d3baf1cc8fed544ef83a2c0e6027514a020e56114212ffe1036f2"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.6.0"
+  firebase_auth_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_auth_platform_interface
+      sha256: fde52352bfd553f5e38239b868e1e6fe6c1a6af542f5cc547554c61fef30b99b
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.7.0"
+  firebase_auth_web:
+    dependency: transitive
+    description:
+      name: firebase_auth_web
+      sha256: "33a0e6521a1c8c476949cc4f2f7b7d9ed8f99514b08dd905fdb9546d2391e5d9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.15.0"
+  firebase_core:
+    dependency: "direct main"
+    description:
+      name: firebase_core
+      sha256: "420d9111dcf095341f1ea8fdce926eef750cf7b9745d21f38000de780c94f608"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.14.0"
+  firebase_core_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_core_platform_interface
+      sha256: d7253d255ff10f85cfd2adaba9ac17bae878fa3ba577462451163bd9f1d1f0bf
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.4.0"
+  firebase_core_web:
+    dependency: transitive
+    description:
+      name: firebase_core_web
+      sha256: ddd72baa6f727e5b23f32d9af23d7d453d67946f380bd9c21daf474ee0f7326e
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.23.0"
+  firebase_storage:
+    dependency: "direct main"
+    description:
+      name: firebase_storage
+      sha256: a14390edb4b7a119297ddd09773421233ffddcfa1f8dcb670d9ce71672fdb624
+      url: "https://pub.dev"
+    source: hosted
+    version: "12.4.7"
+  firebase_storage_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_storage_platform_interface
+      sha256: d6c7a32c714cd7d59b61a5c610137695547986b8a5abe71aaf71197d6d255006
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.2.7"
+  firebase_storage_web:
+    dependency: transitive
+    description:
+      name: firebase_storage_web
+      sha256: "45ad71124862ef6d3a68770edc0aaefb854c0b4781aa96e9b0ec10400af03861"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.10.14"
   fixnum:
     dependency: transitive
     description:
@@ -275,6 +483,14 @@ packages:
     description: flutter
     source: sdk
     version: "0.0.0"
+  flutter_cache_manager:
+    dependency: transitive
+    description:
+      name: flutter_cache_manager
+      sha256: "400b6592f16a4409a7f2bb929a9a7e38c72cceb8ffb99ee57bbf2cb2cecf8386"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.4.1"
   flutter_lints:
     dependency: "direct dev"
     description:
@@ -349,6 +565,54 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.4.7"
+  google_identity_services_web:
+    dependency: transitive
+    description:
+      name: google_identity_services_web
+      sha256: "5d187c46dc59e02646e10fe82665fc3884a9b71bc1c90c2b8b749316d33ee454"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.3.3+1"
+  google_sign_in:
+    dependency: "direct main"
+    description:
+      name: google_sign_in
+      sha256: d0a2c3bcb06e607bb11e4daca48bd4b6120f0bbc4015ccebbe757d24ea60ed2a
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.0"
+  google_sign_in_android:
+    dependency: transitive
+    description:
+      name: google_sign_in_android
+      sha256: d5e23c56a4b84b6427552f1cf3f98f716db3b1d1a647f16b96dbb5b93afa2805
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.2.1"
+  google_sign_in_ios:
+    dependency: transitive
+    description:
+      name: google_sign_in_ios
+      sha256: "102005f498ce18442e7158f6791033bbc15ad2dcc0afa4cf4752e2722a516c96"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.9.0"
+  google_sign_in_platform_interface:
+    dependency: transitive
+    description:
+      name: google_sign_in_platform_interface
+      sha256: "5f6f79cf139c197261adb6ac024577518ae48fdff8e53205c5373b5f6430a8aa"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.0"
+  google_sign_in_web:
+    dependency: transitive
+    description:
+      name: google_sign_in_web
+      sha256: "460547beb4962b7623ac0fb8122d6b8268c951cf0b646dd150d60498430e4ded"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.12.4+4"
   graphs:
     dependency: transitive
     description:
@@ -597,6 +861,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "7.0.1"
+  octo_image:
+    dependency: transitive
+    description:
+      name: octo_image
+      sha256: "34faa6639a78c7e3cbe79be6f9f96535867e879748ade7d17c9b1ae7536293bd"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.0"
   package_config:
     dependency: transitive
     description:
@@ -709,6 +981,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.6.1"
+  rxdart:
+    dependency: transitive
+    description:
+      name: rxdart
+      sha256: "5c3004a4a8dbb94bd4bf5412a4def4acdaa12e12f269737a5751369e12d1a962"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.28.0"
   shelf:
     dependency: transitive
     description:
@@ -754,6 +1034,54 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.10.1"
+  sprintf:
+    dependency: transitive
+    description:
+      name: sprintf
+      sha256: "1fc9ffe69d4df602376b52949af107d8f5703b77cda567c4d7d86a0693120f23"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.0"
+  sqflite:
+    dependency: transitive
+    description:
+      name: sqflite
+      sha256: e2297b1da52f127bc7a3da11439985d9b536f75070f3325e62ada69a5c585d03
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.2"
+  sqflite_android:
+    dependency: transitive
+    description:
+      name: sqflite_android
+      sha256: "2b3070c5fa881839f8b402ee4a39c1b4d561704d4ebbbcfb808a119bc2a1701b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.1"
+  sqflite_common:
+    dependency: transitive
+    description:
+      name: sqflite_common
+      sha256: "84731e8bfd8303a3389903e01fb2141b6e59b5973cacbb0929021df08dddbe8b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.5"
+  sqflite_darwin:
+    dependency: transitive
+    description:
+      name: sqflite_darwin
+      sha256: "279832e5cde3fe99e8571879498c9211f3ca6391b0d818df4e17d9fff5c6ccb3"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.2"
+  sqflite_platform_interface:
+    dependency: transitive
+    description:
+      name: sqflite_platform_interface
+      sha256: "8dd4515c7bdcae0a785b0062859336de775e8c65db81ae33dd5445f35be61920"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.0"
   stack_trace:
     dependency: transitive
     description:
@@ -794,6 +1122,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.4.1"
+  synchronized:
+    dependency: transitive
+    description:
+      name: synchronized
+      sha256: "0669c70faae6270521ee4f05bffd2919892d42d1276e6c495be80174b6bc0ef6"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.3.1"
   term_glyph:
     dependency: transitive
     description:
@@ -834,6 +1170,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.4.0"
+  uuid:
+    dependency: transitive
+    description:
+      name: uuid
+      sha256: a5be9ef6618a7ac1e964353ef476418026db906c4facdedaa299b7a2e71690ff
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.5.1"
   vector_math:
     dependency: transitive
     description:
diff --git a/pubspec.yaml b/pubspec.yaml
index 7f38674..d097129 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -47,6 +47,14 @@ dependencies:
   timer_count_down: ^2.2.2
   mobile_scanner: ^7.0.1
   image_picker: ^1.1.2
+  firebase_core: ^3.14.0
+  firebase_auth: ^5.6.0
+  cloud_firestore: ^5.6.9
+  firebase_storage: ^12.4.7
+  firebase_app_check: ^0.3.2+7
+  google_sign_in: ^6.3.0
+  cached_network_image: ^3.4.1
+  audioplayers: ^6.5.0
 
 dev_dependencies:
   flutter_test:
@@ -77,6 +85,8 @@ flutter:
 
   # To add assets to your application, add an assets section, like this:
   assets:
+    - assets/
+    - assets/sounds/
 
   #   - images/a_dot_burr.jpeg
   #   - images/a_dot_ham.jpeg
diff --git a/windows/flutter/generated_plugin_registrant.cc b/windows/flutter/generated_plugin_registrant.cc
index 77ab7a0..4d97d2d 100644
--- a/windows/flutter/generated_plugin_registrant.cc
+++ b/windows/flutter/generated_plugin_registrant.cc
@@ -6,9 +6,24 @@
 
 #include "generated_plugin_registrant.h"
 
+#include <audioplayers_windows/audioplayers_windows_plugin.h>
+#include <cloud_firestore/cloud_firestore_plugin_c_api.h>
 #include <file_selector_windows/file_selector_windows.h>
+#include <firebase_auth/firebase_auth_plugin_c_api.h>
+#include <firebase_core/firebase_core_plugin_c_api.h>
+#include <firebase_storage/firebase_storage_plugin_c_api.h>
 
 void RegisterPlugins(flutter::PluginRegistry* registry) {
+  AudioplayersWindowsPluginRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("AudioplayersWindowsPlugin"));
+  CloudFirestorePluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("CloudFirestorePluginCApi"));
   FileSelectorWindowsRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("FileSelectorWindows"));
+  FirebaseAuthPluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FirebaseAuthPluginCApi"));
+  FirebaseCorePluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FirebaseCorePluginCApi"));
+  FirebaseStoragePluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FirebaseStoragePluginCApi"));
 }
diff --git a/windows/flutter/generated_plugins.cmake b/windows/flutter/generated_plugins.cmake
index a423a02..9a2114b 100644
--- a/windows/flutter/generated_plugins.cmake
+++ b/windows/flutter/generated_plugins.cmake
@@ -3,7 +3,12 @@
 #
 
 list(APPEND FLUTTER_PLUGIN_LIST
+  audioplayers_windows
+  cloud_firestore
   file_selector_windows
+  firebase_auth
+  firebase_core
+  firebase_storage
 )
 
 list(APPEND FLUTTER_FFI_PLUGIN_LIST
